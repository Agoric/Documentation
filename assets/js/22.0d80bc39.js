(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{384:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"amount-math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amount-math"}},[t._v("#")]),t._v(" Amount Math")]),t._v(" "),s("p",[t._v("Logic for manipulating "),s("code",[t._v("amounts")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"obtaining-an-amountmath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#obtaining-an-amountmath"}},[t._v("#")]),t._v(" Obtaining an AmountMath")]),t._v(" "),s("p",[t._v("There are three ways and circumstances you can get access to an "),s("code",[t._v("amountMath")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("You made its associated "),s("code",[t._v("mint")]),t._v(" and "),s("code",[t._v("issuer")]),t._v(" with "),s("code",[t._v("makeIssuerKit()")]),t._v(", so use the "),s("code",[t._v("amountMath")]),t._v(" returned from the call.")]),t._v(" "),s("li",[t._v("You are writing a Zoe contract and the "),s("code",[t._v("issuer")]),t._v(" is saved in Zoe, so call "),s("code",[t._v("zcf.getAmountMath(brand)")]),t._v(".")]),t._v(" "),s("li",[t._v("You receive or learn about an "),s("code",[t._v("issuer")]),t._v(" and are not writing a Zoe contract, so call "),s("code",[t._v("makeLocalAmountMath(issuer)")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"amountmath-kinds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-kinds"}},[t._v("#")]),t._v(" AmountMath Kinds")]),t._v(" "),s("p",[t._v("There are three different kinds of "),s("code",[t._v("amountMath")]),t._v(", each of which implements all the methods shown on this page. You only have to specify the "),s("code",[t._v("amountMath")]),t._v(" kind when creating its associated "),s("code",[t._v("issuer")]),t._v(".")]),t._v(" "),s("p",[t._v("The three kinds of "),s("code",[t._v("amountMath")]),t._v(" each implement all of the same set of API methods (i.e. "),s("code",[t._v("amountMath")]),t._v(" methods are polymorphic). We recommend you import the "),s("code",[t._v("MathKind")]),t._v(" values from "),s("code",[t._v("@agoric/ERTP")]),t._v(" instead of making the strings yourself.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("MathKind.NAT")]),t._v(" ("),s("code",[t._v("nat")]),t._v("): Used with fungible assets. "),s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("values")]),t._v(" are natural numbers (non-negative integers).")]),t._v(" "),s("li",[s("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),s("code",[t._v("strSet")]),t._v("): Used with non-fungible assets. "),s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("values")]),t._v(" are strings.")]),t._v(" "),s("li",[s("code",[t._v("MathKind.SET")]),t._v(" ("),s("code",[t._v("set")]),t._v("): Used with non-fungible assets. "),s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("values")]),t._v(" are objects or records with multiple properties.")])]),t._v(" "),s("p",[t._v("Use "),s("code",[t._v("makeIssuerKit(allegedName, MathKind)")]),t._v(" to specify which "),s("code",[t._v("amountMath")]),t._v("\nkind your contract uses. The second parameter, "),s("code",[t._v("MathKind")]),t._v(" is optional and\ndefaults to "),s("code",[t._v("MathKind.NAT")]),t._v(" if not given. For example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to MathKind.NAT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobars'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kitties'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amount"}},[t._v("#")]),t._v(" Amount")]),t._v(" "),s("p",[t._v("An "),s("code",[t._v("amount")]),t._v(' is a description of digital assets, answering the\nquestions "how much?" and "of what kind?". It is a '),s("code",[t._v("value")]),t._v(' ("how much")\nlabeled with a '),s("code",[t._v("brand")]),t._v(' ("of what kind"). '),s("code",[t._v("AmountMath")]),t._v(" executes the logic\nof how an "),s("code",[t._v("amount")]),t._v(" changes when digital assets are merged, separated, or\notherwise manipulated. For example, a deposit of 2 Quatloos into a "),s("code",[t._v("purse")]),t._v("\nthat already has 3 Quatloos gives a new balance of 5 Quatloos.\nAn empty "),s("code",[t._v("purse")]),t._v(" has 0 Quatloos.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("someAmount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  brand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" someBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" Value")]),t._v(" "),s("p",[s("code",[t._v("values")]),t._v(" describe how much of something can be owned or shared. A fungible "),s("code",[t._v("value")]),t._v(" is normally represented by a natural number. Other "),s("code",[t._v("values")]),t._v(" may be represented as strings naming a particular right, or an arbitrary object that sensibly represents the rights at issue.")]),t._v(" "),s("h2",{attrs:{id:"makelocalamountmath-issuer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makelocalamountmath-issuer"}},[t._v("#")]),t._v(" makeLocalAmountMath(issuer)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("issuer")]),t._v(": "),s("code",[t._v("{issuer}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{ Promise<AmountMath> }")])])]),t._v(" "),s("p",[t._v("Creates and returns a local "),s("code",[t._v("amountMath")]),t._v(" object. The new\nlocal copy uses the same remote "),s("code",[t._v("brand")]),t._v(" as the "),s("code",[t._v("issuer")]),t._v(" does.")]),t._v(" "),s("p",[t._v("This should be used when you need an "),s("code",[t._v("amountMath")]),t._v(", and receive or\nlearn about an "),s("code",[t._v("issuer")]),t._v(", and are not writing a Zoe contract.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" makeLocalAmountMath "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosAmountMath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeLocalAmountMath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosIssuer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-getbrand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getbrand"}},[t._v("#")]),t._v(" amountMath.getBrand()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: "),s("code",[t._v("{Brand}")])])]),t._v(" "),s("p",[t._v("Return the "),s("code",[t._v("brand")]),t._v(" the "),s("code",[t._v("amountMath")]),t._v(" works on.")]),t._v(" "),s("p",[t._v("The association cannot be broken or changed;\na particular "),s("code",[t._v("amountMath")]),t._v(" and its methods\nwill always and only be used on "),s("code",[t._v("amounts")]),t._v(" that have that\n"),s("code",[t._v("amountMath")]),t._v("'s initially associated "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Get the amountMath's associated brand.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exampleBrand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exampleAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBrand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-getamountmathkind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getamountmathkind"}},[t._v("#")]),t._v(" amountMath.getAmountMathKind()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: "),s("code",[t._v("{String}")])])]),t._v(" "),s("p",[t._v("Get the kind ("),s("code",[t._v("MathKind.NAT")]),t._v(", "),s("code",[t._v("MathKind.STRING_SET")]),t._v(", "),s("code",[t._v("MathKind.SET")]),t._v(") of the "),s("code",[t._v("amountMath")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMathKind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For example, returns MathKind.NAT")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-make-allegedvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-make-allegedvalue"}},[t._v("#")]),t._v(" amountMath.make(allegedValue)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("allegedValue")]),t._v(" "),s("code",[t._v("{Value}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Make an "),s("code",[t._v("amount")]),t._v(" from a "),s("code",[t._v("value")]),t._v(" by adding the "),s("code",[t._v("brand")]),t._v(" associated with\nthe "),s("code",[t._v("amountMath")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//amount837 = { value: 837, brand: quatloos }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amount837 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("837")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-coerce-allegedamount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-coerce-allegedamount"}},[t._v("#")]),t._v(" amountMath.coerce(allegedAmount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("allegedAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Make sure this "),s("code",[t._v("amount")]),t._v(" is valid and if so, return it.\nIf not valid, throws an exception. This checks if\nan "),s("code",[t._v("amount")]),t._v(" coming from elsewhere is for the expected "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos50 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns the same amount as quatloos50")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" verifiedAmount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatlooAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("coerce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allegedAmount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("h2",{attrs:{id:"amountmath-getvalue-amount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getvalue-amount"}},[t._v("#")]),t._v(" amountMath.getValue(amount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Value}")])])]),t._v(" "),s("p",[t._v("Returns the "),s("code",[t._v("value")]),t._v(" from the given "),s("code",[t._v("amount")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos123 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns 123")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-getempty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getempty"}},[t._v("#")]),t._v(" amountMath.getEmpty()")]),t._v(" "),s("ul",[s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Returns the "),s("code",[t._v("amount")]),t._v(" representing an empty "),s("code",[t._v("amount")]),t._v(" for the "),s("code",[t._v("amountMath")]),t._v("'s\nassociated "),s("code",[t._v("brand")]),t._v(". This is the identity element for "),s("code",[t._v("AmountMath.add()")]),t._v("\nand "),s("code",[t._v("AmountMath.subtract()")]),t._v(". The empty "),s("code",[t._v("value")]),t._v(" depends\non whether the "),s("code",[t._v("amountMath")]),t._v(" is "),s("code",[t._v("MathKind.NAT")]),t._v(" ("),s("code",[t._v("0")]),t._v("), "),s("code",[t._v("MathKind.SET")]),t._v(" ("),s("code",[t._v("[]")]),t._v("),\nor "),s("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),s("code",[t._v("[]")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an empty amount for this amountMath.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since this is a fungible amount it returns an amount")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with 0 as its value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-isempty-amount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isempty-amount"}},[t._v("#")]),t._v(" amountMath.isEmpty(amount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Boolean}")])])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("amount")]),t._v(" is empty. Otherwise returns "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns false")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-isgte-leftamount-rightamount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isgte-leftamount-rightamount"}},[t._v("#")]),t._v(" amountMath.isGTE(leftAmount, rightAmount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{boolean}")])])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("leftAmount")]),t._v(" is greater than or equal to\nthe "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("rightAmount")]),t._v(". Both "),s("code",[t._v("amount")]),t._v(" arguments must have the same\n"),s("code",[t._v("brand")]),t._v(" as this "),s("code",[t._v("amountMath")]),t._v(".")]),t._v(" "),s("p",[t._v("For non-fungible "),s("code",[t._v("values")]),t._v(', what "greater than or equal to" is depends on the\nkind of '),s("code",[t._v("amountMath")]),t._v(". For example, { 'seat 1', 'seat 2' } is considered\ngreater than { 'seat 2' } because the former both contains all of the latter's\ncontents and has additional elements.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-isequal-leftamount-rightamount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isequal-leftamount-rightamount"}},[t._v("#")]),t._v(" amountMath.isEqual(leftAmount, rightAmount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{boolean}")])])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("leftAmount")]),t._v(" is equal to\nthe "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("rightAmount")]),t._v(". Both "),s("code",[t._v("amount")]),t._v(" arguments must have the same\n"),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("For non-fungible "),s("code",[t._v("values")]),t._v(', "equal to" depends on the kind of '),s("code",[t._v("amountMath")]),t._v(".\nFor example, { 'seat 1', 'seat 2' } is considered\nunequal to { 'seat 2' } because the number of items in the former is\ndifferent from that of the latter. Similarly { 'seat 1',  'seat 3'  } and { 'seat 2' }\nare considered unequal because the latter has elements that are not contained in the former.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nquatloosAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-add-leftamount-rightamount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-add-leftamount-rightamount"}},[t._v("#")]),t._v(" amountMath.add(leftAmount, rightAmount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Returns a new "),s("code",[t._v("amount")]),t._v(" that is the union of "),s("code",[t._v("leftAmount")]),t._v(" and "),s("code",[t._v("rightAmount")]),t._v(". Both\narguments must be of the same "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("For fungible "),s("code",[t._v("amounts")]),t._v(" this means adding their "),s("code",[t._v("values")]),t._v(". For non-fungible\n"),s("code",[t._v("amounts")]),t._v(", it usually means including all of the elements from "),s("code",[t._v("leftAmount")]),t._v("\nand "),s("code",[t._v("rightAmount")]),t._v(".")]),t._v(" "),s("p",[t._v("If either "),s("code",[t._v("leftAmount")]),t._v(" or "),s("code",[t._v("rightAmount")]),t._v(" is empty, it just returns the non-empty\n"),s("code",[t._v("amount")]),t._v(" argument. If both are empty, it returns an empty "),s("code",[t._v("amount")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsIssuer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),t._v("'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myItemsAmountMath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeLocalAmountMath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsIssuer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount whose value is ['1', '2', '4', '3']")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" itemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-subtract-leftamount-rightamount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-subtract-leftamount-rightamount"}},[t._v("#")]),t._v(" amountMath.subtract(leftAmount, rightAmount)")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Returns a new "),s("code",[t._v("amount")]),t._v(" that is the "),s("code",[t._v("leftAmount")]),t._v(" minus the "),s("code",[t._v("rightAmount")]),t._v(" (i.e.\neverything in the "),s("code",[t._v("leftAmount")]),t._v(" that is not in the "),s("code",[t._v("rightAmount")]),t._v("). If "),s("code",[t._v("leftAmount")]),t._v("\ndoesn't include "),s("code",[t._v("rightAmount")]),t._v(" (subtraction results in a negative), it throws an\nerror. Because "),s("code",[t._v("leftAmount")]),t._v(" must include "),s("code",[t._v("rightAmount")]),t._v(", this is "),s("strong",[t._v("not")]),t._v("\nequivalent to set subtraction.")]),t._v(" "),s("p",[s("code",[t._v("leftAmount")]),t._v(" and "),s("code",[t._v("rightAmount")]),t._v(" must be of the same "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("rightAmount")]),t._v(" is empty, it returns the "),s("code",[t._v("leftAmount")]),t._v(". If both arguments are\nempty, it returns an empty "),s("code",[t._v("amount")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsIssuer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myItemsLocalAmountMath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeLocalAmountMath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsIssuer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns ['1', '4']")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subtractedList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" itemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Throws error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" itemsAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"related-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#related-methods"}},[t._v("#")]),t._v(" Related Methods")]),t._v(" "),s("p",[t._v("The following methods on other ERTP components and objects also either operate\non or return an "),s("code",[t._v("amount")]),t._v(" or "),s("code",[t._v("amountMath")]),t._v(". While a brief description is given for each, you should\nclick through to a method's main documentation entry for full details on\nwhat it does and how to use it.")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"./issuer.html#issuer-getamountof-payment"}},[t._v("`issuer.getAmountOf(payment)`")]),t._v(" "),s("ul",[s("li",[t._v("Returns the "),s("code",[t._v("amount")]),t._v(" description of the "),s("code",[t._v("payment")])])])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"./issuer.html#issuer-getamountmathkind"}},[t._v("`issuer.getAmountMathKind()`")]),t._v(" "),s("ul",[s("li",[t._v("Returns the kind of the "),s("code",[t._v("issuer")]),t._v("'s associated "),s("code",[t._v("amountMath")]),t._v(".")])])],1),t._v(" "),s("li",[s("a",{attrs:{href:"https://agoric.com/documentation/zoe/api/zoe-contract-facet.html#zcf-getamountmath-brand",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("zcf.getAmountMath(brand)")]),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[t._v("Returns the "),s("code",[t._v("amountMath")]),t._v(" associated with the "),s("code",[t._v("brand")]),t._v(".")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);