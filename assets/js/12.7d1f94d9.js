(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{354:function(t,a,s){t.exports=s.p+"assets/img/amount-math.11137116.svg"},394:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"amount-math"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amount-math"}},[t._v("#")]),t._v(" Amount Math")]),t._v(" "),n("p",[n("img",{attrs:{src:s(354),alt:"AmountMath methods"}})]),t._v(" "),n("p",[t._v("Depositing and withdrawing assets from a\n"),n("code",[t._v("purse")]),t._v(" and manipulating "),n("code",[t._v("payment")]),t._v(" amounts\nall require adding and subtracting digital assets. ERTP\nuses "),n("code",[t._v("amountMath")]),t._v(" methods for all these operations.")]),t._v(" "),n("p",[n("code",[t._v("amountMath")]),t._v(" methods also check their arguments' "),n("code",[t._v("brand")]),t._v(",\nthrowing an error if the wrong "),n("code",[t._v("brand")]),t._v(" was used.")]),t._v(" "),n("p",[t._v("An "),n("code",[t._v("amountMath")]),t._v(" is one of three different kinds, each of which\nimplements the same methods. Which kind is used for a particular "),n("code",[t._v("brand")]),t._v(" depends\non what was specified when the "),n("code",[t._v("brand")]),t._v(" and its "),n("code",[t._v("issuer")]),t._v(" were\ncreated. The kinds are:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("MathKind.NAT")]),t._v(" ("),n("code",[t._v("nat")]),t._v("): Used with fungible assets. "),n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("values")]),t._v(" are natural numbers (non-negative integers).")]),t._v(" "),n("li",[n("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),n("code",[t._v("strSet")]),t._v("): Used with non-fungible assets. "),n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("values")]),t._v(" are strings.")]),t._v(" "),n("li",[n("code",[t._v("MathKind.SET")]),t._v(" ("),n("code",[t._v("set")]),t._v("): Used with non-fungible assets. "),n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("values")]),t._v(" are objects or records with multiple properties.")])]),t._v(" "),n("p",[n("code",[t._v("makeIssuerKit(allegedName, amountMathKind)")]),t._v(" creates a new "),n("code",[t._v("issuer")]),t._v(",\n"),n("code",[t._v("mint")]),t._v(", "),n("code",[t._v("brand")]),t._v(", and "),n("code",[t._v("amountMath")]),t._v(".\nThe second, optional, argument specifies which kind\nof "),n("code",[t._v("amountMath")]),t._v(" is used for the "),n("code",[t._v("brand")]),t._v(" in a one-to-one\nassociation with the new "),n("code",[t._v("issuer")]),t._v(". It defaults to "),n("code",[t._v("MathKind.NAT")]),t._v(".")]),t._v(" "),n("p",[t._v("For example:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to MathKind.NAT")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])]),n("p",[t._v("On the other hand, if you are not writing a Zoe contract and need to\nuse "),n("code",[t._v("amountMath")]),t._v(", you probably want to\nmake and use a local "),n("code",[t._v("amountMath")]),t._v(" whose methods will work synchronously.")]),t._v(" "),n("p",[n("code",[t._v("makeLocalAmountMath(issuer)")]),t._v(" returns a promise for a local "),n("code",[t._v("AmountMath")]),t._v("\nthat works on the same "),n("code",[t._v("brand")]),t._v(" as the one associated with the "),n("code",[t._v("issuer")]),t._v(" argument.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosLocalAmountMath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeLocalAmountMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])]),n("h2",{attrs:{id:"amountmath-methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-methods"}},[t._v("#")]),t._v(" AmountMath Methods")]),t._v(" "),n("p",[t._v("The following is a brief description and example of each "),n("code",[t._v("amountMath")]),t._v(" method. For\nmore detail, click the method's name to go to its entry in the "),n("RouterLink",{attrs:{to:"/ertp/api/"}},[t._v("ERTP\nAPI Reference")]),t._v(".")],1),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("Information Getting Methods")])]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-getbrand"}},[t._v("amountMath.getBrand()")]),t._v(" "),n("ul",[n("li",[t._v("For this "),n("code",[t._v("amountMath")]),t._v(", return the "),n("code",[t._v("brand")]),t._v(" it can operate on..")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosBrand "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBrand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-getvalue-amount"}},[t._v("amountMath.getValue(amount)")]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("value")]),t._v(" of the "),n("code",[t._v("amount")]),t._v(" argument.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos123 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns 123")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos123"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-getamountmathkind"}},[t._v("amountMath.getAmountMathKind()")]),t._v(" "),n("ul",[n("li",[t._v("Returns a string of either "),n("code",[t._v("'nat'")]),t._v(", "),n("code",[t._v("'str'")]),t._v(", or "),n("code",[t._v("'strSet'")]),t._v(",\nindicating the kind of values this\n"),n("code",[t._v("amountMath")]),t._v(" operates on.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// amountMath kind defaults to `nat`")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" kind "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMathKind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns 'nat'")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-getempty"}},[t._v("amountMath.getEmpty()")]),t._v(" "),n("ul",[n("li",[t._v("Returns an "),n("code",[t._v("amount")]),t._v(" representing an empty "),n("code",[t._v("amount")]),t._v(" (which is the identity\nelement for the "),n("code",[t._v("amountMath")]),t._v(" "),n("code",[t._v("add()")]),t._v(" and "),n("code",[t._v("subtract()")]),t._v("\noperations. Note that this value varies depending on the\n"),n("code",[t._v("brand")]),t._v(" and its "),n("code",[t._v("amountMath")]),t._v(" kind ("),n("code",[t._v("MathKind.NAT")]),t._v(", "),n("code",[t._v("MathKind.STR")]),t._v(", or\n"),n("code",[t._v("MathKind.STRING_SET")]),t._v(").")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an empty amount for this issuer.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since this is a fungible amount it returns 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Comparison Methods")])]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-isempty-amount"}},[t._v("amountMath.isEmpty(amount)")]),t._v(" "),n("ul",[n("li",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if its "),n("code",[t._v("amount")]),t._v(" argument is empty, otherwise "),n("code",[t._v("false")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns false")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-isgte-leftamount-rightamount"}},[t._v("amountMath.isGTE(leftAmount, rightAmount)")]),t._v(" "),n("ul",[n("li",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("leftAmount")]),t._v(" argument is greater than or equal\nto the "),n("code",[t._v("rightAmount")]),t._v(" argument, otherwise "),n("code",[t._v("false")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-isequal-leftamount-rightamount"}},[t._v("amountMath.isEqual(leftAmount, rightAmount)")]),t._v(" "),n("ul",[n("li",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("leftAmount")]),t._v(" argument equals the\n"),n("code",[t._v("rightAmount")]),t._v(" argument")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" anotherQuatloos1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" anotherQuatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-coerce-allegedamount"}},[t._v("amountMath.coerce(allegedAmount)")]),t._v(" "),n("ul",[n("li",[t._v("Takes an "),n("code",[t._v("amount")]),t._v(" and returns it if it's a valid "),n("code",[t._v("amount")]),t._v(".\nIf invalid, it throws an error.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos50 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nquatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("coerce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos50"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equal to quatloos50")])])])])])])],1)])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Manipulator Methods")])]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-add-leftamount-rightamount"}},[t._v("amountMath.add(leftAmount, rightAmount)")]),t._v(" "),n("ul",[n("li",[t._v("Returns an "),n("code",[t._v("amount")]),t._v(" that is the union of the "),n("code",[t._v("leftAmount")]),t._v(" and "),n("code",[t._v("rightAmount")]),t._v(" "),n("code",[t._v("amount")]),t._v(" arguments. For a fungible "),n("code",[t._v("amount")]),t._v(", this means add their\nvalues.  For a non-fungible "),n("code",[t._v("amount")]),t._v(", it usually means\nincluding all elements from both "),n("code",[t._v("leftAmount")]),t._v(" and "),n("code",[t._v("rightAmount")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'strSet'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount containing all of ['1', '2', '4', '3']")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-subtract-leftamount-rightamount"}},[t._v("amountMath.subtract(leftAmount, rightAmount)")]),t._v(" "),n("ul",[n("li",[t._v("Returns a new "),n("code",[t._v("amount")]),t._v(" that is the "),n("code",[t._v("leftAmount")]),t._v(" argument minus\nthe "),n("code",[t._v("rightAmount")]),t._v(" argument  (i.e. for strings or objects\neverything in "),n("code",[t._v("leftAmount")]),t._v(" not in "),n("code",[t._v("rightAmount")]),t._v("). If "),n("code",[t._v("leftAmount")]),t._v("\ndoesn't include the contents of "),n("code",[t._v("rightAmount")]),t._v(", it throws an error.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'strSet'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountC "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns ['1', '4']")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subtractedList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Throws error")]),t._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("throws")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" myItemsAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  message"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some of the elements in right ((an object)) were not present in left ((an object))'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Amount Creation Methods")])]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-make-allegedvalue"}},[t._v("amountMath.make(allegedValue)")]),t._v(" "),n("ul",[n("li",[t._v("Takes a "),n("code",[t._v("value")]),t._v(" argument and returns an "),n("code",[t._v("amount")]),t._v(" by making a record\nwith the "),n("code",[t._v("value")]),t._v(" and the "),n("code",[t._v("brand")]),t._v(" associated with the "),n("code",[t._v("amountMath")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An `amount` with `value` = 837 and `brand` = Quatloos")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos837 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("837")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" anotherQuatloos837 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("837")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos837"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" anotherQuatloos837"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/amount-math.html#amountmath-getempty"}},[t._v("amountMath.getEmpty()")]),t._v(" "),n("ul",[n("li",[t._v("Returns an "),n("code",[t._v("amount")]),t._v(" representing an empty "),n("code",[t._v("amount")]),t._v(" (which is the identity\nelement for the "),n("code",[t._v("amountMath")]),t._v(" "),n("code",[t._v("add()")]),t._v(" and "),n("code",[t._v("subtract()")]),t._v("\noperations. Note that this value varies depending on "),n("code",[t._v("amountMath")]),t._v("'s associated\n"),n("code",[t._v("brand")]),t._v(" and whether "),n("code",[t._v("amountMath")]),t._v(" is of kind "),n("code",[t._v("MathKind.NAT")]),t._v(", "),n("code",[t._v("MathKind.STR")]),t._v(", or "),n("code",[t._v("MathKind.STRING_SET")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an empty amount for this issuer.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since this is a fungible amount it returns 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)])])]),t._v(" "),n("h2",{attrs:{id:"methods-on-other-objects"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methods-on-other-objects"}},[t._v("#")]),t._v(" Methods on other objects")]),t._v(" "),n("p",[t._v("These methods either use or return "),n("code",[t._v("amountMath")]),t._v(" objects:")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#makeissuerkit-allegedname-amountmathkind"}},[t._v("makeIssuerKit(allegedName, amountMathKind)")]),t._v(" "),n("ul",[n("li",[t._v("Creates a new "),n("code",[t._v("amountMath")]),t._v(" that uses the "),n("code",[t._v("amountMath")]),t._v(" kind\ndesignated by the "),n("code",[t._v("amountMathKind")]),t._v(" argument ("),n("code",[t._v("MathKind.NAT")]),t._v(", "),n("code",[t._v("MathKind.STR")]),t._v(",\n"),n("code",[t._v("MathKind.STRING_SET")]),t._v("). Also creates a new "),n("code",[t._v("mint")]),t._v(", "),n("code",[t._v("issuer")]),t._v(", and "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" brand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountmathkind"}},[t._v("issuer.getAmountMathKind()")]),t._v(" "),n("ul",[n("li",[t._v("Returns the kind of "),n("code",[t._v("amountMath")]),t._v(" ("),n("code",[t._v("MathKind.NAT")]),t._v(", "),n("code",[t._v("MathKind.STR")]),t._v(", or "),n("code",[t._v("MathKind.STRING_SET")]),t._v(").")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myAmountMathKind "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMathKind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/zoe/api/zoe-contract-facet.html#zcf-getamountmath-brand"}},[t._v("zcf.getAmountMath(brand)")]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("amountMath")]),t._v(" object associated with the "),n("code",[t._v("brand")]),t._v(" argument.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosAmountMath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zcf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);