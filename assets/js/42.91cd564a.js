(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{442:function(e,t,a){"use strict";a.r(t);var s=a(44),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"glossary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#glossary"}},[e._v("#")]),e._v(" Glossary")]),e._v(" "),a("p",[e._v("This page lists words, expressions, or concepts used by the Agoric technology stack.")]),e._v(" "),a("h2",{attrs:{id:"agoric-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#agoric-cli"}},[e._v("#")]),e._v(" Agoric CLI")]),e._v(" "),a("p",[e._v("A command line interface for installing dependencies and initializing, deploying, and starting Agoric projects.\nSee the "),a("RouterLink",{attrs:{to:"/guides/agoric-cli/"}},[e._v("Agoric CLI Guide")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"allegedname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allegedname"}},[e._v("#")]),e._v(" AllegedName")]),e._v(" "),a("p",[e._v("Human-readable name of a kind of rights. The alleged name should\nnot be trusted as an accurate depiction, since it is provided by\nthe maker of the mint and could be deceptive, but is useful for debugging and double-checking.")]),e._v(" "),a("p",[e._v("The AllegedName must be a string.")]),e._v(" "),a("h2",{attrs:{id:"allocation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allocation"}},[e._v("#")]),e._v(" Allocation")]),e._v(" "),a("p",[e._v("Allocations represent the "),a("a",{attrs:{href:"#amounts"}},[e._v("amounts")]),e._v(" to be paid out to each "),a("a",{attrs:{href:"#seat"}},[e._v("seat")]),e._v(" on exit from a contract instance. Possible\nexit causes are exercising an exit condition, the contract's explicit choice, or a crash or freeze. There are several methods\nfor getting the amounts currently allocated.")]),e._v(" "),a("p",[e._v("In more detail, Zoe's guarantee is each "),a("a",{attrs:{href:"#seat"}},[e._v("seat")]),e._v(" will either get what it asked for in its offer, or the return of what was "),a("a",{attrs:{href:"#escrow"}},[e._v("escrowed")]),e._v(".\nThe contract can reallocate fairly arbitrarily to achieve that. As contract code is visible to its clients, users can see\nwhat the contract intends to do.")]),e._v(" "),a("p",[e._v("Zoe enforces those terms by keeping track of a current allocation for each seat. The initial allocation is the deposit.\nThe contract can modify a seat's allocation as long as it never violates offer safety or rights conservation. i.e. it can't\nassign assets that weren't already in some allocation and it can't assign them to more than one seat. Also, goods can't\ndisappear from the total allocation.")]),e._v(" "),a("h2",{attrs:{id:"amountmath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amountmath"}},[e._v("#")]),e._v(" AmountMath")]),e._v(" "),a("p",[e._v("The AmountMath library executes the logic of how "),a("a",{attrs:{href:"#amounts"}},[e._v("amounts")]),e._v(" are changed when digital assets are merged, separated,\nor otherwise manipulated. For example, a deposit of 2 bucks into a purse that already has 3 bucks\ngives a new balance of 5 bucks. But, a deposit of a non-fungible theater ticket into a purse that already holds\nfive tickets isn't done by numeric addition. Instead, you have to combine two arrays, containing either\nstrings or objects/records.")]),e._v(" "),a("p",[a("code",[e._v("AmountMath")]),e._v(" has a single set of polymorphic\nmethods of two different asset kinds to deal with "),a("a",{attrs:{href:"#fungible"}},[e._v("fungible")]),e._v(" assets (values are natural numbers) and\n"),a("a",{attrs:{href:"#non-fungible"}},[e._v("non-fungible")]),e._v(" assets (values are an array or object). The two "),a("code",[e._v("AssetKinds")]),e._v(" are")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("AssetKind.NAT")]),e._v(": Used with fungible assets. Amount values are natural numbers (non-negative integers). Default value.")]),e._v(" "),a("li",[a("code",[e._v("AssetKind.SET")]),e._v(": Used with non-fungible assets. Amount values are\narrays of strings, numbers, objects, or other comparable values.\nValues should never include promises (they aren't comparable), or\npayments, purses, and anything else that can't be shared freely.")])]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/amount-math.html"}},[e._v("ERTP Guide's AmountMath section")]),e._v("\nand the "),a("RouterLink",{attrs:{to:"/ertp/api/amount-math.html"}},[e._v("ERTP API's AmountMath section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"amounts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amounts"}},[e._v("#")]),e._v(" Amounts")]),e._v(" "),a("p",[e._v("Amounts are the canonical description of tradable goods. They are manipulated\nby "),a("a",{attrs:{href:"#issuer"}},[e._v("issuers")]),e._v(" and "),a("a",{attrs:{href:"#mint"}},[e._v("mints")]),e._v(", and represent the goods and currency carried by\n"),a("a",{attrs:{href:"#purse"}},[e._v("purses")]),e._v(" and "),a("a",{attrs:{href:"#payment"}},[e._v("payments")]),e._v(". They represent things like currency, stock, and the\nabstract right to participate in a particular exchange.")]),e._v(" "),a("p",[e._v("An amount is comprised of a "),a("a",{attrs:{href:"#brand"}},[e._v("brand")]),e._v(" with an "),a("a",{attrs:{href:"#value"}},[e._v("value")]),e._v('. For example, "4 quatloos"\nis an amount with a value of "4" and a brand of the imaginary currency "quatloos".')]),e._v(" "),a("p",[a("strong",[e._v("Important")]),e._v(": Amounts are "),a("em",[e._v("descriptions")]),e._v(" of digital assets, not the actual assets. They have no\nintrinsic value. For example, to make you an offer to buy a magic sword in a game,\na party sends you an amount describing the asset of 5 Quatloos they're willing to trade for your\nsword. They don't send you the actual 5 Quatloos; that only happens when there is agreement on the\ntrade terms and they send you a payment, not an amount, of 5 Quatloos, the actual asset. Creating\na new "),a("code",[e._v("amount")]),e._v(" does "),a("strong",[e._v("not")]),e._v(" create new assets.")]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/amounts.html"}},[e._v("ERTP Guide's Amounts section")]),e._v("\nand the "),a("RouterLink",{attrs:{to:"/ertp/api/amount-math.html"}},[e._v("ERTP API's AmountMath section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"assetholder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assetholder"}},[e._v("#")]),e._v(" AssetHolder")]),e._v(" "),a("p",[a("a",{attrs:{href:"#purse"}},[e._v("Purses")]),e._v(" and "),a("a",{attrs:{href:"#payment"}},[e._v("payments")]),e._v(" are AssetHolders. These are objects that contain\ndigital assets in the quantity specified by an "),a("a",{attrs:{href:"#amounts"}},[e._v("amount")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigint"}},[e._v("#")]),e._v(" BigInt")]),e._v(" "),a("p",[e._v("JavaScript's "),a("code",[e._v("Number")]),e._v(" primitive only represents numbers up to 253 - 1. "),a("code",[e._v("BigInt")]),e._v(" is a built-in\nobject that can be used for arbitrarily large integers. Agoric uses "),a("code",[e._v("BigInts")]),e._v(" for times\nand "),a("code",[e._v("Amount")]),e._v(" "),a("code",[e._v("values")]),e._v(". See "),a("RouterLink",{attrs:{to:"/guides/js-programming/bigint.html"}},[e._v("here")]),e._v(" for more information.")],1),e._v(" "),a("h2",{attrs:{id:"board-agoric-board"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#board-agoric-board"}},[e._v("#")]),e._v(" Board (Agoric Board)")]),e._v(" "),a("p",[e._v("The Board is a shared, on-chain location where users can post a value and make it\naccessible to others. When a user posts a value, they receive a unique ID for the value.\nOthers can get the value just by knowing the ID. You can make an ID known by any\ncommunication method; private email, a DM or other private message, a phone call/voicemail,\nan email blast to a mailing list or many individuals, listing it on a website, etc.")]),e._v(" "),a("h2",{attrs:{id:"brand"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brand"}},[e._v("#")]),e._v(" Brand")]),e._v(" "),a("p",[e._v("Identifies the kind of "),a("a",{attrs:{href:"#issuer"}},[e._v("issuer")]),e._v(', such as "quatloos", "moola", etc. Brands are one of the two elements that\nmake up an '),a("a",{attrs:{href:"#amounts"}},[e._v("amount")]),e._v(".\nFor more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/amounts.html"}},[e._v("ERTP Guide's Brand section")]),e._v("\nand the "),a("RouterLink",{attrs:{to:"/ertp/api/brand.html"}},[e._v("ERTP API's Brand section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"bundle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bundle"}},[e._v("#")]),e._v(" Bundle")]),e._v(" "),a("p",[e._v("Before a contract can be installed on Zoe, its source code must be bundled. This is done by:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import bundleSource from '@agoric/bundle-source';\nconst atomicSwapBundle = await bundleSource(\n    require.resolve('@agoric/zoe/src/contracts/atomicSwap'),\n);\n")])])]),a("p",[e._v("The installation operation returns\nan "),a("code",[e._v("installation")]),e._v(", which is an object with one method; "),a("code",[e._v("getBundle()")]),e._v(". You can access an installed contract's source\ncode via "),a("code",[e._v("const { source } = await E(installation).getBundle();")]),e._v(".\nIn many cases, the bundled source is a single reviewable string.\nIn others, the bundle contains to base 64 encoded zip file that you can\nextract for review.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("jq -r .endoZipBase64 bundle.json | base64 -d > bundle.zip\nunzip bundle.zip\n")])])]),a("h2",{attrs:{id:"burn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#burn"}},[e._v("#")]),e._v(" Burn")]),e._v(" "),a("p",[e._v("Destroy all digital assets in a payment. See "),a("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-burn-payment-optamount"}},[a("code",[e._v("issuer.burn(payment, optAmount)")])]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"comparable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comparable"}},[e._v("#")]),e._v(" Comparable")]),e._v(" "),a("p",[e._v("A "),a("em",[e._v("passable")]),e._v(" is something that can be marshalled. A "),a("em",[e._v("comparable")]),e._v(" is a\npassable whose leaves contain no promises. Two comparables can be\nsynchronously compared for structural equivalence.")]),e._v(" "),a("p",[e._v("A comparable is a JavaScript object containing no promises, and can\nthus be locally compared for equality with another object. If either object\ncontains Promises, equality is indeterminable. If both are fulfilled down\nto Presences and local state, then either they're the same all the way\ndown, or they represent different objects.")]),e._v(" "),a("h2",{attrs:{id:"contract-and-contract-instance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contract-and-contract-instance"}},[e._v("#")]),e._v(" Contract and Contract Instance")]),e._v(" "),a("p",[e._v("In Agoric documentation, "),a("em",[e._v("contract")]),e._v(" usually refers to a contract's source code that\ndefines how the contract works. A contract's source code is "),a("em",[e._v("installed")]),e._v(" on Zoe. A\ncontract is "),a("em",[e._v("instantiated")]),e._v(" to create "),a("em",[e._v("contract instances")]),e._v(", which are the active\nexecution of a contract's code running on Zoe.")]),e._v(" "),a("p",[e._v("For example, a realtor has a standard house selling agreement. The contract is the\ncode defining how that agreement works. When the realtor has a new house to sell,\nthey instantiate a new instance of their standard contract for that specific property.\nIf they have ten houses for sale, they have ten different contract instances.")]),e._v(" "),a("h2",{attrs:{id:"creatorinvitation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creatorinvitation"}},[e._v("#")]),e._v(" CreatorInvitation")]),e._v(" "),a("p",[e._v("An "),a("a",{attrs:{href:"#invitation"}},[e._v("invitation")]),e._v(" optionally returned by "),a("code",[e._v("startInstance()")]),e._v(" that the contract instance\ncreator can use. It is usually used in contracts where the creator immediately\nsells something (auctions, swaps, etc.).")]),e._v(" "),a("h2",{attrs:{id:"deposit-facet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deposit-facet"}},[e._v("#")]),e._v(" Deposit Facet")]),e._v(" "),a("p",[e._v("A "),a("a",{attrs:{href:"#facet"}},[e._v("facet")]),e._v(" of a "),a("a",{attrs:{href:"#purse"}},[e._v("purse")]),e._v(". Anyone with a reference to its deposit facet object can add\nappropriately branded assets to the purse, but cannot withdraw assets from the purse or find out its balance.")]),e._v(" "),a("h2",{attrs:{id:"dibc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dibc"}},[e._v("#")]),e._v(" dIBC")]),e._v(" "),a("p",[e._v("Dynamic version of the "),a("a",{attrs:{href:"#ibc"}},[e._v("Inter-Blockchain Communication")]),e._v(" protocol.\nSee "),a("a",{attrs:{href:"https://github.com/Agoric/agoric-sdk/blob/master/packages/SwingSet/docs/networking.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(" for more details.")]),e._v(" "),a("h2",{attrs:{id:"e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e"}},[e._v("#")]),e._v(" E()")]),e._v(" "),a("p",[e._v("(Also referred to as "),a("em",[e._v("eventual send")]),e._v(") "),a("code",[e._v("E()")]),e._v(' is a local "bridge" function that invokes methods on remote objects, for example\nin another vat, machine, or blockchain. It takes a local representative (a proxy) for a remote object as an argument and\nsends messages to it using normal message-sending syntax. The local proxy forwards all messages to the remote object to deal with.\nAll '),a("code",[e._v("E()")]),e._v(" calls return a promise for the eventual returned value. For more detail, see\nthe "),a("RouterLink",{attrs:{to:"/guides/js-programming/eventual-send.html"}},[a("code",[e._v("E()")]),e._v(" section in the Distributed JavaScript page")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"ertp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ertp"}},[e._v("#")]),e._v(" ERTP")]),e._v(" "),a("p",[a("em",[e._v("Electronic Rights Transfer Protocol")]),e._v(" is a uniform way of transferring tokens and other digital assets,\nboth "),a("a",{attrs:{href:"#fungible"}},[e._v("fungible")]),e._v(" and "),a("a",{attrs:{href:"#non-fungible"}},[e._v("non-fungible")]),e._v(", in JavaScript. All kinds of digital assets\ncan easily be created and they can be all be transferred in exactly the same ways, with exactly the same security properties.")]),e._v(" "),a("p",[e._v("It uses "),a("a",{attrs:{href:"#object-capabilities"}},[e._v("object capabilities")]),e._v(" to enforce access control. Instead of having\nto prove ownership of a corresponding private key, if your program has a\nreference to an object, it can call methods on that object. If it doesn't\nhave a reference, it can't. For more on object capabilities, see "),a("a",{attrs:{href:"http://habitatchronicles.com/2017/05/what-are-capabilities/",target:"_blank",rel:"noopener noreferrer"}},[e._v("this post"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Key ERTP concepts include "),a("a",{attrs:{href:"#issuer"}},[e._v("Issuers")]),e._v(", "),a("a",{attrs:{href:"#mint"}},[e._v("Mints")]),e._v(",\n"),a("a",{attrs:{href:"#purse"}},[e._v("Purses")]),e._v(", "),a("a",{attrs:{href:"#payment"}},[e._v("Payments")]),e._v(", "),a("a",{attrs:{href:"#brand"}},[e._v("Brands")]),e._v(", and "),a("a",{attrs:{href:"#amounts"}},[e._v("Amounts")]),e._v(". Also\nsee the "),a("RouterLink",{attrs:{to:"/getting-started/ertp-introduction.html"}},[e._v("ERTP Introduction")]),e._v(",\n"),a("RouterLink",{attrs:{to:"/ertp/guide/"}},[e._v("ERTP Guide")]),e._v(", and "),a("RouterLink",{attrs:{to:"/ertp/api/"}},[e._v("ERTP API")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"escrow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#escrow"}},[e._v("#")]),e._v(" Escrow")]),e._v(" "),a("p",[e._v("To give assets for a possible transaction to an impartial third party, who keeps them until specified conditions are satisfied.\nFor example, Alice wants to sell Bob a ticket for $100. Alice escrows the ticket, and Bob escrows the $100, with Zoe. Zoe\ndoes not give Alice the $100 or Bob the ticket until it has both items. Since neither Alice nor Bob ever holds both items at\nonce, they don't have to trust each other to do the transaction. Zoe automatically escrows payments for transaction offers.")]),e._v(" "),a("h2",{attrs:{id:"eventual-send"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventual-send"}},[e._v("#")]),e._v(" Eventual Send")]),e._v(" "),a("p",[e._v("See "),a("a",{attrs:{href:"#e"}},[a("code",[e._v("E()")])]),e._v(" above.")]),e._v(" "),a("h2",{attrs:{id:"exit-rule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exit-rule"}},[e._v("#")]),e._v(" Exit Rule")]),e._v(" "),a("p",[e._v("Part of an "),a("a",{attrs:{href:"#offer"}},[e._v("offer")]),e._v(" specifying how the offer can be cancelled/exited. There are three values:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("onDemand: null")]),e._v(": (Default) The offering party can cancel on demand.")]),e._v(" "),a("li",[a("code",[e._v("waived: null")]),e._v(": The offering party can't cancel and relies entirely on the smart contract to promptly finish their offer.")]),e._v(" "),a("li",[a("code",[e._v("afterDeadline")]),e._v(": The offer is automatically cancelled after a deadline, as determined by its timer and deadline properties.")])]),e._v(" "),a("h2",{attrs:{id:"facet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#facet"}},[e._v("#")]),e._v(" Facet")]),e._v(" "),a("p",[e._v("A "),a("em",[e._v("facet")]),e._v(" is an object that exposes an API or particular view of some larger entity, which may be an object itself.\nYou can make any number of facets of an entity. In JavaScript, you often make a facet by selecting methods from the entity,\neither directly or by destructuring:")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" facet "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  myMethod"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" oldObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Two Agoric uses are:")]),e._v(" "),a("ul",[a("li",[a("em",[e._v("Deposit Facet")]),e._v(": A facet of a "),a("a",{attrs:{href:"#purse"}},[e._v("purse")]),e._v(". Anyone with a reference to its deposit facet object can add\nappropriately branded assets to the purse, but cannot withdraw assets from the purse or find out its balance.")]),e._v(" "),a("li",[a("em",[e._v("Public Facet")]),e._v(": A set of methods and properties for an object that a developer chooses to be publicly visible and usable.")])]),e._v(" "),a("h2",{attrs:{id:"fungible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fungible"}},[e._v("#")]),e._v(" Fungible")]),e._v(" "),a("p",[e._v("A fungible asset is one where all exemplars of the asset are interchangeable. For example, if you\nhave 100 one dollar bills and need to pay someone five dollars, it does not matter which\nfive one dollar bills you use. Also see "),a("a",{attrs:{href:"#non-fungible"}},[e._v("non-fungible")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"handle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handle"}},[e._v("#")]),e._v(" Handle")]),e._v(" "),a("p",[e._v("A handle is a unique identifier implemented as a JavaScript object. Only its identity\nis meaningful, so handles do not have properties. Unlike number or string identifiers,\nhandles are unforgeable. This means the only way to know a handle identity is being given\nan object reference, and no identity can be guessed and no fake identity will succeed.")]),e._v(" "),a("h2",{attrs:{id:"harden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#harden"}},[e._v("#")]),e._v(" Harden")]),e._v(" "),a("p",[e._v("A hardened object’s properties cannot be changed, so the only way to interact with a hardened object is through its methods.\n"),a("code",[e._v("harden()")]),e._v(" is similar to "),a("code",[e._v("Object.freeze()")]),e._v(" but more powerful. For more about "),a("code",[e._v("harden()")]),e._v(", see\nits "),a("RouterLink",{attrs:{to:"/guides/js-programming/ses/ses-guide.html"}},[e._v("section in the JavaScript Distributed Programming Guide")])],1),e._v(" "),a("h2",{attrs:{id:"ibc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ibc"}},[e._v("#")]),e._v(" IBC")]),e._v(" "),a("p",[e._v("The Inter-Blockchain Communication protocol, used by blockchains to communicate with each other. A short article about IBC\nis available "),a("a",{attrs:{href:"https://www.computerweekly.com/blog/Open-Source-Insider/What-developers-need-to-know-about-inter-blockchain-communication",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"invitation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invitation"}},[e._v("#")]),e._v(" Invitation")]),e._v(" "),a("p",[e._v("To participate in a contract instance, one must hold an invitation to do so. Contracts often\nreturn a creator invitation on their instantiation, in case the contract instantiator wants\nto immediately participate. Otherwise, the contract instance must create any additional invitations.\nThese, or any invitation held by a party, are distributed by sending it to someone's wallet. When you receive\nan invitation, your wallet will validate it via the "),a("a",{attrs:{href:"#invitationissuer"}},[e._v("InvitationIssuer")]),e._v(". Note that\nthe invitation is a "),a("a",{attrs:{href:"#payment"}},[a("code",[e._v("Payment")])]),e._v(", and so is associated with a specific "),a("a",{attrs:{href:"#issuer"}},[a("code",[e._v("Issuer")])]),e._v(".")]),e._v(" "),a("p",[e._v("To participate in a contract instance by making an "),a("a",{attrs:{href:"#offer"}},[e._v("offer")]),e._v(", an invitation to that instance must accompany the offer.")]),e._v(" "),a("p",[e._v("An "),a("code",[e._v("invitation")]),e._v("'s amount includes the following properties:")]),e._v(" "),a("ul",[a("li",[e._v("The contract's installation in Zoe, including access to its source code.")]),e._v(" "),a("li",[e._v("The contract instance this invitation is for.")]),e._v(" "),a("li",[e._v("A handle used to refer to this invitation.")]),e._v(" "),a("li",[e._v("A description of this invitation's purpose.")])]),e._v(" "),a("h2",{attrs:{id:"invitationissuer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invitationissuer"}},[e._v("#")]),e._v(" InvitationIssuer")]),e._v(" "),a("p",[e._v("Since "),a("a",{attrs:{href:"#invitation"}},[e._v("invitations")]),e._v(" are "),a("a",{attrs:{href:"#payment"}},[e._v("payments")]),e._v(", invitations\nmust have a dedicated "),a("a",{attrs:{href:"#issuer"}},[e._v("issuer")]),e._v(", which is the InvitationIssuer.")]),e._v(" "),a("p",[e._v("Zoe has a single "),a("code",[e._v("InvitationIssuer")]),e._v(" for its entire lifetime. By having a reference to Zoe,\na user can get the "),a("code",[e._v("InvitationIssuer")]),e._v(". This lets them claim any invitation they\nreceive from someone else by calling "),a("code",[e._v("E(invitationIssuer).claim()")]),e._v(" with the untrusted\ninvitation as the argument. During the claiming process, the invitationIssuer validates\nthe invitation. A successful claim also means that invitation is exclusively yours.")]),e._v(" "),a("p",[a("strong",[e._v("Note")]),e._v(": Depositing into an invitation-branded purse also validates an invitation. This is\nwhat the "),a("a",{attrs:{href:"#wallet"}},[e._v("wallet")]),e._v(" does.")]),e._v(" "),a("h2",{attrs:{id:"issuer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer"}},[e._v("#")]),e._v(" Issuer")]),e._v(" "),a("p",[e._v("Issuers are a one-to-one relationship with both a "),a("a",{attrs:{href:"#mint"}},[e._v("mint")]),e._v(" and a "),a("a",{attrs:{href:"#brand"}},[e._v("brand")]),e._v(", so each issuer works\nwith one and only one asset type, such as only working with quatloos or only working\nwith moola. This association cannot change to another type.")]),e._v(" "),a("p",[e._v("Issuers can create empty "),a("a",{attrs:{href:"#purse"}},[e._v("purses")]),e._v(" for\ntheir asset type, but cannot mint new "),a("a",{attrs:{href:"#amounts"}},[e._v("amounts")]),e._v(". Issuers can also transform\npayments of their asset type (splitting, combining, burning, and exclusively claiming\npayments). An issuer from a trusted source can determine if an untrusted payment of\nits asset type is valid.")]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/issuers-and-mints.html"}},[e._v("ERTP Guide's Issuer section")]),e._v("\nand the "),a("RouterLink",{attrs:{to:"/ertp/api/issuer.html"}},[e._v("ERTP API's Issuer section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"keywords"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keywords"}},[e._v("#")]),e._v(" Keywords")]),e._v(" "),a("p",[e._v("Keywords are unique identifiers per contract. They tie together the "),a("a",{attrs:{href:"#proposal"}},[e._v("proposal")]),e._v(", "),a("a",{attrs:{href:"#payment"}},[e._v("payments")]),e._v("\nto be "),a("a",{attrs:{href:"#escrow"}},[e._v("escrowed")]),e._v(", and "),a("a",{attrs:{href:"#payout"}},[e._v("payouts")]),e._v(" to the user by serving as keys for key-value pairs in various\nrecords with values of "),a("a",{attrs:{href:"#amounts"}},[e._v("amounts")]),e._v(", "),a("a",{attrs:{href:"#issuer"}},[e._v("issuers")]),e._v(", etc.")]),e._v(" "),a("h2",{attrs:{id:"mint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mint"}},[e._v("#")]),e._v(" Mint")]),e._v(" "),a("p",[a("a",{attrs:{href:"#ertp"}},[e._v("ERTP")]),e._v(" has a "),a("em",[e._v("mint")]),e._v(" object, which creates digital assets. "),a("a",{attrs:{href:"#zcf"}},[e._v("ZCF")]),e._v(" provides a different interface to an ERTP mint, called a\n"),a("em",[e._v("ZCFMint")]),e._v(". Assets and AssetHolders created using ZcfMints can be used in all the same ways as assets created by other ERTP Mints.\nThey interact with Purses, Payments, Brands, and Issuers in the same ways.")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("ERTP mints create digital assets and are the only ERTP objects with the authority to do so.\nAccess to an ERTP mint gives you the power to create more digital assets of its type at will. Mints\ncan only create one type of asset and cannot change to create a different type.")]),e._v(" "),a("p",[e._v("ERTP mints are "),a("a",{attrs:{href:"#issuer"}},[e._v("issuer's")]),e._v(" admin "),a("a",{attrs:{href:"#facet"}},[e._v("facets")]),e._v(", and there is a one-to-one relationship between an issuer and\nits mint. ERTP mints are also in a one-to-one relationship with that issuer's associated "),a("a",{attrs:{href:"#brand"}},[e._v("brand")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("ZCFMints give contract code a simpler interface to interact with an ERTP mint. Because ZCFMints encapsulate\nan internal ERTP mint, they have the same one-to-one relationships\nwith an issuer and its associated brand. A ZCFMint can mint assets and assign them to a seat without having to escrow\npayments, and burn assets that used to be associated with a seat without having to payout assets.")])])]),e._v(" "),a("p",[e._v("ZCFMints and ERTP mints do "),a("strong",[e._v("not")]),e._v(" have the same methods. Do not try to use ERTP methods on a ZCFMint or vice versa.\nHowever, issuers and brands associated with either an ERTP mint or a ZCFMint are the same concepts and have the same methods.")]),e._v(" "),a("p",[e._v("For more information on ERTP mints, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/issuers-and-mints.html"}},[e._v("ERTP Guide's Mint section")]),e._v("\nand the "),a("RouterLink",{attrs:{to:"/ertp/api/mint.html"}},[e._v("ERTP API's Mint section")]),e._v(". For more information about ZCFMints,\nsee the "),a("RouterLink",{attrs:{to:"/zoe/api/zoe-contract-facet.html"}},[e._v("zcfMakeZCFMint() API entry")]),e._v(" in the Zoe Contract Facet API.")],1),e._v(" "),a("h2",{attrs:{id:"moola"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#moola"}},[e._v("#")]),e._v(" Moola")]),e._v(" "),a("p",[e._v("An imaginary currency Agoric documentation uses in examples.")]),e._v(" "),a("h2",{attrs:{id:"non-fungible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#non-fungible"}},[e._v("#")]),e._v(" Non-fungible")]),e._v(" "),a("p",[e._v("A non-fungible asset is one where each incidence of the asset has unique individual properties and\nis not interchangeable with another incidence. For example, if your asset is show tickets, it matters to the buyer\nwhat the date and time of the show is, which row the seat is in, and where in the row the\nseat is (and likely other factors as well). You can't just give them any ticket in your supply,\nas they are not interchangeable (and may have different prices). See also "),a("a",{attrs:{href:"#fungible"}},[e._v("fungible")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"notifier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notifier"}},[e._v("#")]),e._v(" Notifier")]),e._v(" "),a("p",[e._v("A notifier provides a stream of updates describing changes to the state of an "),a("a",{attrs:{href:"#offer"}},[e._v("offer")]),e._v(" or other object.\nFor more information, see the "),a("RouterLink",{attrs:{to:"/guides/js-programming/notifiers.html"}},[e._v("Notifier section in the Distributed JavaScript Programming Guide")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"object-capabilities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-capabilities"}},[e._v("#")]),e._v(" Object Capabilities")]),e._v(" "),a("p",[e._v("Objects have state, behavior, and references. Lets say Object A has references to Objects B\nand C, while B and C do not have references to each other. Thus, A can communicate with B and C,\nand B and C cannot communicate with each other. There is an effective zero-cost firewall between B and C.")]),e._v(" "),a("p",[e._v("An "),a("em",[e._v("object capability system")]),e._v(" constrains how references are obtained. You can't get one just by\nknowing the name of a global variable or a public class. You can only get a reference via:")]),e._v(" "),a("ul",[a("li",[e._v("Creation: Functions that create objects get a reference to them.")]),e._v(" "),a("li",[e._v("Construction: Constructors can endow their constructed objects with references, including inherited references.")]),e._v(" "),a("li",[e._v("Introduction:\n"),a("ul",[a("li",[e._v("A has references to B and C.")]),e._v(" "),a("li",[e._v("B and C do "),a("em",[e._v("not")]),e._v(" have references to each other")]),e._v(" "),a("li",[e._v("A sends B a reference to C.\n"),a("ul",[a("li",[e._v("B now has a reference to C and can communicate with C.")])])])])])]),e._v(" "),a("p",[e._v("If references can only be obtained by creation, construction, or introduction, you may have a safe\nsystem. If they can be obtained in any other way, your system is unsafe.")]),e._v(" "),a("p",[e._v("For more information, see "),a("a",{attrs:{href:"https://frontendmasters.com/courses/good-parts-javascript-web/object-capabilities/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Douglas Crockford on Object Capabilities"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"offer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offer"}},[e._v("#")]),e._v(" Offer")]),e._v(" "),a("p",[e._v("Users interact with contract instances by making offers. In Zoe, an offer consists of a "),a("a",{attrs:{href:"#proposal"}},[e._v("proposal")]),e._v(" (what\nthe offer making party is willing to give up and what they want in exchange) and "),a("a",{attrs:{href:"#payment"}},[e._v("payments")]),e._v(" corresponding\nto the amount in the proposal they're willing to give. The payments are automatically "),a("a",{attrs:{href:"#escrow"}},[e._v("escrowed")]),e._v(" by Zoe, and reallocated\naccording to the contract code. An offer gets a "),a("a",{attrs:{href:"#payout"}},[e._v("payout")]),e._v(" of some combination of what the party originally contributed\nand what others have contributed. The specific payout is determined by the contract code.")]),e._v(" "),a("p",[e._v("See "),a("a",{attrs:{href:"https://agoric.com/documentation/zoe/api/zoe.html#e-zoe-offer-invitation-proposal-paymentkeywordrecord",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("E(Zoe).offer(invitation, proposal, paymentKeywordRecord)")]),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"offer-safety"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offer-safety"}},[e._v("#")]),e._v(" Offer Safety")]),e._v(" "),a("p",[e._v("Zoe guarantees offer safety. When a user makes an "),a("a",{attrs:{href:"#offer"}},[e._v("offer")]),e._v(" and its payments are "),a("a",{attrs:{href:"#escrow"}},[e._v("escrowed")]),e._v(" with Zoe, Zoe guarantees that\nthe user either gets what they said they wanted, or gets back (gets a refund) what they originally offered and\nescrowed. One reason this is possible is if a "),a("a",{attrs:{href:"#proposal"}},[e._v("proposal")]),e._v(" doesn't match what the contract expects to do, it\ncan immediately cause the "),a("a",{attrs:{href:"#seat"}},[e._v("seat")]),e._v(" to exit, getting back the amount it offered.")]),e._v(" "),a("h2",{attrs:{id:"payment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payment"}},[e._v("#")]),e._v(" Payment")]),e._v(" "),a("p",[e._v("Payments hold assets created by "),a("a",{attrs:{href:"#mint"}},[e._v("Mints")]),e._v(". Specifically assets intended for transfer\nfrom one party to another. All assets of a payment are of the same "),a("a",{attrs:{href:"#brand"}},[e._v("brand")]),e._v(".")]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/purses-and-payments.html#purses-and-payments"}},[e._v("ERTP Guide's Payments section")]),e._v("\nand the "),a("RouterLink",{attrs:{to:"/ertp/api/payment.html"}},[e._v("ERTP API's Payments section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"payout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payout"}},[e._v("#")]),e._v(" Payout")]),e._v(" "),a("p",[e._v("The assets paid out to a user when an "),a("a",{attrs:{href:"#seat"}},[e._v("seat")]),e._v(" exits, either successfully or not. The payout is always\nwhat the seat's current "),a("a",{attrs:{href:"#allocation"}},[e._v("allocation")]),e._v(" is.")]),e._v(" "),a("p",[e._v("If there was a previous reallocation, the payout is different than what the user escrowed. If there is no reallocation\nbefore the seat exits, the payout is the same as what they escrowed.")]),e._v(" "),a("h2",{attrs:{id:"petname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#petname"}},[e._v("#")]),e._v(" Petname")]),e._v(" "),a("p",[e._v("Petnames are your personal names for objects. No one else can see or modify a petname without your permission.\nThink of them as similar to a phone's contacts list. The actual phone number is what a phone uses to call\nsomeone, but to more easily tell who a number is associated with, it's assigned a petname, such\nas Mom, Grandpa, Kate S., etc. In the Agoric platform, petnames are used in "),a("a",{attrs:{href:"#wallet"}},[e._v("wallets")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"presence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#presence"}},[e._v("#")]),e._v(" Presence")]),e._v(" "),a("p",[e._v("A local version of a remote object that serves as the remote object's proxy.\nIf "),a("code",[e._v("obj")]),e._v(" is a presence of a remote object, you can send messages to the remote object by using "),a("code",[e._v("E()")]),e._v(" on "),a("code",[e._v("obj")]),e._v(".\nFor more information, see the "),a("RouterLink",{attrs:{to:"/guides/js-programming/"}},[e._v("JavaScript Distributed Programming Guide")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"proposal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proposal"}},[e._v("#")]),e._v(" Proposal")]),e._v(" "),a("p",[e._v("Proposals are records with "),a("code",[e._v("give")]),e._v(", "),a("code",[e._v("want")]),e._v(", and "),a("code",[e._v("exit")]),e._v(" keys. "),a("a",{attrs:{href:"#offer"}},[e._v("Offers")]),e._v(" must include a proposal, which states\nwhat asset you want, what asset you will give for it, and how/when the offer maker can cancel the offer\n(see "),a("a",{attrs:{href:"#exit-rule"}},[e._v("Exit Rule")]),e._v(" for details on the last). For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const myProposal = harden({\n  give: { Asset: AmountMath.make(quatloosBrand, 4)},\n  want: { Price: AmountMath.make(moolaBrand, 15) },\n  exit: { 'onDemand' }\n})\n")])])]),a("p",[a("code",[e._v("give")]),e._v(" and "),a("code",[e._v("want")]),e._v(" use "),a("a",{attrs:{href:"#keywords"}},[e._v("keywords")]),e._v(" defined by the contract. Each specifies via an "),a("a",{attrs:{href:"#amounts"}},[e._v("amount")]),e._v(", a description of what\nasset they are willing to give/want to get, and how much of it.")]),e._v(" "),a("h2",{attrs:{id:"purse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#purse"}},[e._v("#")]),e._v(" Purse")]),e._v(" "),a("p",[e._v("Purses hold "),a("a",{attrs:{href:"#amounts"}},[e._v("amounts")]),e._v(" of a certain "),a("a",{attrs:{href:"#mint"}},[e._v("mint")]),e._v(" issued assets. Specifically amounts that are "),a("em",[e._v("stationary")]),e._v(".\nPurses can transfer part of their held balance to a "),a("a",{attrs:{href:"#payment"}},[e._v("payment")]),e._v(", which is usually used to transfer value.\nA purse's contents are all of the same "),a("a",{attrs:{href:"#brand"}},[e._v("brand")]),e._v(".")]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/purses-and-payments.html#purses-and-payments"}},[e._v("ERTP Guide's Purses section")]),e._v(" and the\n"),a("RouterLink",{attrs:{to:"/ertp/api/purse.html"}},[e._v("ERTP API's Purses section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"quatloos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quatloos"}},[e._v("#")]),e._v(" Quatloos")]),e._v(" "),a("p",[e._v("An imaginary currency Agoric documentation uses in examples. For its origins, see the Wikipedia entry for the Star Trek\nepisode "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/The_Gamesters_of_Triskelion",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Gamesters of Triskelion"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"reallocation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reallocation"}},[e._v("#")]),e._v(" Reallocation")]),e._v(" "),a("p",[e._v("A transfer of "),a("a",{attrs:{href:"#amounts"}},[e._v("amounts")]),e._v(" between "),a("a",{attrs:{href:"#seat"}},[e._v("seats")]),e._v(" within Zoe; i.e. a change in their "),a("a",{attrs:{href:"#allocation"}},[e._v("allocations")]),e._v(". When a seat exits, it gets its\ncurrent allocation as a "),a("a",{attrs:{href:"#payout"}},[e._v("payout")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"seat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seat"}},[e._v("#")]),e._v(" Seat")]),e._v(" "),a("p",[e._v("Zoe uses a seat to represent an "),a("a",{attrs:{href:"#offer"}},[e._v("offer")]),e._v(" in progress, and has two seat "),a("a",{attrs:{href:"#facet"}},[e._v("facets")]),e._v(" representing\ntwo views of the same seat; a "),a("code",[e._v("ZCFSeat")]),e._v(" and a "),a("code",[e._v("UserSeat")]),e._v(". The "),a("code",[e._v("UserSeat")]),e._v(" is returned to the user who made an\noffer, and can check payouts' status or retrieve their results. The "),a("code",[e._v("ZCFSeat")]),e._v(" is the argument passed to\nthe "),a("code",[e._v("offerHandler")]),e._v(" in the contract code. It is used within contracts and with "),a("code",[e._v("zcf.")]),e._v(" methods.")]),e._v(" "),a("p",[e._v('The two seat facets have slightly different methods but represent the same seat and offer in progress.\nThe term comes from the expression "having a seat at the table" with regards to participating in a negotiation.')]),e._v(" "),a("p",[e._v("For more details, see the "),a("RouterLink",{attrs:{to:"/zoe/api/zoe-contract-facet.html#zcfseat-object"}},[e._v("ZCFSeat documentation")]),e._v(" and\nthe "),a("RouterLink",{attrs:{to:"/zoe/api/zoe.html#userseat-object"}},[e._v("UserSeat documentation")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"ses-secure-ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ses-secure-ecmascript"}},[e._v("#")]),e._v(" SES (Secure ECMAScript)")]),e._v(" "),a("p",[e._v("SES is a standards-track extension to the JavaScript standard. It\nprovides a secure platform for executing programs. With SES, you can run code you don't\ncompletely trust, without being vulnerable to bugs or bad intentions.\nSee the "),a("RouterLink",{attrs:{to:"/guides/js-programming/ses/ses-guide.html"}},[e._v("SES section of the Distributed JavaScript Programming Guide")]),e._v(" for\nmore details.")],1),e._v(" "),a("h2",{attrs:{id:"simoleons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simoleons"}},[e._v("#")]),e._v(" Simoleons")]),e._v(" "),a("p",[e._v("An imaginary currency Agoric documentation uses in examples.")]),e._v(" "),a("h2",{attrs:{id:"terms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terms"}},[e._v("#")]),e._v(" Terms")]),e._v(" "),a("p",[e._v("Contract instances have associated terms, gotten via "),a("code",[e._v("E(zoe).getTerms(instance)")]),e._v(",\nwhich include the instance's associated "),a("a",{attrs:{href:"#issuer"}},[e._v("issuers")]),e._v(", "),a("a",{attrs:{href:"#brand"}},[e._v("brands")]),e._v(", and any custom terms. For\nexample, you might have a general auction contract. When someone instantiates it,\nthey provide terms applicable only to that instance. For some instances of\nthe auction, they want the minimum bid set at $1000. At other instances, they'd like\nit set at $10. They can specify the instance's minimum bid amount in its terms.")]),e._v(" "),a("h2",{attrs:{id:"value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[e._v("#")]),e._v(" Value")]),e._v(" "),a("p",[e._v("Values are the part of an "),a("a",{attrs:{href:"#amounts"}},[e._v("amount")]),e._v(" that describe the value of something\nthat can be owned or shared: How much, how many, or a description of a unique asset, such as\nPixel(3,2), $3, or 'Seat J12 for the show September 27th at 9:00pm'.\n"),a("a",{attrs:{href:"#fungible"}},[e._v("Fungible")]),e._v(" values are usually\nrepresented by natural numbers. Other values may be represented as strings naming a particular\nrights, or an array of arbitrary objects representing the rights at issue. The latter two examples\nare usually "),a("a",{attrs:{href:"#non-fungible"}},[e._v("non-fungible")]),e._v(" assets. Values must be "),a("a",{attrs:{href:"#comparable"}},[e._v("Comparable")]),e._v(".")]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/ertp/guide/amounts.html#values"}},[e._v("ERTP Guide's Value section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"vat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vat"}},[e._v("#")]),e._v(" Vat")]),e._v(" "),a("p",[e._v("A vat is a unit of isolation.\nObjects and functions in a JavaScript vat can communicate synchronously with one another. Vats and their contents can\ncommunicate with other vats and their objects and functions, but can only communicate asynchronously.")]),e._v(" "),a("p",[e._v("For more information, see the "),a("RouterLink",{attrs:{to:"/guides/js-programming/vats.html"}},[e._v("Vat section in the Distributed JS Programming Guide")])],1),e._v(" "),a("h2",{attrs:{id:"wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wallet"}},[e._v("#")]),e._v(" Wallet")]),e._v(" "),a("p",[e._v("The overall place a party keeps their assets of all brands. For example, your wallet might contain 5 Quatloos\n"),a("a",{attrs:{href:"#purse"}},[e._v("purses")]),e._v(", 8 Moola purses, and 2 Simoleons purses. A wallet can distinguish between "),a("a",{attrs:{href:"#issuer"}},[e._v("Issuers")]),e._v(".\nDapps can propose "),a("a",{attrs:{href:"#offer"}},[e._v("offers")]),e._v(" to a wallet. If a user accepts the offer proposal,\nthe wallet makes an offer on the user's behalf and deposits the "),a("a",{attrs:{href:"#payout"}},[e._v("payout")]),e._v(" in the user's "),a("a",{attrs:{href:"#purse"}},[e._v("purses")]),e._v(".\nSee the "),a("RouterLink",{attrs:{to:"/guides/wallet/"}},[e._v("Wallet Guide and API")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"zcf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zcf"}},[e._v("#")]),e._v(" ZCF")]),e._v(" "),a("p",[a("em",[e._v("ZCF (Zoe Contract Facet)")]),e._v(" is the "),a("a",{attrs:{href:"#facet"}},[e._v("facet")]),e._v(" of Zoe exposed to contract code. The Zoe\nContract Facet methods can be called synchronously by contract code.")]),e._v(" "),a("p",[e._v("See the "),a("RouterLink",{attrs:{to:"/zoe/api/zoe-contract-facet.html"}},[e._v("ZCF API")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"zcfmint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zcfmint"}},[e._v("#")]),e._v(" ZCFMint")]),e._v(" "),a("p",[e._v("See "),a("a",{attrs:{href:"#mint"}},[e._v("Mint")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"zoe-helpers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zoe-helpers"}},[e._v("#")]),e._v(" Zoe Helpers")]),e._v(" "),a("p",[e._v("A set of API helper methods for writing contracts. These methods extract common contract code and\npatterns into reusable helpers. See the "),a("RouterLink",{attrs:{to:"/zoe/api/zoe-helpers.html"}},[e._v("Zoe Helpers API")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"zoe-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zoe-service"}},[e._v("#")]),e._v(" Zoe Service")]),e._v(" "),a("p",[e._v("A set of API methods for deploying and working with smart contracts. See "),a("RouterLink",{attrs:{to:"/zoe/api/zoe.html"}},[e._v("Zoe Service API")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=n.exports}}]);