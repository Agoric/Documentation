(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{420:function(t,a,s){"use strict";s.r(a);var n=s(44),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"amountmath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath"}},[t._v("#")]),t._v(" AmountMath")]),t._v(" "),s("p",[t._v("Logic for manipulating "),s("code",[t._v("amounts")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"importing-and-using-amountmath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#importing-and-using-amountmath"}},[t._v("#")]),t._v(" Importing and Using AmountMath")]),t._v(" "),s("p",[t._v("To use the "),s("code",[t._v("AmountMath")]),t._v(" library, import it from ERTP:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("import { AmountMath } from '@agoric/ertp';")])])]),t._v(" "),s("h2",{attrs:{id:"assetkinds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assetkinds"}},[t._v("#")]),t._v(" AssetKinds")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("AmountMath")]),t._v(" library lets you manipulate amounts, such as by adding two amounts together.\nHowever, remember that we have two types of amounts, fungible and non-fungible. While a fungible\namount has natural numbers for its value, a non-fungible amount has an array of elements, such as\nstrings, numbers, objects or records, for its value. Even though very different addition processes\nare performed, "),s("code",[t._v("AmountMath.add()")]),t._v(" and other "),s("code",[t._v("AmountMath()")]),t._v(" methods work for both types of amounts.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("AmountMath")]),t._v(" library methods are polymorphic. All of the operations work for both fungible\nand non-fungible assets. Which method is used is\ndetermined by the "),s("code",[t._v("AssetKind")]),t._v(" associated with the amounts' "),s("code",[t._v("Issuer")]),t._v(" and "),s("code",[t._v("Brand")]),t._v(". This is\nspecified when "),s("code",[t._v("issuerKit()")]),t._v(" creates the issuer and brand.")]),t._v(" "),s("p",[t._v("We recommend you import the two "),s("code",[t._v("AssetKind")]),t._v(" values from "),s("code",[t._v("@agoric/ERTP")]),t._v(" instead of making the\nstrings yourself.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("AssetKind.NAT")]),t._v(" ("),s("code",[t._v("nat")]),t._v("): Used with fungible assets. "),s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("values")]),t._v(" are natural numbers (non-negative "),s("code",[t._v("BigInts")]),t._v(").")]),t._v(" "),s("li",[s("code",[t._v("AssetKind.SET")]),t._v(" ("),s("code",[t._v("set")]),t._v("): Used with non-fungible assets. "),s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("values")]),t._v(" are objects or records with multiple properties.")])]),t._v(" "),s("p",[t._v("Use "),s("code",[t._v("makeIssuerKit(allegedName, assetKind, displayInfo)")]),t._v(" to specify which "),s("code",[t._v("AssetKind")]),t._v("\nyour contract uses. The second parameter, "),s("code",[t._v("assetKind")]),t._v(" is optional and\ndefaults to "),s("code",[t._v("AssetKind.NAT")]),t._v(" if not given. For example")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to AssetKind.NAT and undefined displayInfo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kitties'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to undefined displayInfo")]),t._v("\n")])])]),s("h2",{attrs:{id:"amount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amount"}},[t._v("#")]),t._v(" Amount")]),t._v(" "),s("p",[t._v("An "),s("code",[t._v("amount")]),t._v(' is a description of digital assets, answering the\nquestions "how much?" and "of what kind?". It is a '),s("code",[t._v("value")]),t._v(' ("how much")\nlabeled with a '),s("code",[t._v("brand")]),t._v(' ("of what kind"). '),s("code",[t._v("AmountMath")]),t._v(" executes the logic\nof how an "),s("code",[t._v("amount")]),t._v(" changes when digital assets are merged, separated, or\notherwise manipulated. For example, a deposit of 2 Quatloos into a "),s("code",[t._v("purse")]),t._v("\nthat already has 3 Quatloos gives a new balance of 5 Quatloos.\nAn empty "),s("code",[t._v("purse")]),t._v(" has 0 Quatloos.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("someAmount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  brand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" someBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" Value")]),t._v(" "),s("p",[s("code",[t._v("values")]),t._v(" describe how much of something can be owned or shared. A fungible "),s("code",[t._v("value")]),t._v(" is\nnormally represented by a natural number "),s("code",[t._v("BigInt")]),t._v(". Other "),s("code",[t._v("values")]),t._v(" may be represented as strings\nnaming a particular right, or an arbitrary object that sensibly represents the rights at issue.")]),t._v(" "),s("p",[t._v("Note that numbers in a value are represented as type "),s("code",[t._v("BigInt")]),t._v(", which allows for arbitrarily\nlarge numbers. "),s("code",[t._v("BigInts")]),t._v(' are depicted as an integer with an appended "n"; e.g. '),s("code",[t._v("10n")]),t._v(", "),s("code",[t._v("137n")]),t._v(".\nSee the "),s("RouterLink",{attrs:{to:"/guides/js-programming/bigint.html"}},[s("code",[t._v("BigInt")]),t._v(" section in the JavaScript Distributed Programming Guide")]),t._v(" for details.")],1),t._v(" "),s("h2",{attrs:{id:"brand-parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#brand-parameters"}},[t._v("#")]),t._v(" Brand parameters")]),t._v(" "),s("p",[t._v("Note that many "),s("code",[t._v("AmountMath")]),t._v(" methods have a "),s("code",[t._v("brand")]),t._v(" argument, either required or\noptional. For the ones with an optional "),s("code",[t._v("brand")]),t._v(' argument, you should use it if\nyou need to do an "absolute" check on the brand in the '),s("code",[t._v("amount")]),t._v(" argument(s).\nIn this case, you want to use the "),s("code",[t._v("brand")]),t._v(" you got from the issuer (or from Zoe)\nas the optional parameter to compare the "),s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("brand")]),t._v("(s) to. If they are\nnot equal, an error is thrown.")]),t._v(" "),s("h2",{attrs:{id:"makelocalamountmath-issuer-deprecated-20-03-2021"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makelocalamountmath-issuer-deprecated-20-03-2021"}},[t._v("#")]),t._v(" "),s("code",[t._v("makeLocalAmountMath(issuer)")]),t._v(" DEPRECATED 20-03-2021")]),t._v(" "),s("h2",{attrs:{id:"amountmath-getbrand-deprecated-20-03-2021"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getbrand-deprecated-20-03-2021"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.getBrand()")]),t._v(" DEPRECATED 20-03-2021")]),t._v(" "),s("h2",{attrs:{id:"amountmath-getamountmathkind-deprecated-20-03-2021"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getamountmathkind-deprecated-20-03-2021"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.getAmountMathKind()")]),t._v(" DEPRECATED 20-03-2021")]),t._v(" "),s("h2",{attrs:{id:"amountmath-make-brand-allegedvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-make-brand-allegedvalue"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.make(brand, allegedValue)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("brand")]),t._v(" "),s("code",[t._v("{Brand}")])]),t._v(" "),s("li",[s("code",[t._v("allegedValue")]),t._v(" "),s("code",[t._v("{Value}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Make an "),s("code",[t._v("amount")]),t._v(" from a "),s("code",[t._v("value")]),t._v(" by adding the "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("Remember that numbers in "),s("code",[t._v("values")]),t._v(" are represented as "),s("code",[t._v("BigInts")]),t._v('; integers\nwith an appended "n". As seen in the below example, we strongly encourage\nusing BigInts as the argument to '),s("code",[t._v("AmountMath.make()")]),t._v(". While "),s("code",[t._v("AmountMath.make()")]),t._v("\ndoes coerce a "),s("code",[t._v("Number")]),t._v(" argument to a "),s("code",[t._v("BigInt")]),t._v(", so both "),s("code",[t._v("4")]),t._v(" and "),s("code",[t._v("4n")]),t._v(" return an\namount with a value of "),s("code",[t._v("4n")]),t._v(", using "),s("code",[t._v("Numbers")]),t._v(" is likely to confuse later viewers\nof your code.")]),t._v(" "),s("p",[t._v("See the "),s("RouterLink",{attrs:{to:"/guides/js-programming/bigint.html"}},[t._v("BigInt section in the JavaScript Distributed Programming Guide")]),t._v(" for\ndetails about "),s("code",[t._v("BigInts")]),t._v(".")],1),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//amount837 = { value: 837n, brand: quatloos }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amount837 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("837n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-coerce-brand-allegedamount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-coerce-brand-allegedamount"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.coerce(brand, allegedAmount)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("brand")]),t._v(" "),s("code",[t._v("{Brand}")])]),t._v(" "),s("li",[s("code",[t._v("allegedAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Make sure this "),s("code",[t._v("amount")]),t._v(" is valid and if so, return it.\nIf not valid, throws an exception. This checks if\nan "),s("code",[t._v("amount")]),t._v(" coming from elsewhere is for the expected "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos50 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns the same amount as quatloos50")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" verifiedAmount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("coerce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allegedAmount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("h2",{attrs:{id:"amountmath-getvalue-brand-amount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getvalue-brand-amount"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.getValue(brand, amount)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Value}")])])]),t._v(" "),s("p",[t._v("Returns the "),s("code",[t._v("value")]),t._v(" from the given "),s("code",[t._v("amount")]),t._v(". Remember, numeric values\nare represented as "),s("code",[t._v("BigInts")]),t._v(", not "),s("code",[t._v("Numbers")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos123 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns 123n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-makeempty-brand-assetkind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-makeempty-brand-assetkind"}},[t._v("#")]),t._v(" AmountMath.makeEmpty(brand, assetKind)")]),t._v(" "),s("ul",[s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Returns the "),s("code",[t._v("amount")]),t._v(" representing an empty "),s("code",[t._v("Amount")]),t._v(" for the "),s("code",[t._v("brand")]),t._v(" argument's\n"),s("code",[t._v("Brand")]),t._v(". This is the identity element for "),s("code",[t._v("AmountMath.add()")]),t._v("\nand "),s("code",[t._v("AmountMath.subtract()")]),t._v(". The empty "),s("code",[t._v("value")]),t._v(" depends\non whether the "),s("code",[t._v("assetKind")]),t._v(" is "),s("code",[t._v("AssetKind.NAT")]),t._v(" ("),s("code",[t._v("0")]),t._v(") of "),s("code",[t._v("AssetKind.SET")]),t._v(" ("),s("code",[t._v("[]")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an empty amount.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since this is a fungible assetKind it returns an amount")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with 0n as its value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-makeemptyfromamount-amount"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-makeemptyfromamount-amount"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.makeEmptyFromAmount(amount)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Return the "),s("code",[t._v("amount")]),t._v(" representing an empty amount, using another\n"),s("code",[t._v("amount")]),t._v(" as the template for the "),s("code",[t._v("brand")]),t._v(" and "),s("code",[t._v("assetKind")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// quatloosAmount837 = { value: 837n, brand: quatloos }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosAmount837 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("837n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount = { value: 0n, brand: quatloos }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosAmount0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyFromAmount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmount837"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-isempty-amount-brand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isempty-amount-brand"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.isEmpty(amount, brand?)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("amount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("brand?")]),t._v(" "),s("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),s("code",[t._v("undefined")]),t._v(")")]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Boolean}")])])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("amount")]),t._v(" is empty. Otherwise returns "),s("code",[t._v("false")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("brand")]),t._v(" parameter is optional, and defaults to "),s("code",[t._v("undefined")]),t._v(".\nIf it does not match "),s("code",[t._v("amount")]),t._v("'s "),s("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-isgte-leftamount-rightamount-brand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isgte-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.isGTE(leftAmount, rightAmount, brand?)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("brand")]),t._v(" "),s("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),s("code",[t._v("undefined")]),t._v(")")]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{boolean}")])])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("leftAmount")]),t._v(" is greater than or equal to\nthe "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("rightAmount")]),t._v(". Both "),s("code",[t._v("amount")]),t._v(" arguments must have the same\n"),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),s("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),s("code",[t._v("amounts")]),t._v(" "),s("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),s("p",[t._v("For non-fungible "),s("code",[t._v("values")]),t._v(', what "greater than or equal to" is depends on the\nkind of '),s("code",[t._v("AmountMath")]),t._v(". For example, { 'seat 1', 'seat 2' } is considered\ngreater than { 'seat 2' } because the former both contains all of the latter's\ncontents and has additional elements.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-isequal-leftamount-rightamount-brand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isequal-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.isEqual(leftAmount, rightAmount, brand?)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("brand")]),t._v(" "),s("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),s("code",[t._v("undefined")]),t._v(")")]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{boolean}")])])]),t._v(" "),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("leftAmount")]),t._v(" is equal to\nthe "),s("code",[t._v("value")]),t._v(" of "),s("code",[t._v("rightAmount")]),t._v(". Both "),s("code",[t._v("amount")]),t._v(" arguments must have the same\n"),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),s("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),s("code",[t._v("amounts")]),t._v(" "),s("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),s("p",[t._v("For non-fungible "),s("code",[t._v("values")]),t._v(', "equal to" depends on the value of the\nbrand\'s '),s("code",[t._v("AssetKind")]),t._v(".")]),t._v(" "),s("p",[t._v("For example, { 'seat 1', 'seat 2' } is considered\nunequal to { 'seat 2' } because the number of items in the former is\ndifferent from that of the latter. Similarly { 'seat 1',  'seat 3'  } and { 'seat 2' }\nare considered unequal because the latter has elements that are not contained in the former.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\nAmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-add-leftamount-rightamount-brand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-add-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.add(leftAmount, rightAmount, brand?)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("brand")]),t._v(" "),s("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),s("code",[t._v("undefined")]),t._v(")")]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Returns a new "),s("code",[t._v("amount")]),t._v(" that is the union of "),s("code",[t._v("leftAmount")]),t._v(" and "),s("code",[t._v("rightAmount")]),t._v(". Both\narguments must be of the same "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),s("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),s("code",[t._v("amounts")]),t._v(" "),s("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),s("p",[t._v("For fungible "),s("code",[t._v("amounts")]),t._v(" this means adding their "),s("code",[t._v("values")]),t._v(". For non-fungible\n"),s("code",[t._v("amounts")]),t._v(", it usually means including all of the elements from "),s("code",[t._v("leftAmount")]),t._v("\nand "),s("code",[t._v("rightAmount")]),t._v(".")]),t._v(" "),s("p",[t._v("If either "),s("code",[t._v("leftAmount")]),t._v(" or "),s("code",[t._v("rightAmount")]),t._v(" is empty, it just returns the non-empty\n"),s("code",[t._v("amount")]),t._v(" argument. If both are empty, it returns an empty "),s("code",[t._v("amount")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AmountMath "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" brand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsBrand "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),t._v("'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount whose value is ['1', '2', '4', '3']")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"amountmath-subtract-leftamount-rightamount-brand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-subtract-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),s("code",[t._v("AmountMath.subtract(leftAmount, rightAmount, brand?)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("leftAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("rightAmount")]),t._v(" "),s("code",[t._v("{Amount}")])]),t._v(" "),s("li",[s("code",[t._v("brand")]),t._v(" "),s("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),s("code",[t._v("undefined")]),t._v(")")]),t._v(" "),s("li",[t._v("Returns: "),s("code",[t._v("{Amount}")])])]),t._v(" "),s("p",[t._v("Returns a new "),s("code",[t._v("amount")]),t._v(" that is the "),s("code",[t._v("leftAmount")]),t._v(" minus the "),s("code",[t._v("rightAmount")]),t._v(" (i.e.\neverything in the "),s("code",[t._v("leftAmount")]),t._v(" that is not in the "),s("code",[t._v("rightAmount")]),t._v("). If "),s("code",[t._v("leftAmount")]),t._v("\ndoesn't include "),s("code",[t._v("rightAmount")]),t._v(" (subtraction results in a negative), it throws an\nerror. Because "),s("code",[t._v("leftAmount")]),t._v(" must include "),s("code",[t._v("rightAmount")]),t._v(", this is "),s("strong",[t._v("not")]),t._v("\nequivalent to set subtraction.")]),t._v(" "),s("p",[s("code",[t._v("leftAmount")]),t._v(" and "),s("code",[t._v("rightAmount")]),t._v(" must be of the same "),s("code",[t._v("brand")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),s("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),s("code",[t._v("amounts")]),t._v(" "),s("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),s("p",[t._v("If the "),s("code",[t._v("rightAmount")]),t._v(" is empty, it returns the "),s("code",[t._v("leftAmount")]),t._v(". If both arguments are\nempty, it returns an empty "),s("code",[t._v("amount")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AmountMath "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" brand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsBrand "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AssetKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),t._v("'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns ['1', '4']")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subtractedList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Throws error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"related-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#related-methods"}},[t._v("#")]),t._v(" Related Methods")]),t._v(" "),s("p",[t._v("The following methods on other ERTP components and objects also either operate\non or return an "),s("code",[t._v("amount")]),t._v(" or "),s("code",[t._v("AssetKind")]),t._v(". While a brief description is given for each, you should\nclick through to a method's main documentation entry for full details on\nwhat it does and how to use it.")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountof-payment"}},[s("code",[t._v("issuer.getAmountOf(payment)")])]),t._v(" "),s("ul",[s("li",[t._v("Returns the "),s("code",[t._v("amount")]),t._v(" description of the "),s("code",[t._v("payment")])])])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getassetkind"}},[s("code",[t._v("issuer.getAssetKind()")])]),t._v(" "),s("ul",[s("li",[t._v("Returns the "),s("code",[t._v("AssetKind")]),t._v(" of the "),s("code",[t._v("issuer")]),t._v("'s associated math helpers.")])])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/zoe/api/zoe-contract-facet.html#zcf-getassetkind-brand"}},[s("code",[t._v("zcf.getAssetKind(brand)")])]),t._v(" "),s("ul",[s("li",[t._v("Returns the "),s("code",[t._v("AssetKind")]),t._v(" associated with the "),s("code",[t._v("brand")]),t._v(".")])])],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);