(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{449:function(e,t,o){"use strict";o.r(t);var n=o(41),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"remote-object-communication-with-e"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#remote-object-communication-with-e"}},[e._v("#")]),e._v(" Remote object communication with "),o("code",[e._v("E()")])]),e._v(" "),o("p",[e._v("On the Agoric platform, objects may be running in distinct vats, on a remote\nmachine, or even on a blockchain. When you send messages to non-local\nobjects in different vats, the response isn't received immediately and\ncan't be acted upon locally until it arrives.")]),e._v(" "),o("p",[e._v("To keep from blocking local code until the response arrives, we\nreturn a "),o("code",[e._v("Promise")]),e._v(" for the result. You can send more messages to a result's\n"),o("code",[e._v("Promise")]),e._v(". If and when the "),o("code",[e._v("Promise")]),e._v(" resolves to a remote object, the messages\nare forwarded to the object's location, and their results are\neventually returned and processed locally.")]),e._v(" "),o("p",[e._v("JavaScript natively\n"),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises",target:"_blank",rel:"noopener noreferrer"}},[e._v("supports Promises"),o("OutboundLink")],1),e._v(".\nAgoric's "),o("code",[e._v("HandledPromises")]),e._v(" are compatible and interoperable with\nstandard "),o("code",[e._v("Promise")]),e._v("s. Standard interaction with a "),o("code",[e._v("Promise")]),e._v(" or\n"),o("code",[e._v("HandledPromise")]),e._v(" is to do further processing either in a "),o("code",[e._v(".then()")]),e._v("\nclause or after using "),o("code",[e._v("await")]),e._v(" to get the result.")]),e._v(" "),o("p",[e._v("You can send messages to a "),o("code",[e._v("Promise")]),e._v("'s eventual result, or to a\npresence (a proxy for a remote object), using "),o("code",[e._v("E()")]),e._v(" notation. For\nexample, "),o("code",[e._v("E(remoteServiceP).startup(params)")]),e._v(". The result of a\nsend using"),o("code",[e._v("E")]),e._v(" is always a "),o("code",[e._v("Promise")]),e._v(", so the normal thing to do with\nthe result (as with any object) is either pass it as a parameter or\ninvoke a function to be performed once the "),o("code",[e._v("Promise")]),e._v(" is fulfilled.")]),e._v(" "),o("p",[o("code",[e._v("E(remoteServiceP).startup(params).then(result => useTheService(result));")])]),e._v(" "),o("p",[e._v("Deploy scripts and Zoe smart contracts often access services running in a\ndifferent vat. For instance, a deploy script may want to install a contract in a\nZoe instance running in a blockchain. But the deploy script\ncannot call "),o("code",[e._v("zoe.install(bundle)")]),e._v(", because it does not have local\naccess to the "),o("code",[e._v("zoe")]),e._v(" object in a different vat. However, the deploy\nscript is given access to a "),o("code",[e._v("zoe")]),e._v(" "),o("em",[e._v("presence")]),e._v(". To call methods on the\nactual Zoe object, the deploy code can do:")]),e._v(" "),o("div",{staticClass:"language-js extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" installationHandle "),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token constant"}},[e._v("E")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("zoe"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),o("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("bundle"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),o("p",[e._v("The "),o("code",[e._v("E()")]),e._v(' function is a local "bridge" that lets you invoke methods on\nremote objects. The local version of a remote object is called a\n'),o("strong",[e._v("presence")]),e._v(". "),o("code",[e._v("E()")]),e._v(" takes a presence as an argument and creates an\nobject that is a forwarder that doesn't know what methods the remote object has.")]),e._v(" "),o("p",[e._v("This is useful to know for debugging. If you misspell or incorrectly capitalize the method name,\nthe local environment can't tell you've done so. You'll only find out at runtime when the\nremote object complains that it doesn't know that method.")]),e._v(" "),o("p",[o("code",[e._v("E()")]),e._v(" performs the communication asynchronously. Method calls can take\nobjects in the current vat or presences for objects in other vats as arguments.")]),e._v(" "),o("p",[o("code",[e._v("E()")]),e._v(" is frequently used in code to call\n"),o("RouterLink",{attrs:{to:"/zoe/api/zoe.html"}},[e._v("Zoe Service API methods")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=a.exports}}]);