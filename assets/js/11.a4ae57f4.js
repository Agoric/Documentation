(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{361:function(t,s,a){t.exports=a.p+"assets/img/purse.350ee129.svg"},362:function(t,s,a){t.exports=a.p+"assets/img/payment.b49846c7.svg"},396:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"purses-and-payments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#purses-and-payments"}},[t._v("#")]),t._v(" Purses and Payments")]),t._v(" "),e("p",[t._v("Digital assets can be any of:")]),t._v(" "),e("ul",[e("li",[t._v("Currency-like, such as our imaginary Quatloos currency.")]),t._v(" "),e("li",[t._v("Goods-like digital assets, such as magic weapons for use in a game or theater tickets.")]),t._v(" "),e("li",[t._v("Other kinds of rights, such as the right to participate in a particular contract.")])]),t._v(" "),e("p",[t._v("In ERTP, digital assets exist in either a "),e("code",[t._v("purse")]),t._v(" or a "),e("code",[t._v("payment")]),t._v(":")]),t._v(" "),e("ul",[e("li",[e("strong",[e("code",[t._v("purse")])]),t._v(": Holds\nan amount of same-branded digital assets until part or\nall of them are withdrawn into a "),e("code",[t._v("payment")]),t._v(". A new "),e("code",[t._v("purse")]),t._v(" is created\nby an "),e("code",[t._v("issuer")]),t._v(" and can only hold assets of that "),e("code",[t._v("issuer")]),t._v("'s "),e("code",[t._v("brand")]),t._v(".")]),t._v(" "),e("li",[e("strong",[e("code",[t._v("payment")])]),t._v(":\nHolds a quantity of same-branded digital assets to transfer to another party.\nA new "),e("code",[t._v("payment")]),t._v(" is created either with new assets by a "),e("code",[t._v("mint")]),t._v(" or by\nwithdrawing assets from a "),e("code",[t._v("purse")]),t._v(". It can only hold assets of the same "),e("code",[t._v("brand")]),t._v(" as\nthat "),e("code",[t._v("mint")]),t._v(" or "),e("code",[t._v("purse")]),t._v(".")])]),t._v(" "),e("p",[t._v("For any "),e("code",[t._v("brand")]),t._v(", any number of "),e("code",[t._v("purses")]),t._v(" or "),e("code",[t._v("payments")]),t._v(" can hold assets\nof that "),e("code",[t._v("brand")]),t._v(". Neither a "),e("code",[t._v("purse")]),t._v(" nor a "),e("code",[t._v("payment")]),t._v(" can ever change their\nassociated "),e("code",[t._v("brand")]),t._v(".")]),t._v(" "),e("p",[t._v("Each "),e("code",[t._v("purse")]),t._v(" and "),e("code",[t._v("payment")]),t._v(" object contains a specific single amount of digital assets, which may be none at all ("),e("code",[t._v("empty")]),t._v(" in amountMath terms). In the same way\nyou might have separate bank accounts for different purposes,\nyou can have different purses for the same brand of digital asset.\nOne purse might hold 2 Quatloos and another purse might hold 3 Quatloos.")]),t._v(" "),e("p",[t._v("When you deposit assets into a "),e("code",[t._v("purse")]),t._v(" or "),e("code",[t._v("payment")]),t._v(", they are added to\nwhatever assets already exist there. So a 3 Quatloos deposit\ninto a "),e("code",[t._v("purse")]),t._v(" with 8 Quatloos, results in a "),e("code",[t._v("purse")]),t._v(" with 11 Quatloos. Similarly,\nthen withdrawing 6 Quatloos from that "),e("code",[t._v("purse")]),t._v(" into a new "),e("code",[t._v("payment")]),t._v(" leaves the "),e("code",[t._v("purse")]),t._v("\nwith 5 Quatloos and the new "),e("code",[t._v("payment")]),t._v(" has 6 Quatloos.")]),t._v(" "),e("p",[t._v("When adding a "),e("code",[t._v("payment")]),t._v(" to a "),e("code",[t._v("purse")]),t._v(", you must add the entire "),e("code",[t._v("payment")]),t._v(". To\nonly add part of a "),e("code",[t._v("payment")]),t._v(", you must first use "),e("code",[t._v("payment.split()")]),t._v("\nor "),e("code",[t._v("payment.splitMany()")]),t._v(" to split the "),e("code",[t._v("payment")]),t._v(" into two or more new "),e("code",[t._v("payments")]),t._v(".")]),t._v(" "),e("p",[e("code",[t._v("mints")]),t._v(" create entirely new digital assets and put them in a new "),e("code",[t._v("payment")]),t._v(".\nYou also create a "),e("code",[t._v("payment")]),t._v(" by withdrawing assets from a "),e("code",[t._v("purse")]),t._v(", by splitting an\nexisting "),e("code",[t._v("payment")]),t._v(", or by combining multiple "),e("code",[t._v("payments")]),t._v(" into one new one. Note\nthe "),e("code",[t._v("brand")]),t._v(" of the new "),e("code",[t._v("payment")]),t._v(" is the same as the associated "),e("code",[t._v("brand")]),t._v(" of its originating "),e("code",[t._v("mint")]),t._v(", "),e("code",[t._v("purse")]),t._v(" or "),e("code",[t._v("payment")]),t._v(".")]),t._v(" "),e("p",[t._v("You don't transfer assets directly from one "),e("code",[t._v("purse")]),t._v(" to\nanother "),e("code",[t._v("purse")]),t._v(". Instead, in ERTP you do something like these steps to send and receive assets. The actual send operation is up to you; ERTP does not\nimplement a way of sending object-containing messages between parties.")]),t._v(" "),e("ul",[e("li",[t._v("Send assets:\n"),e("ol",[e("li",[t._v("Withdraw assets described by an "),e("code",[t._v("amount")]),t._v("from a "),e("code",[t._v("purse")]),t._v(", creating a "),e("code",[t._v("payment")]),t._v(".")]),t._v(" "),e("li",[t._v("Send this "),e("code",[t._v("payment")]),t._v(" to a recipient as a message.")])])]),t._v(" "),e("li",[t._v("Receive assets:\n"),e("ol",[e("li",[t._v("If you don't already have one, create a "),e("code",[t._v("purse")]),t._v(" for the asset "),e("code",[t._v("brand")]),t._v("\nyou'll receive.")]),t._v(" "),e("li",[t._v("Receive the message with the "),e("code",[t._v("payment")]),t._v(".")]),t._v(" "),e("li",[t._v("Deposit the "),e("code",[t._v("payment")]),t._v(" in a "),e("code",[t._v("brand")]),t._v(" appropriate "),e("code",[t._v("purse")]),t._v(".")])])])]),t._v(" "),e("h2",{attrs:{id:"purses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#purses"}},[t._v("#")]),t._v(" Purses")]),t._v(" "),e("p",[t._v("You change a purse's balance by calling either "),e("code",[t._v("deposit()")]),t._v(" (to add assets) or\n"),e("code",[t._v("withdraw()")]),t._v(" (to remove assets) on it. A purse can be empty, which for\nfungible assets means it has a value of 0. For non-fungible\nassets, such as theatre tickets, it doesn't have any tickets.")]),t._v(" "),e("p",[t._v("Unlike "),e("code",[t._v("payments")]),t._v(", "),e("code",[t._v("purses")]),t._v(" are not meant to be sent to others. To transfer\ndigital assets, you should withdraw a "),e("code",[t._v("payment")]),t._v(" from a "),e("code",[t._v("purse")]),t._v(" and send\nthe "),e("code",[t._v("payment")]),t._v(" to another party.")]),t._v(" "),e("p",[t._v("You can create a "),e("em",[t._v("deposit facet")]),t._v(" for a "),e("code",[t._v("purse")]),t._v(". Deposit facets are either sent to other parties or made publicly known. Any party can deposit a "),e("code",[t._v("payment")]),t._v(" into the\ndeposit facet, which deposits it into its associated "),e("code",[t._v("purse")]),t._v(". However, no one can\nuse a deposit facet to either make a withdrawal from its "),e("code",[t._v("purse")]),t._v(" or get the "),e("code",[t._v("purse")]),t._v("'s balance.")]),t._v(" "),e("p",[t._v("If you have a deposit facet, you make a deposit to its associated "),e("code",[t._v("purse")]),t._v(" by calling\n"),e("code",[t._v("depositFacet.receive(payment);")]),t._v(". Note that you add a "),e("code",[t._v("payment")]),t._v(" to a "),e("code",[t._v("purse")]),t._v(" with a "),e("code",[t._v("deposit()")]),t._v(" method, while you add a "),e("code",[t._v("payment")]),t._v(" to a "),e("code",[t._v("depositFacet")]),t._v(" with a "),e("code",[t._v("receive()")]),t._v(" method.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("payment")]),t._v(" must be the same "),e("code",[t._v("brand")]),t._v(" as what\nthe associated "),e("code",[t._v("purse")]),t._v(" object can contain. Otherwise it throws an error.\nWhen sending a party a\ndeposit facet object, you should tell them what assets "),e("code",[t._v("brand")]),t._v(" it accepts.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(361),alt:"Purse methods"}})]),t._v(" "),e("p",[t._v("The following is a brief description and example of each "),e("code",[t._v("purse")]),t._v(" method. For\nmore detail, click the method's name to go to its entry in the "),e("RouterLink",{attrs:{to:"/ertp/api/#ertp-api"}},[t._v("ERTP\nAPI Reference")]),t._v(".")],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/ertp/api/purse.html#purse-getcurrentamount"}},[e("code",[t._v("purse.getCurrentAmount()")])])],1),t._v(" "),e("li",[t._v("Returns a description of the digital assets currently stored in the "),e("code",[t._v("purse")]),t._v(" as an "),e("code",[t._v("amount")]),t._v(". Note that a "),e("code",[t._v("purse")]),t._v(" can be empty.\n"),e("ul",[e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Balance should be 0 Quatloos.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentBalance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentAmount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Deposit a payment of 5 Quatloos")]),t._v("\nquatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Balance should be 5 Quatloos")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newBalance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentAmount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])]),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/purse.html#purse-withdraw-amount"}},[e("code",[t._v("purse.withdraw(amount)")])]),t._v(" "),e("ul",[e("li",[t._v("Withdraw the assets described by "),e("code",[t._v("amount")]),t._v(" from this "),e("code",[t._v("purse")]),t._v(" into a new\n"),e("code",[t._v("payment")]),t._v(". Returns the new "),e("code",[t._v("payment")]),t._v(".")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Withdraw 3 Quatloos from a purse.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withdraw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/purse.html#purse-deposit-payment-optamount"}},[e("code",[t._v("purse.deposit(payment, optAmount)")])]),t._v(" "),e("ul",[e("li",[t._v("Deposit the digital asset contents of the "),e("code",[t._v("payment")]),t._v(" into this "),e("code",[t._v("purse")]),t._v(",\nreturning a description of the "),e("code",[t._v("payment")]),t._v(" balance as an "),e("code",[t._v("amount")]),t._v(". If the optional argument\n"),e("code",[t._v("optAmount")]),t._v(" does not equal the "),e("code",[t._v("payment")]),t._v(" balance,  or if "),e("code",[t._v("payment")]),t._v("\nis an unresolved promise, it throws an error.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos123 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Deposit a payment for 123 quatloos into the purse. Ensure that this is the amount you expect.")]),t._v("\nquatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" secondPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Throws error since secondPayment is 100 Quatloos and quatloos123 is 123 Quatloos")]),t._v("\nt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("throws")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" quatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("secondPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  message"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("payment balance (an object) must equal amount (an object)")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/purse.html#purse-getdepositfacet"}},[e("code",[t._v("purse.getDepositFacet()")])]),t._v(" "),e("ul",[e("li",[t._v("Returns a deposit-only facet on the "),e("code",[t._v("purse")]),t._v(" that can be given\nto other parties. This lets them make a deposit to the "),e("code",[t._v("purse")]),t._v(", but not make\nwithdrawals from it or get its balance. Note that the command to add a "),e("code",[t._v("payment")]),t._v("'s\nassets via a "),e("code",[t._v("DepositFacet")]),t._v(" is not "),e("code",[t._v("deposit()")]),t._v(" but "),e("code",[t._v("receive()")]),t._v(" as shown here.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" depositOnlyFacet "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" purse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDepositFacet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Give depositOnlyFacet to someone else. They can pass a payment")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// that will be deposited:")]),t._v("\ndepositOnlyFacet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("receive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)]),t._v(" "),e("p",[t._v("In addition, the method to create a new, empty, "),e("code",[t._v("purse")]),t._v(" is called on an "),e("code",[t._v("issuer")]),t._v(":")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-makeemptypurse"}},[e("code",[t._v("issuer.makeEmptyPurse()")])]),t._v(" "),e("ul",[e("li",[t._v("Returns a new empty "),e("code",[t._v("purse")]),t._v(" for storing digital assets of the "),e("code",[t._v("brand")]),t._v(" the "),e("code",[t._v("issuer")]),t._v(" is associated with.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The new empty purse contains 0 Quatloos")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)]),t._v(" "),e("h2",{attrs:{id:"payments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#payments"}},[t._v("#")]),t._v(" Payments")]),t._v(" "),e("p",[e("img",{attrs:{src:a(362),alt:"Payment methods"}})]),t._v(" "),e("p",[t._v("Payments hold digital assets intended to be transferred to another party.\nThey are linear, meaning that either a "),e("code",[t._v("payment")]),t._v(" has its full\noriginal balance, or it is used up entirely. It is impossible to\npartially use a "),e("code",[t._v("payment")]),t._v(".")]),t._v(" "),e("p",[t._v("In other words, if you create a "),e("code",[t._v("payment")]),t._v(" containing\n10 Quatloos, the "),e("code",[t._v("payment")]),t._v(" will always either contain\n10 Quatloos or it will be deleted from its "),e("code",[t._v("issuer")]),t._v(" records and no\nlonger have any value. While a "),e("code",[t._v("payment")]),t._v(" can be either combined with others or\nsplit into multiple "),e("code",[t._v("payments")]),t._v(", in both cases the original "),e("code",[t._v("payment(s)")]),t._v("\nis/are deleted and the results put in one or more new "),e("code",[t._v("payments")]),t._v(".")]),t._v(" "),e("p",[t._v("A "),e("code",[t._v("payment")]),t._v(" can be deposited in purses, split into multiple\n"),e("code",[t._v("payments")]),t._v(", combined with other "),e("code",[t._v("payments")]),t._v(", and claimed (getting an exclusive "),e("code",[t._v("payment")]),t._v(" and revoking access from anyone else).")]),t._v(" "),e("p",[t._v("A "),e("code",[t._v("payment")]),t._v(" is often received from other parties. Since they are not\nself-verifying, you cannot trust "),e("code",[t._v("payments")]),t._v(". To get the verified balance\nof a "),e("code",[t._v("payment")]),t._v(", use the "),e("code",[t._v("getAmountOf(payment)")]),t._v(" method on the trusted "),e("code",[t._v("issuer")]),t._v("\nfor the "),e("code",[t._v("payment")]),t._v("'s "),e("code",[t._v("brand")]),t._v(".")]),t._v(" "),e("p",[t._v("To get the "),e("code",[t._v("issuer")]),t._v(" for a "),e("code",[t._v("brand")]),t._v(" you didn't create,\nask someone you trust. For example, the venue creating tickets for shows\ncan be trusted to give you the tickets' "),e("code",[t._v("issuer")]),t._v(". Or, a friend might have\na cryptocurrency they like, and, if you trust them, you might accept\nthat the "),e("code",[t._v("issuer")]),t._v(" they give you is valid.")]),t._v(" "),e("p",[t._v("To convert a "),e("code",[t._v("payment")]),t._v(" into a new "),e("code",[t._v("purse")]),t._v(":")]),t._v(" "),e("ol",[e("li",[t._v("Get the "),e("code",[t._v("payment")]),t._v("'s trusted "),e("code",[t._v("issuer")]),t._v(".")]),t._v(" "),e("li",[t._v("Use the "),e("code",[t._v("issuer")]),t._v(" to create an empty "),e("code",[t._v("purse")]),t._v(" for that "),e("code",[t._v("brand")]),t._v(".")]),t._v(" "),e("li",[t._v("Deposit the "),e("code",[t._v("payment")]),t._v(" into the new "),e("code",[t._v("purse")]),t._v(". "),e("code",[t._v("purse.deposit(payment)")]),t._v(" deletes the "),e("code",[t._v("payment")]),t._v(".")])]),t._v(" "),e("p",[e("code",[t._v("Payments")]),t._v(" have only one API method, but many methods for other ERTP components\nhave "),e("code",[t._v("payments")]),t._v(" as arguments and effectively operate on a "),e("code",[t._v("payment")]),t._v(". The following is a\nbrief description and example of each "),e("code",[t._v("payment")]),t._v("-related method. For\nmore detail, click the method's name to go to its entry in the "),e("RouterLink",{attrs:{to:"/ertp/api/#ertp-api"}},[t._v("ERTP\nAPI Reference")]),t._v(".")],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/ertp/api/payment.html#payment-getallegedbrand"}},[e("code",[t._v("payment.getAllegedBrand()")])]),t._v(" "),e("ul",[e("li",[t._v("Returns a "),e("code",[t._v("brand")]),t._v(", indicating what kind of digital asset the\n"),e("code",[t._v("payment")]),t._v(" purports to be. Since a "),e("code",[t._v("payment")]),t._v(" is not trusted, this result should be"),e("br"),t._v("\ntreated with suspicion. Either verify the value, or check\nthe result when you use it. Any successful operation by\nthe "),e("code",[t._v("issuer")]),t._v(" for that "),e("code",[t._v("brand")]),t._v(" done on the "),e("code",[t._v("payment")]),t._v(" verifies the "),e("code",[t._v("payment")]),t._v(".")])])],1)]),t._v(" "),e("p",[t._v("Other objects' "),e("code",[t._v("payment")]),t._v("-related methods:")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountof-payment"}},[e("code",[t._v("issuer.getAmountOf(payment)")])]),t._v(" "),e("ul",[e("li",[t._v("Get the amount of digital assets in the "),e("code",[t._v("payment")]),t._v(" as an "),e("code",[t._v("amount")]),t._v(".\nThe "),e("code",[t._v("payment")]),t._v(" itself is not trusted, so you must use the "),e("code",[t._v("issuer")]),t._v(" method associated\nwith its "),e("code",[t._v("brand")]),t._v(" to be sure of getting the true value.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns an amount with a value of 100 and the quatloos brand")]),t._v("\nquatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-burn-payment-optamount"}},[e("code",[t._v("issuer.burn(payment, optAmount)")])]),t._v(" "),e("ul",[e("li",[t._v("Burn all of the digital assets in the "),e("code",[t._v("payment")]),t._v(". "),e("code",[t._v("optAmount")]),t._v(" is\noptional but if present, the "),e("code",[t._v("payment")]),t._v(" balance must be equal to\nit. If "),e("code",[t._v("payment")]),t._v(" is a promise, the operation proceeds after it resolves.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amountToBurn "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" paymentToBurn "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amountToBurn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// burntAmount is 10 quatloos")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" burntAmount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("burn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paymentToBurn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountToBurn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-claim-payment-optamount"}},[e("code",[t._v("issuer.claim(payment, optAmount)")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Transfer all assets from the "),e("code",[t._v("payment")]),t._v(" to a returned new "),e("code",[t._v("payment")]),t._v("\nand delete the original from the "),e("code",[t._v("issuer")]),t._v("'s records. Any references to the old\n"),e("code",[t._v("payment")]),t._v(" outside the "),e("code",[t._v("issuer")]),t._v(" will still exist, but if anyone attempts to use the\nold "),e("code",[t._v("payment")]),t._v(", an error is thrown.")]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("optAmount")]),t._v(" is\npresent, the "),e("code",[t._v("payment")]),t._v(" balance must be equal to it or it throws\nan error. If "),e("code",[t._v("payment")]),t._v(" is a promise, the operation proceeds after it resolves.")])]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amountToTransfer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" originalPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amountToTransfer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("claim")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  originalPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amountToTransfer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-combine-paymentsarray-opttotalamount"}},[e("code",[t._v("issuer.combine(paymentsArray)")])]),t._v(" "),e("ul",[e("li",[t._v("Combine multiple "),e("code",[t._v("payments")]),t._v(" into one, returned, "),e("code",[t._v("payment")]),t._v(". If any "),e("code",[t._v("payment")]),t._v(" in\nthe array is a promise, the operation proceeds after every "),e("code",[t._v("payment")]),t._v("\nresolves. All "),e("code",[t._v("payments")]),t._v(" in the array are burned on successful completion.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create an array of 100 payments of 1 unit each")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payments "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  payments"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// combinedPayment equals 100")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("combine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payments"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-split-payment-paymentamounta"}},[e("code",[t._v("issuer.split(payment, paymentAmountA)")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Split one "),e("code",[t._v("payment")]),t._v(" into two new ones, A and B, returned in\nan array. "),e("code",[t._v("paymentAmountA")]),t._v(" determines A's value, and whatever is\nleft of the original "),e("code",[t._v("payment")]),t._v(" after subtracting A is B's value.\nIf "),e("code",[t._v("paymentAmountA")]),t._v(" has a larger "),e("code",[t._v("value")]),t._v(" than "),e("code",[t._v("payment")]),t._v(", it throws an error.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("payment")]),t._v(" argument is deleted from the issuer's records. If "),e("code",[t._v("payment")]),t._v(" is\na promise, the operation proceeds after the promise for a payment resolves.")])]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("paymentA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" paymentB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  oldPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// paymentA is 10 quatloos, payment B is 20 quatloos.")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-splitmany-payment-amountarray"}},[e("code",[t._v("issuer.splitMany(payment, amountArray)")])]),t._v(" "),e("ul",[e("li",[t._v("Split "),e("code",[t._v("payment")]),t._v(" into multiple "),e("code",[t._v("payments")]),t._v(", returned as an array the\nsame length as "),e("code",[t._v("amountArray")]),t._v(" and with its "),e("code",[t._v("payments")]),t._v(" having the\nsame values as specified for "),e("code",[t._v("amountArray")]),t._v("'s elements. If "),e("code",[t._v("payment")]),t._v("\nis a promise for a payment, the operation proceeds after it resolves. If\nthe "),e("code",[t._v("payment")]),t._v(" value is not equal to the sum of "),e("code",[t._v("amountArray")]),t._v("'s\nvalues, the operation fails. On success, the original "),e("code",[t._v("payment")]),t._v(" is\ndeleted from the issuer's records.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldQuatloosPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" goodQuatloosAmounts "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayOfNewPayments "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("splitMany")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  oldQuatloosPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  goodQuatloosAmounts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-islive-payment"}},[e("code",[t._v("issuer.isLive(payment)")])]),t._v(" "),e("ul",[e("li",[t._v("Returns "),e("code",[t._v("true")]),t._v(" if "),e("code",[t._v("payment")]),t._v(" has value. If "),e("code",[t._v("payment")]),t._v(" is a promise for payment,\nthe operation proceeds upon resolution.")])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/mint.html#mint-mintpayment-newamount"}},[e("code",[t._v("mint.mintPayment(newAmount)")])]),t._v(" "),e("ul",[e("li",[t._v("Returns a new "),e("code",[t._v("payment")]),t._v(" containing the newly minted assets corresponding to the "),e("code",[t._v("newAmount")]),t._v(" argument. Note\nthat unlike creating a new "),e("code",[t._v("payment")]),t._v(" by withdrawing existing assets from a "),e("code",[t._v("purse")]),t._v(",\nthis creates new digital assets of the specified in "),e("code",[t._v("newAmount")]),t._v(" "),e("code",[t._v("brand")]),t._v(".")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1000 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1000"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/purse.html#purse-deposit-payment-optamount"}},[e("code",[t._v("purse.deposit(payment, optAmount)")])]),t._v(" "),e("ul",[e("li",[t._v("Deposit all of "),e("code",[t._v("payment")]),t._v(" into this "),e("code",[t._v("purse")]),t._v(", returning the deposit\n"),e("code",[t._v("amount")]),t._v(" description. If optional "),e("code",[t._v("optAmount")]),t._v(" does not equal the "),e("code",[t._v("payment")]),t._v("'s balance\nor if "),e("code",[t._v("payment")]),t._v(" is an unresolved promise, it throws an error.")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos123 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Deposit a payment for 123 quatloos into the purse. Ensure that this is the amount you expect.")]),t._v("\nquatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" secondPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Throws error since secondPayment is 100 Quatloos and quatloos123 is 123 Quatloos")]),t._v("\nt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("throws")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" quatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("secondPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  message"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("payment balance (an object) must equal amount (an object)")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ertp/api/purse.html#purse-getdepositfacet"}},[e("code",[t._v("purse.getDepositFacet()")])]),t._v(" "),e("ul",[e("li",[t._v("Creates a deposit-only facet on the "),e("code",[t._v("purse")]),t._v(" that can be given to\nother parties that lets them deposit a "),e("code",[t._v("payment")]),t._v(" (but not\nwithdraw) into the "),e("code",[t._v("purse")]),t._v(".")]),t._v(" "),e("li",[e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" depositOnlyFacet "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" purse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDepositFacet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Give depositOnlyFacet to someone else. They can pass a payment")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// that will be deposited:")]),t._v("\ndepositOnlyFacet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("receive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)]),t._v(" "),e("h2",{attrs:{id:"purse-and-payment-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#purse-and-payment-example"}},[t._v("#")]),t._v(" "),e("code",[t._v("purse")]),t._v(" and "),e("code",[t._v("payment")]),t._v(" example")]),t._v(" "),e("p",[t._v("The following code creates a new "),e("code",[t._v("purse")]),t._v(" for the "),e("code",[t._v("quatloos")]),t._v(" brand, deposits\n10 Quatloos into the "),e("code",[t._v("purse")]),t._v(", withdraws 3 Quatloos from the "),e("code",[t._v("purse")]),t._v(" into a\n"),e("code",[t._v("payment")]),t._v(", and finally returns an "),e("code",[t._v("amount")]),t._v(" describing what's currently in the "),e("code",[t._v("purse")]),t._v(", 7 Quatloos.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a purse with a balance of 10 Quatloos")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  issuer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mint"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amountMath"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the two arguments aren't equal (i.e. both need to be for 10 Quatloos),")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throws an error. But they are both for 10 Quatloos, so no problem.")]),t._v("\nquatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Withdraw 3 Quatloos from the purse into a payment")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" withdrawalPayment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withdraw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The balance of the withdrawal payment is 3 Quatloos")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("withdrawalPayment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The new balance of the purse is 7 Quatloos")]),t._v("\nquatloosPurse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentAmount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);