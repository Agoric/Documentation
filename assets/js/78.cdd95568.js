(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{478:function(t,a,s){"use strict";s.r(a);var n=s(44),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"constantproduct-amm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constantproduct-amm"}},[t._v("#")]),t._v(" ConstantProduct AMM")]),t._v(" "),s("Zoe-Version"),t._v(" "),s("h5",{attrs:{id:"view-the-code-on-github-last-updated-2021-10-26"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-the-code-on-github-last-updated-2021-10-26"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://github.com/Agoric/agoric-sdk/blob/master/packages/zoe/src/contracts/vpool-xyk-amm/multipoolMarketMaker.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("View the code on Github"),s("OutboundLink")],1),t._v(" (Last updated: 2021-10-26)")]),t._v(" "),s("h5",{attrs:{id:"view-contracts-on-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#view-contracts-on-github"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts",target:"_blank",rel:"noopener noreferrer"}},[t._v("View contracts on Github"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v('The Constant Product AMM is an automated market maker (AMM) that supports multiple\nliquidity pools and direct exchanges across pools. It\'s called the "Constant\nProduct" AMM because it uses the constant product rule, which is one of a family of\nrules that enable a market maker to guarantee to be able to continue to make\ntrades, regardless of how prices change. (The constant product rule does this by\nensuring that the product of the contents of two pools of assets remains constant\nas trading takes place.)')]),t._v(" "),s("p",[t._v("Each liquidity pool maintains a price for exchanges between the central token\nand a secondary token. Secondary tokens can be exchanged with each other, but\nonly through the central token. For example, if BLD and ATM are two token types\nand RUN is the central currency, a swap giving ATM and wanting BLD would first\nuse the pool (ATM, RUN) then the pool (BLD, RUN). There are no direct liquidity\npools between two secondary tokens.")]),t._v(" "),s("p",[t._v("There should only need to be one instance of this contract, so liquidity can be\nshared as much as possible. Each secondary currency has a separate pool of liquidity.")]),t._v(" "),s("p",[t._v("When the contract is instantiated, the terms specify the central token.  Invitations\nfor adding and removing liquidity and for making trades are available by calling\nmethods on the publicFacet. Other publicFacet operations support querying prices and\nthe sizes of pools. Create new pools with "),s("code",[t._v("addPool()")]),t._v(".")]),t._v(" "),s("p",[t._v("When making trades or requesting prices, the caller must specify that either the\ninput price (swapIn, getInputPrice) or the output price (swapOut, getOutputPrice) is\nfixed. For swaps, the required keywords are "),s("code",[t._v("In")]),t._v(" for the trader's "),s("code",[t._v("give")]),t._v(" amount, and\n"),s("code",[t._v("Out")]),t._v(" for the trader's "),s("code",[t._v("want")]),t._v(" amount.  "),s("code",[t._v("getInputPrice()")]),t._v(" and "),s("code",[t._v("getOutputPrice()")]),t._v(" each\ntake two amounts. When "),s("code",[t._v("getInputPrice()")]),t._v(" or "),s("code",[t._v("swapIn()")]),t._v(" is called, the "),s("code",[t._v("amountOut")]),t._v("\nparameter indicated the desired "),s("code",[t._v("amountOut")]),t._v("; if "),s("code",[t._v("amountIn")]),t._v(" is insufficient to provide\nthat much, the result indicates that no trade will take place. (The returned amountIn\nand amountOut will both be empty amounts.) Similarly, when "),s("code",[t._v("swapIn()")]),t._v(" or\n"),s("code",[t._v("getOutputPrice()")]),t._v(" is called, "),s("code",[t._v("amountIn")]),t._v(" is treated as a maximum.  If it would take a\ngreater amount to get the specified "),s("code",[t._v("amountOut")]),t._v(", the result indicates no trade.")]),t._v(" "),s("p",[t._v("When adding and removing liquidity, the keywords are "),s("code",[t._v("Central")]),t._v(", "),s("code",[t._v("Secondary")]),t._v(", and\n"),s("code",[t._v("Liquidity")]),t._v(". Adding liquidity uses "),s("code",[t._v("Central")]),t._v(" and "),s("code",[t._v("Secondary")]),t._v(" in the "),s("code",[t._v("give")]),t._v(" section\nand "),s("code",[t._v("Liquidity")]),t._v(" in the "),s("code",[t._v("want")]),t._v(" section. Removing liquidity reverses the keywords:\n"),s("code",[t._v("Liquidity")]),t._v(" in the "),s("code",[t._v("give")]),t._v(" section, and "),s("code",[t._v("Central")]),t._v(" and "),s("code",[t._v("Secondary")]),t._v(" in the want\nsection. If the proposal specifies amounts directly taken from a recent quote, and\nany trading has intervened, the trade is unlikely to be accepted. You can either\nspecify limits on how far the price may have moved, or specify limits of zero and\ntrust the contract to trade fairly.")]),t._v(" "),s("p",[t._v("Transactions that don't require an invitation include "),s("code",[t._v("addPool()")]),t._v(" and the queries\n("),s("code",[t._v("getInputPrice()")]),t._v(", "),s("code",[t._v("getOutputPrice()")]),t._v(", "),s("code",[t._v("getPoolAllocation()")]),t._v(",\n"),s("code",[t._v("getLiquidityIssuer()")]),t._v(", and "),s("code",[t._v("getLiquiditySupply()")]),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"the-constantproduct-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-constantproduct-api"}},[t._v("#")]),t._v(" The ConstantProduct API")]),t._v(" "),s("p",[t._v("These examples use RUN as the central token. BLD and ATM are secondary currencies.")]),t._v(" "),s("h3",{attrs:{id:"trading-with-the-constantproduct-amm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trading-with-the-constantproduct-amm"}},[t._v("#")]),t._v(" Trading with the ConstantProduct AMM")]),t._v(" "),s("p",[t._v("Once trading pools have been set up (see below), a new trader can interact with the\nmarket by asking for the current price, making an invitation, and making an\noffer. If Sara has ATM and needs 275 BLD for a deal she has negotiated, she can use\ngetOutputPrice() to get a quote. (An empty amount indicates no limit on the\namountOut of the result.)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quote "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("publicFacet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("275n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ATMBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Let's assume the quote says she needs to provide 216 ATM. Sara believes the\nprice is somewhat volatile, and she doesn't want to make repeated calls, so she pads\nher offer. If the appropriate pools don't exist, she'll get an error ("),s("code",[t._v("brands were not recognized")]),t._v("). If someone sells a lot of ATM into the pool just ahead of\nher, the price will increase, and she'll have to decide whether to deposit more\nATM or wait for the price to stabilize. If someone buys a lot of ATM just\nahead of her order, she'll get the 275 BLD for less and will get some ATM\nback.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" saraProposal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  want"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Out"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("275n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  give"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" In"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("atmBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("220n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" swapInvitation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("publicFacet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeSwapOutInvitation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" atmPayment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" In"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" saraAtmPurse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withdraw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("atmBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("220n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" saraSeat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("swapInvitation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" saraProposal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" atmPayment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" saraResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" saraSeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOfferResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("If the result is "),s("code",[t._v("Swap successfully completed.")]),t._v(", she got the BLD for 220 ATM\nor less (she'll want to deposit any refund). Otherwise the market price moved against\nher, and she'll have to check the price again and make another offer.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" BLDProceeds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("saraSeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPayout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'In'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" atmRefund "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("saraSeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPayout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Out'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" BLDProceedsAmount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("saraBLDPurse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDProceeds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("saraAtmPurse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deposit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("atmRefund"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"creating-a-new-pool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-pool"}},[t._v("#")]),t._v(" Creating a new Pool")]),t._v(" "),s("p",[t._v("When the contract is first instantiated, there won't be any pools ready for\ntrading. "),s("code",[t._v("addPool()")]),t._v(" adds a new currency, which can then be funded.  (All\ncurrencies must be fungible.) When a pool is first funded, there's no other basis\non which to decide how much liquidity to create, so the liquidity amount equals the\namount of the central token in the offer.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" BLDLiquidityIssuer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("publicFacet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDIssuer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BLD'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Alice sees that the current rate in the external market is 2 BLD for each\nRUN, so she deposits twice as many BLD as RUN to fund the market.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" aliceProposal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  want"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Liquidity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BLDLiquidity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  give"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Secondary"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Central"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RUNBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" alicePayments "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Secondary"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" aliceBLDPayment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Central"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" aliceRUNPayment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" aliceAddLiquidityInvitation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("publicFacet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeAddLiquidityInvitation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" addLiquiditySeat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  aliceAddLiquidityInvitation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  aliceProposal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  alicePayments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"adding-liquidity-to-an-existing-pool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-liquidity-to-an-existing-pool"}},[t._v("#")]),t._v(" Adding Liquidity to an Existing Pool")]),t._v(" "),s("p",[t._v("When adding or removing liquidity to pools that have already been established, the\namounts deposited must be in proportion to the current balances in the pool. The\ncalculation is based on the amount of the "),s("code",[t._v("Central")]),t._v(" asset. The "),s("code",[t._v("Secondary")]),t._v(" assets\nmust be added in proportion.  If less "),s("code",[t._v("Secondary")]),t._v(" is provided than required, the\noffer is exited with no trade. If more of the secondary is provided than is required,\nthe excess is returned.")]),t._v(" "),s("p",[t._v("Bob calls "),s("code",[t._v("getPoolAllocation()")]),t._v(" to find the relative levels. Let's say the answer is\nthat the current ratio is 1234 BLD to 1718 RUN.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" BLDPoolAlloc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("publicFacet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPoolAllocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" RUNValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BLDPoolAlloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Central"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" BLDValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BLDPoolAlloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("secondary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Now he can add liquidity.  The price ratio changes when anyone trades with the pool,\nso he should leave some flexibility in the proposal. The pool calculates the amount\nof "),s("code",[t._v("secondary")]),t._v(" currency required based on the amount of "),s("code",[t._v("central")]),t._v(" currency provided.\nBob bumps up the amount of BLD he'll contribute by a little. If he was concerned\nabout how much liquidity this would produce, he would calculate it and specify a rough\nfigure, but there's no need in this case.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bobProposal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  give"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Central"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RUNBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1800n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Secondary"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BLDBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1200n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  want"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Liquidity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AmountMath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("liquidityBrand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  exit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" onDemand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bobPayments "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Central"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bobRUNPayment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Secondary"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bobBLDPayment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" seat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addLiquidityInvite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bobProposal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bobPayments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"governance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#governance"}},[t._v("#")]),t._v(" Governance")]),t._v(" "),s("p",[t._v("The ConstantProduct AMM uses governance to manage changes to two parameters: "),s("code",[t._v("PoolFee")]),t._v("\nand "),s("code",[t._v("ProtocolFee")]),t._v(". The current values of the parameters and the history of governance\nvoting to update their values is visible through the governance APIs.")]),t._v(" "),s("p",[t._v("An instance of the ConstantProduct AMM is managed by a contractGovernor, which\ncontrols the ability to change contract parameters and add new types of collateral.\nThe contractGovernor adds these four methods to the contract's publicFacet:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("getSubscription()")]),t._v(": get a "),s("RouterLink",{attrs:{to:"/guides/js-programming/notifiers.html"}},[t._v("Subscription")]),t._v(" that\nupdates when votes are called.")],1),t._v(" "),s("li",[s("code",[t._v("getContractGovernor()")]),t._v(": returns the contractGovernor for verification.")]),t._v(" "),s("li",[s("code",[t._v("getGovernedParamsValues()")]),t._v(": returns a structure showing the current values of\nthe two parameters.")]),t._v(" "),s("li",[s("code",[t._v("getParamValue('PoolFee')")]),t._v(": gets a description of the current value of\neither parameter. Note the initial capital letter.")])])],1)}),[],!1,null,null,null);a.default=e.exports}}]);