(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{420:function(t,a,n){"use strict";n.r(a);var s=n(41),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"amount-math"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amount-math"}},[t._v("#")]),t._v(" Amount Math")]),t._v(" "),n("p",[t._v("Logic for manipulating "),n("code",[t._v("amounts")]),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"importing-and-using-amountmath"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#importing-and-using-amountmath"}},[t._v("#")]),t._v(" Importing and Using AmountMath")]),t._v(" "),n("p",[t._v("To use the "),n("code",[t._v("amountMath")]),t._v(" library, import it from ERTP:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("import { amountMath } from '@agoric/ertp';")])])]),t._v(" "),n("h2",{attrs:{id:"amountmath-kinds"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-kinds"}},[t._v("#")]),t._v(" AmountMath Kinds")]),t._v(" "),n("p",[t._v("There are two different kinds of "),n("code",[t._v("amountMath")]),t._v(", each of which implements all the\nmethods shown on this page. You only have to specify the "),n("code",[t._v("amountMath")]),t._v(" kind when\ncreating its associated "),n("code",[t._v("issuer")]),t._v(".")]),t._v(" "),n("p",[t._v("The two "),n("code",[t._v("amountMathKinds")]),t._v(" each implement all of the same API methods\n(i.e. "),n("code",[t._v("amountMath")]),t._v(" methods are polymorphic). We recommend you import\nthe "),n("code",[t._v("MathKind")]),t._v(" values from "),n("code",[t._v("@agoric/ERTP")]),t._v(" instead of making the strings yourself.")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("MathKind.NAT")]),t._v(" ("),n("code",[t._v("nat")]),t._v("): Used with fungible assets. "),n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("values")]),t._v(" are natural numbers (non-negative BigInts).")]),t._v(" "),n("li",[n("code",[t._v("MathKind.SET")]),t._v(" ("),n("code",[t._v("set")]),t._v("): Used with non-fungible assets. "),n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("values")]),t._v(" are objects or records with multiple properties.")])]),t._v(" "),n("p",[t._v("Use "),n("code",[t._v("makeIssuerKit(allegedName, amountMathKind, displayInfo)")]),t._v(" to specify which "),n("code",[t._v("amountMathKind")]),t._v("\nyour contract uses. The second parameter, "),n("code",[t._v("amountMathKind")]),t._v(" is optional and\ndefaults to "),n("code",[t._v("MathKind.NAT")]),t._v(" if not given. For example")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to MathKind.NAT and undefined displayInfo")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kitties'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to undefined displayInfo")]),t._v("\n")])])]),n("h2",{attrs:{id:"amount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amount"}},[t._v("#")]),t._v(" Amount")]),t._v(" "),n("p",[t._v("An "),n("code",[t._v("amount")]),t._v(' is a description of digital assets, answering the\nquestions "how much?" and "of what kind?". It is a '),n("code",[t._v("value")]),t._v(' ("how much")\nlabeled with a '),n("code",[t._v("brand")]),t._v(' ("of what kind"). '),n("code",[t._v("AmountMath")]),t._v(" executes the logic\nof how an "),n("code",[t._v("amount")]),t._v(" changes when digital assets are merged, separated, or\notherwise manipulated. For example, a deposit of 2 Quatloos into a "),n("code",[t._v("purse")]),t._v("\nthat already has 3 Quatloos gives a new balance of 5 Quatloos.\nAn empty "),n("code",[t._v("purse")]),t._v(" has 0 Quatloos.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("someAmount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" someBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" someValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"value"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" Value")]),t._v(" "),n("p",[n("code",[t._v("values")]),t._v(" describe how much of something can be owned or shared. A fungible "),n("code",[t._v("value")]),t._v(" is\nnormally represented by a natural number "),n("code",[t._v("BigInt")]),t._v(". Other "),n("code",[t._v("values")]),t._v(" may be represented as strings\nnaming a particular right, or an arbitrary object that sensibly represents the rights at issue.")]),t._v(" "),n("p",[t._v("Note that numbers in a value are represented as type "),n("code",[t._v("BigInt")]),t._v(", which allows for arbitrarily\nlarge numbers. "),n("code",[t._v("BigInts")]),t._v(' are depicted as an integer with an appended "n"; e.g. '),n("code",[t._v("10n")]),t._v(", "),n("code",[t._v("137n")]),t._v(".\nSee the "),n("RouterLink",{attrs:{to:"/guides/js-programming/bigint.html"}},[n("code",[t._v("BigInt")]),t._v(" section in the JavaScript Distributed Programming Guide")]),t._v(" for details.")],1),t._v(" "),n("h2",{attrs:{id:"brand-parameters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#brand-parameters"}},[t._v("#")]),t._v(" Brand parameters")]),t._v(" "),n("p",[t._v("Note that many "),n("code",[t._v("amountMath")]),t._v(" methods have a "),n("code",[t._v("brand")]),t._v(" argument, either required or\noptional. For the ones with an optional "),n("code",[t._v("brand")]),t._v(' argument, you should use it if\nyou need to do an "absolute" check on the brand in the '),n("code",[t._v("amount")]),t._v(" argument(s).\nIn this case, you want to use the "),n("code",[t._v("brand")]),t._v(" you got from the issuer (or from Zoe)\nas the optional parameter to compare the "),n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("brand")]),t._v("(s) to. If they are\nnot equal, an error is thrown.")]),t._v(" "),n("h2",{attrs:{id:"makelocalamountmath-issuer-deprecated-20-03-2021"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#makelocalamountmath-issuer-deprecated-20-03-2021"}},[t._v("#")]),t._v(" "),n("code",[t._v("makeLocalAmountMath(issuer)")]),t._v(" DEPRECATED 20-03-2021")]),t._v(" "),n("h2",{attrs:{id:"amountmath-getbrand-deprecated-20-03-2021"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getbrand-deprecated-20-03-2021"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.getBrand()")]),t._v(" DEPRECATED 20-03-2021")]),t._v(" "),n("h2",{attrs:{id:"amountmath-getamountmathkind-deprecated-20-03-2021"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getamountmathkind-deprecated-20-03-2021"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.getAmountMathKind()")]),t._v(" DEPRECATED 20-03-2021")]),t._v(" "),n("h2",{attrs:{id:"amountmath-make-brand-allegedvalue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-make-brand-allegedvalue"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.make(brand, allegedValue)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("brand")]),t._v(" "),n("code",[t._v("{Brand}")])]),t._v(" "),n("li",[n("code",[t._v("allegedValue")]),t._v(" "),n("code",[t._v("{Value}")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Amount}")])])]),t._v(" "),n("p",[t._v("Make an "),n("code",[t._v("amount")]),t._v(" from a "),n("code",[t._v("value")]),t._v(" by adding the "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("p",[t._v("Remember that numbers in "),n("code",[t._v("values")]),t._v(" are represented as "),n("code",[t._v("BigInts")]),t._v('; integers\nwith an appended "n". As seen in the below example, we strongly encourage\nusing BigInts as the argument to '),n("code",[t._v("amountMath.make()")]),t._v(". While "),n("code",[t._v("amountMath.make()")]),t._v("\ndoes coerce a "),n("code",[t._v("Number")]),t._v(" argument to a "),n("code",[t._v("BigInt")]),t._v(", so both "),n("code",[t._v("4")]),t._v(" and "),n("code",[t._v("4n")]),t._v(" return an\namount with a value of "),n("code",[t._v("4n")]),t._v(", using "),n("code",[t._v("Numbers")]),t._v(" is likely to confuse later viewers\nof your code.")]),t._v(" "),n("p",[t._v("See the "),n("RouterLink",{attrs:{to:"/guides/js-programming/bigint.html"}},[t._v("BigInt section in the JavaScript Distributed Programming Guide")]),t._v(" for\ndetails about "),n("code",[t._v("BigInts")]),t._v(".")],1),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//amount837 = { value: 837n, brand: quatloos }")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amount837 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("837n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-coerce-brand-allegedamount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-coerce-brand-allegedamount"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.coerce(brand, allegedAmount)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("brand")]),t._v(" "),n("code",[t._v("{Brand}")])]),t._v(" "),n("li",[n("code",[t._v("allegedAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Amount}")])])]),t._v(" "),n("p",[t._v("Make sure this "),n("code",[t._v("amount")]),t._v(" is valid and if so, return it.\nIf not valid, throws an exception. This checks if\nan "),n("code",[t._v("amount")]),t._v(" coming from elsewhere is for the expected "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos50 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns the same amount as quatloos50")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" verifiedAmount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("coerce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allegedAmount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),n("h2",{attrs:{id:"amountmath-getvalue-brand-amount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-getvalue-brand-amount"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.getValue(brand, amount)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Value}")])])]),t._v(" "),n("p",[t._v("Returns the "),n("code",[t._v("value")]),t._v(" from the given "),n("code",[t._v("amount")]),t._v(". Remember, numeric values\nare represented as "),n("code",[t._v("BigInts")]),t._v(", not "),n("code",[t._v("Numbers")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos123 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns 123n")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos123"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-makeempty-brand-amountmathkind"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-makeempty-brand-amountmathkind"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.makeEmpty(brand, amountMathKind)")])]),t._v(" "),n("ul",[n("li",[t._v("Returns: "),n("code",[t._v("{Amount}")])])]),t._v(" "),n("p",[t._v("Returns the "),n("code",[t._v("amount")]),t._v(" representing an empty "),n("code",[t._v("amount")]),t._v(" for the "),n("code",[t._v("brand")]),t._v(" argument's\n"),n("code",[t._v("brand")]),t._v(". This is the identity element for "),n("code",[t._v("amountMath.add()")]),t._v("\nand "),n("code",[t._v("amountMath.subtract()")]),t._v(". The empty "),n("code",[t._v("value")]),t._v(" depends\non whether the "),n("code",[t._v("amountMathKind")]),t._v(" is "),n("code",[t._v("MathKind.NAT")]),t._v(" ("),n("code",[t._v("0")]),t._v(") of "),n("code",[t._v("MathKind.SET")]),t._v(" ("),n("code",[t._v("[]")]),t._v(").")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an empty amount.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since this is a fungible amountKind it returns an amount")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with 0n as its value.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-makeemptyfromamount-amount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-makeemptyfromamount-amount"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.makeEmptyFromAmount(amount)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Amount}")])])]),t._v(" "),n("p",[t._v("Return the "),n("code",[t._v("amount")]),t._v(" representing an empty amount, using another\n"),n("code",[t._v("amount")]),t._v(" as the template for the "),n("code",[t._v("brand")]),t._v(" and "),n("code",[t._v("mathKind")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// quatloosAmount837 = { value: 837n, brand: quatloos }")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosAmount837 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("837n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount = { value: 0n, brand: quatloos }")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosAmount0 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyFromAmount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmount837"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-isempty-amount-brand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isempty-amount-brand"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.isEmpty(amount, brand?)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("amount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("brand?")]),t._v(" "),n("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),n("code",[t._v("undefined")]),t._v(")")]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Boolean}")])])]),t._v(" "),n("p",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("amount")]),t._v(" is empty. Otherwise returns "),n("code",[t._v("false")]),t._v(".")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("brand")]),t._v(" parameter is optional, and defaults to "),n("code",[t._v("undefined")]),t._v(".\nIf it does not match "),n("code",[t._v("amount")]),t._v("'s "),n("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-isgte-leftamount-rightamount-brand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isgte-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.isGTE(leftAmount, rightAmount, brand?)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("leftAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("rightAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("brand")]),t._v(" "),n("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),n("code",[t._v("undefined")]),t._v(")")]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{boolean}")])])]),t._v(" "),n("p",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("value")]),t._v(" of "),n("code",[t._v("leftAmount")]),t._v(" is greater than or equal to\nthe "),n("code",[t._v("value")]),t._v(" of "),n("code",[t._v("rightAmount")]),t._v(". Both "),n("code",[t._v("amount")]),t._v(" arguments must have the same\n"),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),n("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),n("code",[t._v("amounts")]),t._v(" "),n("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),n("p",[t._v("For non-fungible "),n("code",[t._v("values")]),t._v(', what "greater than or equal to" is depends on the\nkind of '),n("code",[t._v("amountMath")]),t._v(". For example, { 'seat 1', 'seat 2' } is considered\ngreater than { 'seat 2' } because the former both contains all of the latter's\ncontents and has additional elements.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-isequal-leftamount-rightamount-brand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-isequal-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.isEqual(leftAmount, rightAmount, brand?)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("leftAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("rightAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("brand")]),t._v(" "),n("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),n("code",[t._v("undefined")]),t._v(")")]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{boolean}")])])]),t._v(" "),n("p",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("value")]),t._v(" of "),n("code",[t._v("leftAmount")]),t._v(" is equal to\nthe "),n("code",[t._v("value")]),t._v(" of "),n("code",[t._v("rightAmount")]),t._v(". Both "),n("code",[t._v("amount")]),t._v(" arguments must have the same\n"),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),n("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),n("code",[t._v("amounts")]),t._v(" "),n("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),n("p",[t._v("For non-fungible "),n("code",[t._v("values")]),t._v(', "equal to" depends on the kind of '),n("code",[t._v("amountMath")]),t._v(".\nFor example, { 'seat 1', 'seat 2' } is considered\nunequal to { 'seat 2' } because the number of items in the former is\ndifferent from that of the latter. Similarly { 'seat 1',  'seat 3'  } and { 'seat 2' }\nare considered unequal because the latter has elements that are not contained in the former.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" empty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos5b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos10 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns false")]),t._v("\namountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloos10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-add-leftamount-rightamount-brand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-add-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.add(leftAmount, rightAmount, brand?)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("leftAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("rightAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("brand")]),t._v(" "),n("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),n("code",[t._v("undefined")]),t._v(")")]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Amount}")])])]),t._v(" "),n("p",[t._v("Returns a new "),n("code",[t._v("amount")]),t._v(" that is the union of "),n("code",[t._v("leftAmount")]),t._v(" and "),n("code",[t._v("rightAmount")]),t._v(". Both\narguments must be of the same "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),n("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),n("code",[t._v("amounts")]),t._v(" "),n("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),n("p",[t._v("For fungible "),n("code",[t._v("amounts")]),t._v(" this means adding their "),n("code",[t._v("values")]),t._v(". For non-fungible\n"),n("code",[t._v("amounts")]),t._v(", it usually means including all of the elements from "),n("code",[t._v("leftAmount")]),t._v("\nand "),n("code",[t._v("rightAmount")]),t._v(".")]),t._v(" "),n("p",[t._v("If either "),n("code",[t._v("leftAmount")]),t._v(" or "),n("code",[t._v("rightAmount")]),t._v(" is empty, it just returns the non-empty\n"),n("code",[t._v("amount")]),t._v(" argument. If both are empty, it returns an empty "),n("code",[t._v("amount")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsBrand "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),t._v("'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount whose value is ['1', '2', '4', '3']")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"amountmath-subtract-leftamount-rightamount-brand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amountmath-subtract-leftamount-rightamount-brand"}},[t._v("#")]),t._v(" "),n("code",[t._v("amountMath.subtract(leftAmount, rightAmount, brand?)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("leftAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("rightAmount")]),t._v(" "),n("code",[t._v("{Amount}")])]),t._v(" "),n("li",[n("code",[t._v("brand")]),t._v(" "),n("code",[t._v("{Brand}")]),t._v(" (optional, defaults to "),n("code",[t._v("undefined")]),t._v(")")]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{Amount}")])])]),t._v(" "),n("p",[t._v("Returns a new "),n("code",[t._v("amount")]),t._v(" that is the "),n("code",[t._v("leftAmount")]),t._v(" minus the "),n("code",[t._v("rightAmount")]),t._v(" (i.e.\neverything in the "),n("code",[t._v("leftAmount")]),t._v(" that is not in the "),n("code",[t._v("rightAmount")]),t._v("). If "),n("code",[t._v("leftAmount")]),t._v("\ndoesn't include "),n("code",[t._v("rightAmount")]),t._v(" (subtraction results in a negative), it throws an\nerror. Because "),n("code",[t._v("leftAmount")]),t._v(" must include "),n("code",[t._v("rightAmount")]),t._v(", this is "),n("strong",[t._v("not")]),t._v("\nequivalent to set subtraction.")]),t._v(" "),n("p",[n("code",[t._v("leftAmount")]),t._v(" and "),n("code",[t._v("rightAmount")]),t._v(" must be of the same "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("brand")]),t._v(" argument is optional, defaulting to "),n("code",[t._v("undefined")]),t._v(".\nIf it does not match the "),n("code",[t._v("amounts")]),t._v(" "),n("code",[t._v("brand")]),t._v(", an error is thrown.")]),t._v(" "),n("p",[t._v("If the "),n("code",[t._v("rightAmount")]),t._v(" is empty, it returns the "),n("code",[t._v("leftAmount")]),t._v(". If both arguments are\nempty, it returns an empty "),n("code",[t._v("amount")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountMath "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myItemsBrand "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myItems'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),t._v("'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listAmountC "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myItemsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns ['1', '4']")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subtractedList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Throws error")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listAmountA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listAmountB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"related-methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#related-methods"}},[t._v("#")]),t._v(" Related Methods")]),t._v(" "),n("p",[t._v("The following methods on other ERTP components and objects also either operate\non or return an "),n("code",[t._v("amount")]),t._v(" or "),n("code",[t._v("MathKind")]),t._v(". While a brief description is given for each, you should\nclick through to a method's main documentation entry for full details on\nwhat it does and how to use it.")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountof-payment"}},[n("code",[t._v("issuer.getAmountOf(payment)")])]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("amount")]),t._v(" description of the "),n("code",[t._v("payment")])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountmathkind"}},[n("code",[t._v("issuer.getAmountMathKind()")])]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("MathKind")]),t._v(" of the "),n("code",[t._v("issuer")]),t._v("'s associated math helpers.")])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/zoe/api/zoe-contract-facet.html#zcf-getmathkind-brand"}},[n("code",[t._v("zcf.getMathKind(brand)")])]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("MathKind")]),t._v(" associated with the "),n("code",[t._v("brand")]),t._v(".")])])],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);