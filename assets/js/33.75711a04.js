(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{402:function(t,e,a){"use strict";a.r(e);var n=a(42),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction-to-zoe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-zoe"}},[t._v("#")]),t._v(" Introduction to Zoe")]),t._v(" "),a("p",[a("strong",[t._v("Note:")]),t._v(" Before reading this, you should be familiar with "),a("RouterLink",{attrs:{to:"/getting-started/ertp-introduction/"}},[t._v("ERTP basics")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Alpha status")]),t._v(" "),a("p",[t._v("Zoe is currently at Alpha status. It has not yet been\nformally tested or hardened. It is not yet of production quality.")])]),t._v(" "),a("p",[t._v("This is an introduction to Zoe, Agoric's smart contract framework.\nThe "),a("RouterLink",{attrs:{to:"/zoe/guide/"}},[t._v("Zoe Guide")]),t._v(" has additional information,\nincluding concepts not covered here.")],1),t._v(" "),a("p",[t._v("You can run different types of smart contracts on Zoe. In this document,\nfor the most part we focus on Agoric’s Atomic Swap demo contract, but\nsometimes refer to how Zoe works with other contract types.")]),t._v(" "),a("h2",{attrs:{id:"what-is-zoe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-zoe"}},[t._v("#")]),t._v(" What is Zoe?")]),t._v(" "),a("p",[a("strong",[t._v("For users")]),t._v(": Zoe guarantees smart contract users either get what\nthey wanted or get a full refund. Even if the smart contract is buggy or malicious.")]),t._v(" "),a("p",[a("strong",[t._v("For developers")]),t._v(": Zoe is a framework for writing and running smart contracts.\nIt provides a safety net so you can focus on what your smart contract does best,\nwithout worrying about users losing their assets due to a bug in your code.")]),t._v(" "),a("p",[t._v("Many contracts are installed on Zoe, including "),a("a",{attrs:{href:"https://agoric.com/documentation/zoe/guide/contracts/",target:"_blank",rel:"noopener noreferrer"}},[t._v("several Agoric-written ones"),a("OutboundLink")],1),t._v("\nto help get you started.")]),t._v(" "),a("h2",{attrs:{id:"the-simple-atomic-swap-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-simple-atomic-swap-contract"}},[t._v("#")]),t._v(" The simple Atomic Swap contract")]),t._v(" "),a("p",[t._v("In this document, we’ll mostly be looking at Agoric’s "),a("a",{attrs:{href:"https://agoric.com/documentation/zoe/guide/contracts/atomic-swap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Atomic Swap contract"),a("OutboundLink")],1),t._v(" to illustrate how contracts use Zoe.")]),t._v(" "),a("p",[t._v("Atomic Swap has two users swapping for each other’s assets. We’ll\ntry to let you know when aspects of the contract are specific to\na basic swap operation. Other types of contracts, such as auctions, may do\nthings differently.")]),t._v(" "),a("p",[t._v("The annotated code for our example is "),a("a",{attrs:{href:"https://agoric.com/documentation/zoe/guide/contracts/atomic-swap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".\nThe source code is "),a("a",{attrs:{href:"https://github.com/Agoric/agoric-sdk/blob/master/packages/zoe/src/contracts/atomicSwap.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(",\nTests are "),a("a",{attrs:{href:"https://github.com/Agoric/agoric-sdk/blob/master/packages/zoe/test/unitTests/contracts/test-atomicSwap.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(". The tests have two “characters”, Alice, who makes the initial offer, and Bob, who responds to that offer.")]),t._v(" "),a("h2",{attrs:{id:"installing-and-instantiating-contracts-on-zoe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-and-instantiating-contracts-on-zoe"}},[t._v("#")]),t._v(" Installing and instantiating contracts on Zoe")]),t._v(" "),a("p",[t._v("To use a contract, it needs to be "),a("em",[t._v("installed")]),t._v(" on Zoe. This is putting\nthe contract’s source code, consisting of JavaScript plus ERTP and Zoe API\nmethods, on Zoe.")]),t._v(" "),a("p",[t._v("When you install a contract on Zoe, you receive an "),a("code",[t._v("installation")]),t._v(", which\nis an "),a("em",[t._v("opaque JavaScript object")]),t._v("  used to refer to the installed contract\nsource code. Agoric uses such objects as references since they cannot be\nforged. For example")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bundleSource takes source code files and ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bundles them together in the format install expects.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bundleSource "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/bundle-source'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bundle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bundleSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pathResolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("./src/contract.js")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" installationP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bundle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("To actually use a contract, you have to "),a("em",[t._v("instantiate")]),t._v(" it by\ncalling "),a("code",[t._v("E(zoe).startInstance(installation, issuerKeywordRecord, terms)")]),t._v(".\nMultiple "),a("em",[t._v("instances")]),t._v(" of any Zoe-installed contract can execute simultaneously.\nFor clarity, in our documentation a "),a("em",[t._v("contract")]),t._v(" is the installed code that\ndefines how the contract works. A "),a("em",[t._v("contract instance")]),t._v(" or "),a("em",[t._v("instance")]),t._v(" is an active\nexecution of the contract code.")]),t._v(" "),a("p",[t._v("For example, let’s say a realtor has a standard agreement they use when selling\na client’s house. The contract would be the code that defines how that standard\nagreement works. Every time the realtor has a new house to sell, they instantiate\na new instance of their standard contract to use for that specific property. If\nthey have ten houses up for sale, they have ten different contract instances.")]),t._v(" "),a("p",[t._v("In addition to an "),a("code",[t._v("installation")]),t._v(", when a contract is instantiated, Zoe needs to\nknow what kind of ERTP assets the contract will work with. In Atomic Swap’s test\ncode, the full instantiation call is something like:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" issuerKeywordRecord "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Asset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosKit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Price"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" moolaKit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" atomicSwapInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zoe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuerKeywordRecord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Let’s work backwards from "),a("code",[t._v("startInstance()")]),t._v("’s arguments. As you’ll recall\nfrom the "),a("a",{attrs:{href:"https://agoric.com/documentation/getting-started/ertp-introduction.html#issuers-and-mints",target:"_blank",rel:"noopener noreferrer"}},[t._v("Introduction to ERTP"),a("OutboundLink")],1),t._v(",\n"),a("code",[t._v("issuers")]),t._v(" map minted assets to "),a("code",[t._v("purses")]),t._v(" and "),a("code",[t._v("payments")]),t._v(". The "),a("em",[t._v("keyword record")]),t._v(" is\nmade up of two key:value pairs. The key names must be ASCII and capitalized;\nthey are the same names as are used in the contract code.")]),t._v(" "),a("p",[t._v("In this case the key name "),a("code",[t._v("Price")]),t._v(" is for what the seller wants, and key name "),a("code",[t._v("Asset")]),t._v(" is for\nwhat is being sold. "),a("code",[t._v("Price")]),t._v(" is for what will be swapped for it (from the perspective\nof the user making the instance; it’d be the opposite for someone who wanted what Alice is offering).\nThe price is denominated in the imaginary currency Moola, so that keyword needs the\nMoola "),a("code",[t._v("Issuer")]),t._v(" associated with it. The asset is denominated in the imaginary currency\nQuatloos, so that keyword needs the Quatloo "),a("code",[t._v("Issuer")]),t._v(" as its value.")]),t._v(" "),a("p",[t._v("Finally, "),a("code",[t._v("E(zoe).startInstance()")]),t._v(" can take an optional "),a("code",[t._v("terms")]),t._v(" argument, another\nset of key:value pairs. Terms let an "),a("code",[t._v("instance")]),t._v(" creator further\ncustomize the contract operations, as enabled by the contract code.\nContract terms can be expressed without specific values. For example,\nan auction contract may define minimum bid and minimum raise variables\nand use them in its code, but the variables are not given values in the\ncode. Instead, the "),a("code",[t._v("terms")]),t._v(" argument provides the variables’ values.")]),t._v(" "),a("p",[t._v("Why parameterize a contract with terms? Well, the minimum raise should be\nquite different if an auction is for a used Harry Potter paperback vs. a\nsigned first British hardback edition of "),a("em",[t._v("Harry Potter and the Philosopher’s\nStone")]),t._v(". The "),a("code",[t._v("terms")]),t._v(" value for the used paperback auction might\nbe "),a("code",[t._v("{ Currency: 'USDollar', MinRaise: 1 }")]),t._v(". For the first edition\nauction, "),a("code",[t._v("terms")]),t._v("’ value might be  "),a("code",[t._v("{ Currency: 'USDollar', MinRaise: 500 }")]),t._v(".\nWith the different "),a("code",[t._v("terms")]),t._v(" values, there are now contract instances\ncustomized for the items being sold in each one.")]),t._v(" "),a("h2",{attrs:{id:"invitations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invitations"}},[t._v("#")]),t._v(" Invitations")]),t._v(" "),a("p",[a("code",[t._v("E(zoe).startInstance()")]),t._v(" returns an "),a("em",[t._v("invitation")]),t._v(" to that new "),a("code",[t._v("instance")]),t._v(".\nAn "),a("code",[t._v("invitation")]),t._v(" is an "),a("a",{attrs:{href:"https://agoric.com/documentation/getting-started/ertp-introduction.html#creating-assets-with-ertp",target:"_blank",rel:"noopener noreferrer"}},[t._v("ERTP "),a("code",[t._v("payment")]),a("OutboundLink")],1),t._v("\nthat lets its holder interact with that specific contract instance. If there\nare ten instances of a contract running and you hold an "),a("code",[t._v("invitation")]),t._v(" to, say,\nthe earliest created one, that’s the only one the "),a("code",[t._v("invitation")]),t._v(" works with.\nIt doesn’t work with any of the nine later created "),a("code",[t._v("instances")]),t._v(".")]),t._v(" "),a("p",[t._v("And while whoever instantiated the contract gets the initial "),a("code",[t._v("invitation")]),t._v("\nto that "),a("code",[t._v("instance")]),t._v(", as with all "),a("code",[t._v("invitations")]),t._v(", they can transfer it to\nanother party before it’s used. Who created or first held an "),a("code",[t._v("invitation")]),t._v("\ndoesn’t matter. Whoever possesses an "),a("code",[t._v("invitation")]),t._v(" has control and use of it.")]),t._v(" "),a("p",[t._v("Users obtain an "),a("code",[t._v("invitation")]),t._v(" to an "),a("code",[t._v("instance")]),t._v(" in one (or more) of three ways:")]),t._v(" "),a("ul",[a("li",[t._v("Instantiate a contract, which returns an "),a("code",[t._v("invitation")]),t._v(" object for that "),a("code",[t._v("instance")]),t._v(".")]),t._v(" "),a("li",[t._v("Receive an "),a("code",[t._v("invitation")]),t._v(" from someone who already had it.\n"),a("ul",[a("li",[t._v("Note: Finding other parties to invite is out of Zoe or the contract’s scope\nin most cases. You have to either already know of potential other parties,\nfor example, from past experience trading with them, or communicate\nsomewhere outside the contract to find them.")])])]),t._v(" "),a("li",[t._v("By the "),a("code",[t._v("instance")]),t._v(", or someone with the authority to issue "),a("code",[t._v("invitations")]),t._v(" for\nit, making open knowledge what’s needed to get a valid "),a("code",[t._v("invitation")]),t._v(". For example,\nan open exchange contract with an order book might welcome everyone who wants\nto participate, and so would make public how to get an "),a("code",[t._v("invitation")]),t._v(" to it.")])]),t._v(" "),a("p",[a("code",[t._v("Invitations")]),t._v(" are ERTP "),a("code",[t._v("payments")]),t._v(", so the same principles apply to them as\napply to other ERTP "),a("code",[t._v("payments")]),t._v(". You can send the same "),a("code",[t._v("payment")]),t._v(" or "),a("code",[t._v("invitation")]),t._v("\nto multiple parties...but when a party "),a("em",[t._v("claims")]),t._v(" the "),a("code",[t._v("payment")]),t._v("/"),a("code",[t._v("invitation")]),t._v(",\nthe other copies of the "),a("code",[t._v("payment/invitation")]),t._v(" are dead. The claimant gets\na new "),a("code",[t._v("payment/invitation")]),t._v(" they can be sure was issued by the desired "),a("code",[t._v("issuer")]),t._v(",")]),t._v(" "),a("p",[a("code",[t._v("Invitations")]),t._v(" are single use objects. Once used, an "),a("code",[t._v("invitation")]),t._v(" is destroyed or "),a("em",[t._v("burned")]),t._v(".\nIf someone shared a valid "),a("code",[t._v("invitation")]),t._v(" with many parties, only the first one to be used\nwould work; any attempts to use that "),a("code",[t._v("invitation")]),t._v(" after it’s been used fail. Note that this\nis different from making multiple distinct "),a("code",[t._v("invitations")]),t._v(" for an "),a("code",[t._v("instance")]),t._v("; that’s expected.")]),t._v(" "),a("h2",{attrs:{id:"offers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offers"}},[t._v("#")]),t._v(" Offers")]),t._v(" "),a("p",[t._v("Alice decides she wants to use her invite and make an "),a("em",[t._v("offer")]),t._v(". Before making an offer, an invite is all about "),a("em",[t._v("potentially")]),t._v(" working with its associated contract instance. But the invite might never be used, and if so, it never actually interacts with the contract instance.")]),t._v(" "),a("p",[t._v("Before making her offer, Alice has to do some prep work. Her offer will be "),a("em",[t._v("escrowed")]),t._v(" with Zoe, so it needs to include the actual ERTP payments for the offer, and a "),a("em",[t._v("proposal")]),t._v(" that defines the offer and is used to enforce both "),a("em",[t._v("offer safety")]),t._v(" and "),a("em",[t._v("payout liveness")]),t._v(".  In code, it looks like:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos100 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" moola25 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" moolaAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" aliceProposal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  give"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Asset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloos100 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  want"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Price"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" moola25 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  exit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" onDemand"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nConst alicePayments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Asset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" aliceQuatloosPayment "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("AmountMath")]),t._v(" is an "),a("a",{attrs:{href:"https://agoric.com/documentation/ertp/guide/amount-math.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ERTP API object "),a("OutboundLink")],1),t._v(" whose methods manipulate asset\nand payment "),a("code",[t._v("amounts")]),t._v(". Here, Alice is setting up the ability to use the Quatloos and Moola currencies. Note the the "),a("code",[t._v("amounts")]),t._v(" are\njust descriptions of assets, and not the actual assets. The actual assets are contained in ERTP "),a("code",[t._v("purses")]),t._v(" and "),a("code",[t._v("payments")]),t._v(", not "),a("code",[t._v("amounts")]),t._v(".")]),t._v(" "),a("p",[t._v("She then creates her proposal, using a record with "),a("code",[t._v("give")]),t._v(", "),a("code",[t._v("want")]),t._v(", and "),a("code",[t._v("exit")]),t._v(" (optional) properties. "),a("code",[t._v("give")]),t._v(" and "),a("code",[t._v("want")]),t._v(" are "),a("code",[t._v("KeywordAmount")]),t._v(" records with\nkeywords as keys and "),a("code",[t._v("amounts")]),t._v(" as values. "),a("code",[t._v("exit")]),t._v(" is an "),a("code",[t._v("ExitRule")]),t._v(" record specifying how/when a user can exit the contract. In the above,\nAlice wants at least 25 Moola, in exchange for giving at most 100 Quatloos, where she can exit the offer at any time just by\nasking, and get her assets back (or get her "),a("code",[t._v("want")]),t._v(" value if the offer happened to be satisfied before then).")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("harden()")]),t._v(" command is how we build a defensible API surface around an object by freezing all reachable properties. It’s similar,\nbut not identical, to JavaScript’s "),a("code",[t._v("Object.freeze")]),t._v(". For more information on "),a("code",[t._v("harden")]),t._v(", see "),a("a",{attrs:{href:"https://www.npmjs.com/package/@agoric/harden#background-why-do-we-need-to-harden-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Now, Alice is ready to use her "),a("code",[t._v("invitation")]),t._v(", "),a("code",[t._v("proposal")]),t._v(", and "),a("code",[t._v("payment")]),t._v(" to make an offer and participate in the Atomic Swap\ncontract "),a("code",[t._v("instance")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userSeat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  aliceInvite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  aliceProposal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  alicePayments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" outcome "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userSeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOfferResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payouts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userSeat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPayouts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Zoe checks the invitation for its validity for that contract instance. When\nshe makes her offer, Alice receives a (promise for) a "),a("code",[t._v("UserSeat")]),t._v(" that lets\nher monitor or control her offer. This includes getting payouts or offer results,\nor exiting the offer altogether. If her offer was invalid, the\noffer attempt fails, and Alice gets her refund in the "),a("em",[t._v("payout")]),t._v(". If the\noffer is valid, it's now an "),a("em",[t._v("active offer")]),t._v(".")]),t._v(" "),a("p",[t._v("Now, Alice needs to get someone else involved who potentially will also\nmake an offer, hopefully one that offers what she wants for\nthe price she’s willing to pay for it. The "),a("em",[t._v("offer result")]),t._v(" is the object\nreturned by the contract when it processes an offer. In the case of\natomicSwap, it used "),a("em",[t._v("zcf.makeInvitation()")]),t._v(" to make and return an invitation Alice can\nsend to others, in this case Bob.")]),t._v(" "),a("p",[a("code",[t._v("zcf.makeInvitation()")]),t._v(" takes two required arguments and one optional:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("offerHandler")]),t._v(": A function defined in the contract code that processes offers as the contract developer sees fit.")]),t._v(" "),a("li",[a("code",[t._v("description")]),t._v(": A "),a("code",[t._v("String")]),t._v(" that should include whatever information is needed for a recipient to know what\nthey are getting in the optional "),a("code",[t._v("customProperties")]),t._v(" argument.")]),t._v(" "),a("li",[a("code",[t._v("customProperties")]),t._v(": Optional, any special properties to be included in this "),a("code",[t._v("invitation")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bobInvitation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zcf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeInvitation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("swapOfferHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" atomicSwapDescription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bob claims the invitation via the permanent Zoe inviteIssuer. The claim operation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// also validates the invitation for this contract instance.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inviteIssuer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInviteIssuer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bobExclusiveInvitation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inviteIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("claim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bobInvitation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Bob decides to make his own offer, which happens to match up with Alice’s offer (assume his payments were constructed similar to Alice’s);")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bobProposal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("harden")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  want"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Asset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloos100 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  give"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Price"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" moola25 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  exit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" onDemand"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bob escrows with zoe and makes an offer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" outcome"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bobOfferResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bobPayoutP "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zoe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  bobExclusiveInvitation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bobProposal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bobPayments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Bob has gotten back a "),a("em",[t._v("promise")]),t._v(" for a "),a("em",[t._v("payout")]),t._v(". His offer is also now an "),a("em",[t._v("active offer")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"satisfying-and-completing-offers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#satisfying-and-completing-offers"}},[t._v("#")]),t._v(" Satisfying and completing offers")]),t._v(" "),a("p",[t._v("At this point, both the offers that Alice and Bob made are active and known to the contract instance. The Atomic Swap contract\ncode determines that they are matching offers.  The contract instance calls "),a("code",[t._v("reallocate()")]),t._v(", which "),a("em",[t._v("reallocates")]),t._v(" the amounts which\nare the accounting records within Zoe. Payouts are not created yet.")]),t._v(" "),a("p",[t._v("The contract instance then "),a("em",[t._v("exits")]),t._v(" the offers and makes the payouts to\nthe offer holders.  This takes the amounts from the account records, and withdraws the offer-specified amounts from the\ndigital assets escrowed within Zoe. This is when\nthe payout "),a("em",[t._v("promise")]),t._v(" resolves into payments.")]),t._v(" "),a("p",[t._v("The offers are now exited and no longer active. There is nothing more that can be done with them, so Zoe deletes these\noffers from the contract instance.")]),t._v(" "),a("h2",{attrs:{id:"auction-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auction-example"}},[t._v("#")]),t._v(" Auction example")]),t._v(" "),a("p",[t._v("Let’s look at a more complicated example: an auction, where many users\nmight make a bid for something, but only one bid will win the\nauction. Assuming everything validated, Zoe would give the holder of\nthe auctioned item the escrowed assets from the winning bid, and give\nthe holder of the winning bid what they wanted, the asset up for bid.")]),t._v(" "),a("p",[t._v("But what about all those other bidders who escrowed their bids with Zoe\nand didn’t win? Zoe guarantees they all get a "),a("em",[t._v("refund")]),t._v(" of their escrowed assets.\nZoe’s "),a("em",[t._v("offer safety")]),t._v(" guarantees offer makers either get what they wanted or\nget refunded whatever they put in Zoe’s escrow with their offer.")]),t._v(" "),a("p",[t._v("It’s even possible to get both what you wanted, and at least a partial refund.\nConsider an auction where you make a bid where you’re willing to pay up to 10\nQuatloos (an imaginary currency), but if you can win for less, that’s your bid.\nYou win the auction, but your winning bid is only 8 Quatloos. The payout would\nresolve to both the item up for auction you get as the winning bidder and the\nrefund of the 2 extra Quatloos you escrowed in your bid.")]),t._v(" "),a("h2",{attrs:{id:"other-things-to-know-about-zoe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other-things-to-know-about-zoe"}},[t._v("#")]),t._v(" Other things to know about Zoe")]),t._v(" "),a("p",[t._v("A "),a("em",[t._v("Dapp (decentralized application)")]),t._v(" is a combination of a Zoe contract and\na server that’s running the back and front ends, and a front end that may be\nconnected to the user’s wallet.")]),t._v(" "),a("p",[t._v("Zoe has two distinct APIs. One is the widely accessible, singular Zoe service object\nthat smart contract clients use to provide offers and otherwise interface with contracts.\nThe Zoe service object is a remote object, and so should be accessed with "),a("code",[t._v("E(zoe).<api_method>")]),t._v(",\nwhich returns a "),a("code",[t._v("promise")]),t._v(". For more on E()\nsee "),a("a",{attrs:{href:"https://agoric.com/documentation/distributed-programming.html#communicating-with-remote-objects-via-e",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The other is the internal API object, referred to as "),a("code",[t._v("zcf")]),t._v(" that each "),a("code",[t._v("instance")]),t._v(" uses to\ninteract with Zoe about that contract’s own offers and state (e.g., to\ndo "),a("code",[t._v("reallocate")]),t._v(").")]),t._v(" "),a("p",[t._v("Finally, there are also Zoe Helpers, functions that extract common contract code and patterns into reusable helpers.")]),t._v(" "),a("p",[t._v("For details about all three APIs and their methods, see the "),a("a",{attrs:{href:"https://agoric.com/documentation/zoe/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Zoe API"),a("OutboundLink")],1),t._v(" documentation.")]),t._v(" "),a("h2",{attrs:{id:"workflow-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workflow-summary"}},[t._v("#")]),t._v(" Workflow summary")]),t._v(" "),a("p",[t._v("The following table summarizes an Atomic Swap workflow:")]),t._v(" "),a("table",[a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("Write your contract\n")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("Install your contract’s source code on Zoe. \n")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("Start a contract instance based on an installed contract. \n")])]),t._v(" "),a("tr",[a("td",{attrs:{colspan:"2"}},[t._v("At this point, everything is installed and set up and you’ve got a contract instance. The following rows cover what happens while\nthe Atomic Swap contract instance is active.\n")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("A holder of an invitation to this contract instance uses it to get a seat. The assets used in the offer are escrowed with Zoe.\n")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("Likely via means outside of the contract, invitations are distributed to potential users of this contract instance).")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("Recipients use the InviteIssuer to claim and validate their invitation.\n")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("Invitation holders make their offers.\n")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",[t._v("The contract code processes the offers, which may request some reallocations as a result.")])]),t._v(" "),a("tr",[a("td",[t._v("6")]),t._v(" "),a("td",[t._v("Zoe reallocates the assets among the offers, preserving offer safety.\n")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",[t._v("The contract requests Zoe process the satisfied offers, resolving their associated payout promises. Offer holders either get what they paid for, get their escrowed offer amount refunded, or in some cases, get both what they paid for and a refund of any overpayment.\n")])])])]),t._v(" "),a("h2",{attrs:{id:"next-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[t._v("#")]),t._v(" Next steps")]),t._v(" "),a("p",[t._v("If you want to dive deeper into how Zoe works and what you can do, go to the "),a("a",{attrs:{href:"https://agoric.com/documentation/zoe/guide/#what-is-zoe",target:"_blank",rel:"noopener noreferrer"}},[t._v("Zoe Guide"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=s.exports}}]);