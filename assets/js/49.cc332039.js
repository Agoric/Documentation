(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{440:function(e,t,r){"use strict";r.r(t);var a=r(44),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"javascript-framework-for-secure-distributed-computing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-framework-for-secure-distributed-computing"}},[e._v("#")]),e._v(" JavaScript Framework for Secure Distributed Computing")]),e._v(" "),r("p",[e._v("The Agoric smart contract platform starts with a JavaScript framework\nfor secure distributed computing.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("Watch: Distributed Programming for a Decentralized World (Aug 2019)")]),e._v(" "),r("p",[e._v("This 15 minute overview is the first in a\n"),r("a",{attrs:{href:"https://www.youtube.com/playlist?list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG",target:"_blank",rel:"noopener noreferrer"}},[e._v("4-parts series"),r("OutboundLink")],1),e._v("\nof short talks on the Agoric Architecture that overlap substantially with the material in\nthe sections below.\n"),r("br"),e._v(" "),r("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/52SgGFpWjsY?list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})])]),e._v(" "),r("h2",{attrs:{id:"vats-the-unit-of-synchrony"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vats-the-unit-of-synchrony"}},[e._v("#")]),e._v(" Vats: the unit of synchrony")]),e._v(" "),r("p",[e._v("The Agoric framework uses the same "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop",target:"_blank",rel:"noopener noreferrer"}},[e._v("event loop concurrency model"),r("OutboundLink")],1),e._v(" as web browsers and Node.js.\nEach event loop has a message queue, a call stack of frames, and a heap of objects:")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop/the_javascript_runtime_environment_example.svg",alt:"heap, stack, and queue"}})]),e._v(" "),r("p",[e._v("We refer to this combination of an event loop with a message queue, a stack, and a heap as a "),r("em",[e._v("vat")]),e._v(".")]),e._v(" "),r("p",[e._v("Vats are the unit of synchrony. We can only use ordinary synchronous\nfunction calls within the same vat. But we can use asynchronous function calls\n(with "),r("RouterLink",{attrs:{to:"/guides/js-programming/eventual-send.html"}},[e._v("eventual send")]),e._v(") either within the same vat or between vats.\nVats may be on remote machines, including massively replicated machines such as blockchains.")],1),e._v(" "),r("h2",{attrs:{id:"parts-of-the-framework"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#parts-of-the-framework"}},[e._v("#")]),e._v(" Parts of the Framework")]),e._v(" "),r("p",[e._v("The framework includes:")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[r("RouterLink",{attrs:{to:"/guides/js-programming/hardened-js.html"}},[e._v("Hardened JavaScript")])],1)]),e._v(" "),r("ul",[r("li",[e._v("Hardened JavaScript provides a platform for\nmaking objects that can interact with code you don't completely trust,\nwithout being vulnerable to bugs or bad intentions.\nWe introduce "),r("RouterLink",{attrs:{to:"/guides/js-programming/hardened-js.html#object-capabilities-ocaps"}},[e._v("object capabilities")]),e._v(" and how to use them\nto apply the "),r("RouterLink",{attrs:{to:"/guides/js-programming/hardened-js.html#the-principle-of-least-authority-pola"}},[e._v("principle of least authority")]),e._v(".")],1)])]),e._v(" "),r("li",[r("p",[r("strong",[r("RouterLink",{attrs:{to:"/guides/js-programming/eventual-send.html"}},[r("code",[e._v("E()")]),e._v(" for Eventual Send to Remote Presences")])],1)]),e._v(" "),r("ul",[r("li",[e._v("The "),r("code",[e._v("E()")]),e._v(" wrapper function lets\nyou invoke methods within or between vats.\nGiven a local representative (a "),r("em",[e._v("presence")]),e._v(") for a remote object,\nit sends messages to the origin of the presence.\n"),r("code",[e._v("E(obj).myMethod(...args)")]),e._v(" is an asynchronous form of "),r("code",[e._v("obj.myMethod(...args)")]),e._v(".")])])]),e._v(" "),r("li",[r("p",[r("strong",[r("RouterLink",{attrs:{to:"/guides/js-programming/far.html"}},[r("code",[e._v("Far()")]),e._v(", Remoteable Objects, and Marshaling")])],1)]),e._v(" "),r("ul",[r("li",[e._v("Objects used across vats are called "),r("em",[e._v("remotables")]),e._v(".\nTo mark an object for exporting from a vat, use the "),r("code",[e._v("Far()")]),e._v(" function.")])])]),e._v(" "),r("li",[r("p",[r("strong",[r("RouterLink",{attrs:{to:"/guides/js-programming/notifiers.html"}},[e._v("Notifiers and Subscriptions")])],1)]),e._v(" "),r("ul",[r("li",[e._v("Notifiers and Subscriptions distribute state change\nupdates. Both deliver an asynchronous stream of messages as a publish-subscribe system\nmight, without requiring explicit management of lists of subscribers. Notifiers are\nlossy conveyors of non-final values while subscriptions are lossless value conveyors.")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);