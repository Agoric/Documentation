(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{362:function(t,s,a){t.exports=a.p+"assets/img/issuers-and-assets.7b3059c8.svg"},363:function(t,s,a){t.exports=a.p+"assets/img/issuer1.c4056d5d.svg"},364:function(t,s,a){t.exports=a.p+"assets/img/mint.cdd77c78.svg"},429:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"issuers-and-mints"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#issuers-and-mints"}},[t._v("#")]),t._v(" Issuers and  Mints")]),t._v(" "),n("h2",{attrs:{id:"issuers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#issuers"}},[t._v("#")]),t._v(" Issuers")]),t._v(" "),n("p",[n("img",{attrs:{src:a(362),alt:"Issuer structure"}})]),t._v(" "),n("p",[t._v("Behind the scenes, an "),n("code",[t._v("issuer")]),t._v(" maps minted digital assets to their location in a "),n("code",[t._v("purse")]),t._v("\nor "),n("code",[t._v("payment")]),t._v(". An "),n("code",[t._v("issuer")]),t._v(" verifies, moves, and manipulates digital assets.\nIts special admin facet is a "),n("code",[t._v("mint")]),t._v(" which it has a one-to-one\nrelationship with. Only a "),n("code",[t._v("mint")]),t._v(" can issue new digital assets; an "),n("code",[t._v("issuer")]),t._v(" cannot.")]),t._v(" "),n("p",[t._v("An "),n("code",[t._v("issuer")]),t._v(" also has a one-to-one relationship with a "),n("code",[t._v("brand")]),t._v(". So, if\nour "),n("code",[t._v("brand")]),t._v(" is the imaginary currency Quatloos, only\nthe "),n("code",[t._v("issuer")]),t._v(" in the one-to-one relationship with the Quatloos "),n("code",[t._v("brand")]),t._v("\ncan:")]),t._v(" "),n("ul",[n("li",[t._v("Create a new empty "),n("code",[t._v("purse")]),t._v(" that can store Quatloos.")]),t._v(" "),n("li",[t._v("Manipulate a "),n("code",[t._v("payment")]),t._v(" in Quatloos to be claimed, split, combined,\nburned, or have its amount gotten.")])]),t._v(" "),n("p",[t._v("An "),n("code",[t._v("issuer")]),t._v(" should be obtained from a trusted source and\nthen relied upon as the authority as to whether an untrusted "),n("code",[t._v("payment")]),t._v("\nof the same "),n("code",[t._v("brand")]),t._v(" is valid.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(363),alt:"Issuer methods"}})]),t._v(" "),n("p",[n("code",[t._v("Issuer")]),t._v(" methods:")]),t._v(" "),n("ul",[n("li",[t._v("Return information about an "),n("code",[t._v("issuer")]),t._v(".")]),t._v(" "),n("li",[t._v("Create a new "),n("code",[t._v("issuer")]),t._v(".")]),t._v(" "),n("li",[t._v("Create a new "),n("code",[t._v("purse")]),t._v(".")]),t._v(" "),n("li",[t._v("Operate on "),n("code",[t._v("payment")]),t._v(" arguments.")])]),t._v(" "),n("p",[t._v("The following is\na brief description and example of each "),n("code",[t._v("Issuer")]),t._v(" method. For\nmore detail, click the method's name to go to its entry in the "),n("RouterLink",{attrs:{to:"/ertp/api/#ertp-api"}},[t._v("ERTP\nAPI Reference")]),t._v(".")],1),t._v(" "),n("ul",[n("li",[n("strong",[t._v("Create issuer operation")]),t._v(" "),n("ul",[n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#makeissuerkit-allegedname-amountmathkind"}},[n("code",[t._v("makeIssuerKit(allegedName, amountMathKind)")])])],1)]),t._v(" "),n("li",[n("p",[t._v("Makes an "),n("code",[t._v("issuer")]),t._v(" and its related "),n("code",[t._v("mint")]),t._v(", "),n("code",[t._v("amountMath")]),t._v(" and "),n("code",[t._v("brand")]),t._v(".\nReturns "),n("code",[t._v("{ mint, issuer, amountMath, brand }")]),t._v(" The "),n("code",[t._v("mint")]),t._v(" and\n"),n("code",[t._v("brand")]),t._v(" are in unchangeable one-to-one relationships with the "),n("code",[t._v("issuer")]),t._v("\nand each other. The "),n("code",[t._v("amountMath")]),t._v(" is in a many-to-one relationship\nwith the "),n("code",[t._v("issuer")]),t._v(", "),n("code",[t._v("brand")]),t._v(", and "),n("code",[t._v("mint")]),t._v(".")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("allegedName")]),t._v(" is available from the "),n("code",[t._v("brand")]),t._v(" to describe assets, but should not\nbe trusted.")]),t._v(" "),n("p",[n("code",[t._v("amountMathKind")]),t._v(" specifies if the associated "),n("code",[t._v("amountMath")]),t._v(" is of kind "),n("code",[t._v("MathKind.NAT")]),t._v(" ("),n("code",[t._v("nat")]),t._v(")\n(the default value), "),n("code",[t._v("MathKind.STR")]),t._v(" ("),n("code",[t._v("str")]),t._v("), or "),n("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),n("code",[t._v("strSet")]),t._v(");\nsee the "),n("RouterLink",{attrs:{to:"/ertp/guide/amount-math.html"}},[n("code",[t._v("amountMath")]),t._v(" page")]),t._v(" for details.")],1),t._v(" "),n("ul",[n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" makeIssuerKit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mint"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is merely an amount, describing assets.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It does not create new assets.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Non-fungible asset, which needs an amountMath")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// of kind 'MathKind.STRING_SET'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  mint"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" titleMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" titleIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" titleAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alamedaCountyPropertyTitle'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])])])]),t._v(" "),n("li",[n("strong",[t._v("Get information about the issuer operations")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getbrand"}},[n("code",[t._v("issuer.getBrand()")])]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("brand")]),t._v(" the "),n("code",[t._v("issuer")]),t._v(" is in a one-to-one relationship with. The "),n("code",[t._v("brand")]),t._v(" is not closely\nheld, so it can be used by fake digital assets and "),n("code",[t._v("amounts")]),t._v(". Do\nnot trust this method alone to ensure the "),n("code",[t._v("issuer")]),t._v(" has the right "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" brand"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosBrand "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myQuatloosBrand === quatloosBrand")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myQuatloosBrand "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBrand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getallegedname"}},[n("code",[t._v("issuer.getAllegedName()")])]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("issuer")]),t._v("/"),n("code",[t._v("mint")]),t._v("'s\n"),n("RouterLink",{attrs:{to:"/glossary/#allegedname"}},[n("code",[t._v("allegedName")])]),t._v(",\nthe non-trusted human-readable name of the "),n("code",[t._v("issuer")]),t._v("'s associated "),n("code",[t._v("brand")]),t._v(".")],1),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosIssuerAllegedName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAllegedName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// quatloosIssuerAllegedName === 'quatloos'")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountmathkind"}},[n("code",[t._v("issuer.getAmountMathKind()")])]),t._v(" "),n("ul",[n("li",[t._v("Get the kind of "),n("code",[t._v("amountMath")]),t._v(" for this "),n("code",[t._v("issuer")]),t._v(", either "),n("code",[t._v("MathKind.NAT")]),t._v(" ("),n("code",[t._v("nat")]),t._v("),\n"),n("code",[t._v("MathKind.STR")]),t._v(" ("),n("code",[t._v("str")]),t._v("), or "),n("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),n("code",[t._v("strSet")]),t._v(").")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" kind "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMathKind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'nat', the default value for makeIssuerKit()")])])])])])])],1)])]),t._v(" "),n("li",[n("strong",[t._v("Purse operation")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-makeemptypurse"}},[n("code",[t._v("issuer.makeEmptyPurse()")])]),t._v(" "),n("ul",[n("li",[t._v("Returns a new empty "),n("code",[t._v("purse")]),t._v(" for the "),n("code",[t._v("brand")]),t._v(" associated with the "),n("code",[t._v("issuer")]),t._v(". The "),n("code",[t._v("purse")]),t._v(" only accepts valid\ndeposits of its associated "),n("code",[t._v("brand")]),t._v(", so you can retroactively identify a valid "),n("code",[t._v("payment")]),t._v(" of that "),n("code",[t._v("brand")]),t._v("\nby successfully depositing it into this "),n("code",[t._v("purse")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The new empty purse contains 0 Quatloos")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)])]),t._v(" "),n("li",[n("strong",[t._v("Payment operations")]),t._v(" "),n("ul",[n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-getamountof-payment"}},[n("code",[t._v("issuer.getAmountOf(payment)")])])],1),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("payment")]),t._v(" balance, an "),n("code",[t._v("amount")]),t._v(". Using the "),n("code",[t._v("issuer")]),t._v(" rather than the "),n("code",[t._v("payment")]),t._v(" lets us trust\nthe result even if someone we do not trust sent us the "),n("code",[t._v("payment")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns an amount with a value of 100 and the quatloos brand")]),t._v("\nquatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])]),t._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-burn-payment-optamount"}},[n("code",[t._v("issuer.burn(payment, optAmount)")])])],1),t._v(" "),n("ul",[n("li",[t._v("Burns (destroys) all of the "),n("code",[t._v("payment")]),t._v(" argument's digital assets and deletes all mention of the "),n("code",[t._v("payment")]),t._v(" from the "),n("code",[t._v("issuer")]),t._v(".\nIf optional argument "),n("code",[t._v("optAmount")]),t._v(" is present, the "),n("code",[t._v("payment")]),t._v("\nbalance must be equal to "),n("code",[t._v("optAmount")]),t._v("'s value.  If "),n("code",[t._v("payment")]),t._v(" is a promise, the operation\nhappens after the promise resolves. Returns the value of the burned "),n("code",[t._v("payment")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amountToBurn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" paymentToBurn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amountToBurn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// burntAmount is 10 quatloos")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" burntAmount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("burn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paymentToBurn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountToBurn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])]),t._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-claim-payment-optamount"}},[n("code",[t._v("issuer.claim(payment, optAmount)")])])],1),t._v(" "),n("ul",[n("li",[t._v("Transfer all digital assets from the "),n("code",[t._v("payment")]),t._v(" argument to a new "),n("code",[t._v("payment")]),t._v(" and\nburn the original so no other references to this "),n("code",[t._v("payment")]),t._v(" survive. Returns the new "),n("code",[t._v("payment")]),t._v("\nIf optional argument "),n("code",[t._v("optAmount")]),t._v(" is present, the "),n("code",[t._v("payment")]),t._v(" balance\nmust be equal to "),n("code",[t._v("optAmount")]),t._v("'s balance, otherwise it throws an error. If "),n("code",[t._v("payment")]),t._v("\nis a promise for a payment, the operation happens after the promise resolves.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amountToTransfer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" originalPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amountToTransfer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("claim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  originalPayment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amountToTransfer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])]),t._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-combine-paymentsarray-opttotalamount"}},[n("code",[t._v("issuer.combine(paymentsArray)")])])],1),t._v(" "),n("ul",[n("li",[t._v("Combine multiple "),n("code",[t._v("payments")]),t._v(" into one "),n("code",[t._v("payment")]),t._v(". If any "),n("code",[t._v("payment")]),t._v("\nin "),n("code",[t._v("paymentsArray")]),t._v(" is a promise for a payment, the operation happens after all\npromises resolve. Every "),n("code",[t._v("payment")]),t._v(" is burned except for the\nreturned one. If you try to combine "),n("code",[t._v("payments")]),t._v(" of different "),n("code",[t._v("brands")]),t._v(",\nit throws an exception and each "),n("code",[t._v("payment")]),t._v(" is unaffected.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create an array of 100 payments of 1 unit each")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payments "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  payments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// combinedPayment equals 100")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("combine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])]),t._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-split-payment-paymentamounta"}},[n("code",[t._v("issuer.split(payment, paymentAmountA")]),t._v(")")])],1),t._v(" "),n("ul",[n("li",[t._v("Split a single "),n("code",[t._v("payment")]),t._v(" into two new "),n("code",[t._v("payments")]),t._v(", A and B, according\nto the "),n("code",[t._v("paymentAmountA")]),t._v(" argument's value. In other words, the result\nhas A equal to "),n("code",[t._v("paymentAmountA")]),t._v(" and B equal to the original "),n("code",[t._v("payment")]),t._v("\nminus "),n("code",[t._v("paymentAmountA")]),t._v(".\nThe original "),n("code",[t._v("payment")]),t._v(" argument is burned. If the original\n"),n("code",[t._v("payment")]),t._v(" is a promise, the operation happens when the promise\nresolves.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("paymentA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" paymentB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  oldPayment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// paymentA is 10 quatloos, payment B is 20 quatloos.")])])])])])])]),t._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-splitmany-payment-amountarray"}},[n("code",[t._v("issuer.splitMany(payment, paymentAmountArray)")])])],1),t._v(" "),n("ul",[n("li",[t._v("Returns multiple "),n("code",[t._v("payments")]),t._v(" in an array from splitting its single\n"),n("code",[t._v("payment")]),t._v(" argument. The resulting number of "),n("code",[t._v("payments")]),t._v(" is\nspecified as the length of the "),n("code",[t._v("paymentAmountArray")]),t._v(" argument,\nwith the newly split "),n("code",[t._v("payments")]),t._v(" having "),n("code",[t._v("amounts")]),t._v(" corresponding\nto those in "),n("code",[t._v("paymentAmountArray")]),t._v(". If the "),n("code",[t._v("paymentAmountArray")]),t._v("\nargument "),n("code",[t._v("amounts")]),t._v(" don't add up to the "),n("code",[t._v("value")]),t._v(" of the "),n("code",[t._v("payment")]),t._v("\nargument, the operation fails. If the operation is successful,\nthe original "),n("code",[t._v("payment")]),t._v(" is burned. If the operation fails, the\noriginal "),n("code",[t._v("payment")]),t._v(" is "),n("em",[t._v("not")]),t._v(" burned.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldQuatloosPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" goodQuatloosAmounts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayOfNewPayments "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("splitMany")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  oldQuatloosPayment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  goodQuatloosAmounts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note that the total amount in the amountArray must equal the")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// amount in the original payment, in the above case, 100 Quatloos in each.")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" anotherQuatloosPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total amounts in badQuatloosAmounts equal 20, when it should equal 1000")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badQuatloosAmounts "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throws error")]),t._v("\nt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("throwsAsync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("splitMany")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherQuatloosPayment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" badQuatloosAmounts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" message"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rights were not conserved'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])]),t._v(" "),n("li",[n("p",[n("RouterLink",{attrs:{to:"/ertp/api/issuer.html#issuer-islive-payment"}},[n("code",[t._v("issuer.isLive(payment)")])])],1),t._v(" "),n("ul",[n("li",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("payment")]),t._v(" argument is still active\n(i.e. has not been used or burned and was issued by this "),n("code",[t._v("issuer")]),t._v("). If "),n("code",[t._v("payment")]),t._v(" is a promise,\nthe operation happens on its resolution.")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isItLive "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isLive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])])])])]),t._v(" "),n("p",[n("strong",[t._v("Related Methods:")])]),t._v(" "),n("p",[n("strong",[t._v("Note")]),t._v(": None of these methods return a canonical result. If the "),n("code",[t._v("issuer")]),t._v(" itself doesn't acknowledge that\nthe "),n("code",[t._v("mint")]),t._v(", "),n("code",[t._v("brand")]),t._v(" or "),n("code",[t._v("purse")]),t._v(" are associated with it, then they're invalid. These methods help you find\nthe right "),n("code",[t._v("issuer")]),t._v(", but aren't authoritative.")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/mint.html#mint-getissuer"}},[n("code",[t._v("mint.getIssuer()")])]),t._v(" "),n("ul",[n("li",[t._v("Return the associated "),n("code",[t._v("issuer")]),t._v(" for the "),n("code",[t._v("mint")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosMintIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIssuer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sameIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" quatloosMintIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/brand.html#brand-ismyissuer-issuer"}},[n("code",[t._v("brand.isMyIssuer(issuer)")])]),t._v(" "),n("ul",[n("li",[t._v("Returns "),n("code",[t._v("true")]),t._v(" if the "),n("code",[t._v("brand")]),t._v(" comes from this "),n("code",[t._v("issuer")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMyIssuer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)]),t._v(" "),n("h2",{attrs:{id:"mints"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mints"}},[t._v("#")]),t._v(" Mints")]),t._v(" "),n("p",[n("img",{attrs:{src:a(364),alt:"Mint methods"}})]),t._v(" "),n("p",[t._v("A "),n("code",[t._v("mint")]),t._v(" issues new digital assets of its associated "),n("code",[t._v("brand")]),t._v(" as a new\n"),n("code",[t._v("payment")]),t._v(" object. These assets may be currency-like (our imaginary\nQuatloos currency), goods-like valuables (magic swords for games), or\nelectronic rights (the right to participate in a contract). Only a\nholder of a "),n("code",[t._v("mint")]),t._v("object can create new assets from it.")]),t._v(" "),n("p",[t._v("In other words, let's say there\nare 1000 Quatloos in circulation. Only holders of the Quatloos associated\n"),n("code",[t._v("mint")]),t._v(" can make any more Quatloos that'd boost the amount in circulation to, say, 2000.")]),t._v(" "),n("p",[t._v("Since these relationships are one-to-one and unchangeable:")]),t._v(" "),n("ul",[n("li",[t._v("A "),n("code",[t._v("mint")]),t._v(" created to make an asset "),n("code",[t._v("brand")]),t._v(", say Quatloos, can only create that "),n("code",[t._v("brand")]),t._v(" asset.\nFor example, only Quatloos, not Moola or anything else.")]),t._v(" "),n("li",[t._v("A "),n("code",[t._v("mint")]),t._v(" that creates an asset "),n("code",[t._v("brand")]),t._v(" is the only "),n("code",[t._v("mint")]),t._v(" that can create that "),n("code",[t._v("brand")]),t._v(". Only\nthe one Quatloos "),n("code",[t._v("mint")]),t._v(" can create new Quatloos.")]),t._v(" "),n("li",[t._v("A "),n("code",[t._v("mint")]),t._v(" that creates an asset "),n("code",[t._v("brand")]),t._v(" can never be changed to create a different "),n("code",[t._v("brand")]),t._v(".\nSo a Quatloos "),n("code",[t._v("mint")]),t._v(" can never become a Moola "),n("code",[t._v("mint")]),t._v(", or any other non-Quatloos asset.")])]),t._v(" "),n("p",[t._v("There are two "),n("code",[t._v("mint")]),t._v(" methods. Click the method's name to go to its entry in the "),n("RouterLink",{attrs:{to:"/ertp/api/#ertp-api"}},[t._v("ERTP\nAPI Reference")]),t._v(".")],1),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/ertp/api/mint.html#mint-getissuer"}},[n("code",[t._v("mint.getIssuer()")])]),t._v(" "),n("ul",[n("li",[t._v("Returns the "),n("code",[t._v("issuer")]),t._v(" uniquely associated with the "),n("code",[t._v("mint")]),t._v(".")]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosMintIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIssuer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sameIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" quatloosMintIssuer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/ertp/api/mint.html#mint-mintpayment-newamount"}},[n("code",[t._v("mint.mintPayment(newAmount)")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Returns a new "),n("code",[t._v("payment")]),t._v(" containing newly minted assets with a balance equal to "),n("code",[t._v("newAmount")]),t._v(". In other words,\nit mints "),n("code",[t._v("newAmount")]),t._v(" of digital assets and creates a "),n("code",[t._v("payment")]),t._v(" to hold those new assets. The assets are of\nthe "),n("code",[t._v("mint")]),t._v("'s associated "),n("code",[t._v("brand")]),t._v(".")]),t._v(" "),n("p",[n("strong",[t._v("Important")]),t._v(": "),n("code",[t._v("mint.mintPayment()")]),t._v(" is the only way in ERTP to create new digital assets. There is no other way.\nThe Zoe Contract Facet ("),n("code",[t._v("zcf")]),t._v(") can also create a mint in Zoe that can create new digital assets.")])]),t._v(" "),n("li",[n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" amountMath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos1000 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPayment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloos1000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])])])])],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);