(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{471:function(t,a,n){"use strict";n.r(a);var s=n(41),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"ratio-math-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ratio-math-functions"}},[t._v("#")]),t._v(" Ratio Math Functions")]),t._v(" "),n("p",[t._v("These functions let you apply a ratio (a fraction) to an amount, multiplying or dividing an amount\nby a ratio of two natural numbers. Ratios consist of a "),n("em",[t._v("numerator")]),t._v(" and a "),n("em",[t._v("denominator")]),t._v(". Both of these\nconsist of a value and a brand, just like "),n("code",[t._v("amounts")]),t._v(". A ratio cannot have a denominator value of 0.")]),t._v(" "),n("p",[t._v("The ratio functions have to be imported.")]),t._v(" "),n("p",[t._v("The most common kind of "),n("code",[t._v("Ratio")]),t._v(" is applied to an "),n("code",[t._v("Amount")]),t._v(" of a particular\nbrand and produces results of the same brand.")]),t._v(" "),n("p",[n("code",[t._v("Ratios")]),t._v(" can also have two brands, essentially typing them such as miles per hour\nor US dollars for Swiss francs (an exchange rate ratio) (i.e. the numerator is one\nbrand and the denominator is another). Keep in mind that a ratio function should\nmake sense when used with a dual-branded ratio.")]),t._v(" "),n("p",[t._v("For example, when multiplying an amount by a ratio, the result has the ratio numerator's brand.\nSo the amount should have the same brand as the ratio's denominator to cancel it out; e.g. 5\ngallons * (10 miles / 1 gallon) = 50 miles. Similarly, dividing an amount by a ratio returns\na result amount with the denominator's brand, so the amount should be the same brand as\nthe numerator to cancel it out.")]),t._v(" "),n("h2",{attrs:{id:"makeratio-numerator-numeratorbrand-denominator-denominatorbrand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#makeratio-numerator-numeratorbrand-denominator-denominatorbrand"}},[t._v("#")]),t._v(" "),n("code",[t._v("makeRatio(numerator, numeratorBrand, denominator, denominatorBrand)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("numerator")]),t._v(": "),n("code",[t._v("{ BigInt }")])]),t._v(" "),n("li",[n("code",[t._v("numeratorBrand")]),t._v(": "),n("code",[t._v("{ Brand }")])]),t._v(" "),n("li",[n("code",[t._v("denominator")]),t._v(": "),n("code",[t._v("{ BigInt }")]),t._v(" defaults to 100n")]),t._v(" "),n("li",[n("code",[t._v("denominatorBrand)")]),t._v(": "),n("code",[t._v("{ Brand }")]),t._v("  defaults to "),n("code",[t._v("numeratorBrand")]),t._v(" value")]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{ numerator: { Value , Brand }, denominator: { Value, Brand } }")])])]),t._v(" "),n("p",[t._v("Makes a "),n("code",[t._v("Ratio")]),t._v(", representing a fraction and consisting of a record containing\ntwo "),n("code",[t._v("Amounts")]),t._v(". It is a pass-by-copy record.")]),t._v(" "),n("p",[t._v("By default, the "),n("code",[t._v("denominator")]),t._v(" is 100; i.e. the ratio is a percent.")]),t._v(" "),n("p",[t._v("By default, the "),n("code",[t._v("denominatorBrand")]),t._v(" value is the same as the "),n("code",[t._v("numeratorBrand")]),t._v("\nvalue.")]),t._v(" "),n("p",[t._v("A ratio has these restrictions:")]),t._v(" "),n("ul",[n("li",[t._v("Both the numerator value and denominator value must be natural numbers.")]),t._v(" "),n("li",[t._v("The denominator cannot be 0.")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use default values to create a ratio of 50 / 100 Quatloos")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ratio "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Specify all values to create a ratio of 75 Quatloos / 4 Moolas (the current exchange rate)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ratio "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("75n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloosBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" moolasBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"makeratiofromamounts-numeratoramount-denominatoramount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#makeratiofromamounts-numeratoramount-denominatoramount"}},[t._v("#")]),t._v(" "),n("code",[t._v("makeRatioFromAmounts(numeratorAmount, denominatorAmount)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("numeratorAmount")]),t._v(": "),n("code",[t._v("{ Amount }")])]),t._v(" "),n("li",[n("code",[t._v("denominatorAmount")]),t._v(": "),n("code",[t._v("{ Amount }")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{ numerator: { value , brand }, denominator: { value, brand } }")])])]),t._v(" "),n("p",[t._v("Makes a "),n("code",[t._v("Ratio")]),t._v(", representing a fraction and consisting of an immutable pair\nof two "),n("code",[t._v("Amounts")]),t._v(".  The "),n("code",[t._v("numeratorAmount")]),t._v(" is the ratio's numerator and\nthe "),n("code",[t._v("denominatorAmount")]),t._v(" is the ratio's denominator. It is a pass-by-copy\nrecord.")]),t._v(" "),n("p",[t._v("A ratio has these restrictions:")]),t._v(" "),n("ul",[n("li",[t._v("Both the numerator value and denominator value must be natural numbers.")]),t._v(" "),n("li",[t._v("The denominator cannot be 0.")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fiftyCents "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("centsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dollar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("centsBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" halfADollar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRatioFromAmounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fiftyCents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dollar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"assertisratio-ratio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#assertisratio-ratio"}},[t._v("#")]),t._v(" "),n("code",[t._v("assertIsRatio(ratio)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("ratio")]),t._v(": "),n("code",[t._v("{ Record }")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("void")])])]),t._v(" "),n("p",[t._v("Throws an error if the argument is not a valid ratio.")]),t._v(" "),n("p",[t._v("Throws messages for errors:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Ratio ${ratio} must be a record with 2 fields.")])]),t._v(" "),n("li",[n("code",[t._v("Parameter must be a Ratio record, but ${ratio} has ${q(name)}")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertIsRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aRatio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"multiplyby-amount-ratio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multiplyby-amount-ratio"}},[t._v("#")]),t._v(" "),n("code",[t._v("multiplyBy(amount, ratio)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("amount")]),t._v(": "),n("code",[t._v("{ Amount }")])]),t._v(" "),n("li",[n("code",[t._v("ratio")]),t._v(": "),n("code",[t._v("{ Ratio }")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{ Amount }")])])]),t._v(" "),n("p",[t._v("Returns an immutable "),n("code",[t._v("Amount")]),t._v(".  Its brand is the "),n("code",[t._v("ratio")]),t._v("'s "),n("em",[t._v("numerator")]),t._v("'s brand.\nNote the denominator brand has to be the same as the amount brand")]),t._v(" "),n("p",[t._v("The resulting value is determined by:")]),t._v(" "),n("ol",[n("li",[t._v("Multiplying the "),n("code",[t._v("amount")]),t._v(" value by the "),n("code",[t._v("ratio")]),t._v("'s numerator's value.")]),t._v(" "),n("li",[t._v("Dividing the result from step 1 by the "),n("code",[t._v("ratio")]),t._v("'s denominator's value.")]),t._v(" "),n("li",[t._v("Applying a floor to the result from step 2 to round it down to\nthe nearest integer. If the step 2 result is already an integer, its value does\nnot change.")])]),t._v(" "),n("p",[t._v("The above describes what is done to determine the result, not precisely how it's\ndone in the source code.")]),t._v(" "),n("p",[t._v("For example, if the amount value is 47 and the ratio is 3 / 5, the calculation\nwould go")]),t._v(" "),n("ol",[n("li",[t._v("47 * 3 = 141")]),t._v(" "),n("li",[t._v("141 / 5 = 28.2")]),t._v(" "),n("li",[t._v("Floor(28.2) = 28")])]),t._v(" "),n("p",[t._v("If the numerator's brand was Swiss francs, the result would be an "),n("code",[t._v("Amount")]),t._v(" of\n28 Swiss francs.")]),t._v(" "),n("p",[t._v("Throws errors with messages:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Expected an amount: ${amount})")]),t._v(":  First argument isn't an "),n("code",[t._v("Amount")]),t._v(".")]),t._v(" "),n("li",[n("code",[t._v("amount's brand ${q(amount.brand)} must match ratio's denominator ${q( ratio.denominator.brand")]),t._v(": The amount and ratio's denominator must have the same brand.")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchangeRatio "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" swissFrancBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" usDollarBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Dollars47 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dollarBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("47n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount of 28 Swiss francs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchange "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiplyBy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dollars100"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exchangeRatio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"divideby-amount-ratio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#divideby-amount-ratio"}},[t._v("#")]),t._v(" "),n("code",[t._v("divideBy(amount, ratio)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("amount")]),t._v(": "),n("code",[t._v("{ Amount }")])]),t._v(" "),n("li",[n("code",[t._v("ratio")]),t._v(": "),n("code",[t._v("{ Ratio }")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{ Amount }")])])]),t._v(" "),n("p",[t._v("Returns an immutable "),n("code",[t._v("Amount")]),t._v(".  Its brand is the "),n("code",[t._v("ratio")]),t._v("'s "),n("em",[t._v("denominator")]),t._v("'s brand.\nIts value is determined by:")]),t._v(" "),n("ol",[n("li",[t._v("Multiplying the "),n("code",[t._v("amount")]),t._v(" value by the "),n("code",[t._v("ratio")]),t._v("'s denominator's value.")]),t._v(" "),n("li",[t._v("Dividing the result from step 1 by the "),n("code",[t._v("ratio")]),t._v("'s numerator's value.")]),t._v(" "),n("li",[t._v("Applying a floor to the result from step 2 to round it down to\nthe nearest integer. If the step 2 result is already an integer, its value does\nnot change.")])]),t._v(" "),n("p",[t._v("The above describes what is done to determine the result, not precisely how it's\ndone in the source code.")]),t._v(" "),n("p",[t._v("For example, if the amount value is 47 and the ratio is 3 / 5, the calculation\nwould go")]),t._v(" "),n("ol",[n("li",[t._v("47 * 5 = 235")]),t._v(" "),n("li",[t._v("235 / 3 = 78.33333...")]),t._v(" "),n("li",[t._v("Floor(78.3333...) = 78")])]),t._v(" "),n("p",[t._v("If the denominator's brand was US dollars, the result would be an "),n("code",[t._v("Amount")]),t._v(" of\n78 US dollars.")]),t._v(" "),n("p",[t._v("Throws errors with messages:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Expected an amount: ${amount})")]),t._v(":  First argument isn't an "),n("code",[t._v("Amount")]),t._v(".")]),t._v(" "),n("li",[n("code",[t._v("amount's brand ${q(amount.brand)} must match ratio's numerator ${q(ratio.numerator.brand")]),t._v(": The\namount and ratio's numerator must have the same brand.")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("`js\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchangeRatio "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" swissFrancBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" usDollarBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Dollars47 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AmountMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dollarBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("47n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns an amount of 78 Swiss francs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchange "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("divideBy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dollars100"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exchangeRatio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"invertratio-ratio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#invertratio-ratio"}},[t._v("#")]),t._v(" "),n("code",[t._v("invertRatio(ratio)")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("ratio")]),t._v(": "),n("code",[t._v("{ Ratio }")])]),t._v(" "),n("li",[t._v("Returns: "),n("code",[t._v("{ Ratio }")])])]),t._v(" "),n("p",[t._v("Returns a "),n("code",[t._v("Ratio")]),t._v(" such that the "),n("code",[t._v("ratio")]),t._v(" argument's numerator is the returned value's\ndenominator and the "),n("code",[t._v("ratio")]),t._v(" argument's denominator is the returned value's numerator.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchangeRatio "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" swissFrancBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" usDollarBrand"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns a ratio of 5 US dollars / 3 swiss Francs")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" invertedRatio "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("invertRatio")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeRatio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);