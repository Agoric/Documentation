(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{453:function(t,e,a){"use strict";a.r(e);var s=a(44),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"agoric-wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#agoric-wallet"}},[t._v("#")]),t._v(" Agoric Wallet")]),t._v(" "),a("p",[t._v("This page documents the "),a("em",[t._v("Agoric Wallet")]),t._v(", including its use of "),a("em",[t._v("petnames")]),t._v(" and its place in the Agoric Platform\narchitecture. For a tour of the Wallet UI, see "),a("RouterLink",{attrs:{to:"/guides/wallet/ui.html"}},[t._v("here")]),t._v(". For the Wallet API, see "),a("RouterLink",{attrs:{to:"/guides/wallet/api.html"}},[t._v("here")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"wallet-and-agoric-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wallet-and-agoric-architecture"}},[t._v("#")]),t._v(" Wallet and Agoric Architecture")]),t._v(" "),a("p",[t._v("The Agoric System consists of interconnected Agoric VMs. Some are\non the blockchain, some are local. The Wallet is a user's trusted\nagent for interacting with the Agoric VM network.")]),t._v(" "),a("p",[t._v("We also have Dapps ("),a("em",[t._v("Decentralized applications")]),t._v("), which are Web UIs\nthat interact with Agoric VMs. Dapps have their own agendas...which\nmay include wanting to steal assets from Wallets.")]),t._v(" "),a("p",[t._v("An "),a("em",[t._v("Ag-Solo")]),t._v(" is a single off-chain Agoric VM. They have their own UI\nand way of communicating with chains (including multiple chains and\nnetwork connections). They serve as entry points into the Agoric System.")]),t._v(" "),a("p",[t._v("When you run "),a("code",[t._v("agoric start")]),t._v(", you get a private ag-solo that runs your\nprivate wallet. The wallet is a user's "),a("em",[t._v("trusted agent")]),t._v(". It lets you\nenable or disable inbound connections from Dapps and approve or decline\nproposals from those Dapps you enabled. The Wallet is visible\nwhen you run "),a("code",[t._v("agoric open")]),t._v(".")]),t._v(" "),a("p",[t._v("The way this works in the Wallet's UI is via the "),a("em",[t._v("proposals")]),t._v(" that are\npart of a Zoe "),a("em",[t._v("offer")]),t._v("; a Dapp says it wants the user to offer something.\nThe wallet expresses that request/offer in a popup, and the user indicates\nif they want to enact or decline it.")]),t._v(" "),a("p",[t._v("Dapps can be anywhere; they can be web apps interacting with wallets,\nusually because they want your money and/or help you exchange something\nwith someone else. They may even want to give you something for free.\nBut a Dapp's main use is exchanging something on the chain, in addition\nto controlling what access they have and managing the proposals.")]),t._v(" "),a("h2",{attrs:{id:"wallet-bridge-protocol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wallet-bridge-protocol"}},[t._v("#")]),t._v(" Wallet Bridge protocol")]),t._v(" "),a("p",[t._v("The "),a("em",[t._v("wallet bridge")]),t._v(" is a web page with direct access to an Agoric Wallet. It provides\nthe Dapp with a facet of an API. Dapps never talk directly to a Wallet, only to\nthis bridge that knows where the Wallet is. So, for example, if a Dapp is running in\nyour browser at "),a("code",[t._v("https://treasury.agoric.app/")]),t._v(" and the Wallet is running locally,\nthey don't communicate directly. They do so by sending JSON-encoded messages through\nthe wallet bridge.")]),t._v(" "),a("h2",{attrs:{id:"petnames-and-paths"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#petnames-and-paths"}},[t._v("#")]),t._v(" Petnames and paths")]),t._v(" "),a("p",[t._v("Before we get into the Wallet itself, you should know about "),a("em",[t._v("petnames")]),t._v(',\nwhich are your personal names for objects. No one else can see or\nmodify a petname without your permission. You can think of them as\nyour phone\'s contacts list. The actual phone number is what your phone\nuses to call someone, but for you to more easily tell who a number is\nassociated with, you\'ve assigned a petname to it, such as Mom,\nGrandpa, Kate S., etc. Different people can have different petnames for\ndifferent objects. For example, the same person is "Mom" to you, "Mimi"\nto her granddaughter, and "Mrs. Watson" to many others.')]),t._v(" "),a("p",[t._v("Your Wallet manages your petnames for Dapps, asset types, issuers, etc.")]),t._v(" "),a("p",[t._v("The wallet bridge protocol is migrating petnames to "),a("em",[t._v("paths")]),t._v(". All former petnames\nare now either a "),a("em",[t._v("path")]),t._v(" or still a plain string. A path is an array of strings\nwhose first element is the user's petname for a Dapp. Dapps must be able to\nwork with either plain string petnames or array-of-strings paths.")]),t._v(" "),a("p",[t._v("They can do this via "),a("code",[t._v("JSON.stringify(petnameOrPath)")]),t._v(" before using the "),a("code",[t._v("petnameOrPath")]),t._v(" in\na programmatic string-only context (such as a key in a Map or Set, or an HTML element's\nattribute value, such as an ID).  When displaying a path to users, you should join its\nelements with "),a("code",[t._v("'.'")]),t._v(". If in a UI, you should ideally color the first element\ndifferently from the dots and other elements. The first element is a trusted,\nuser-assigned petname for the Dapp, while the other elements were automatically\ngenerated by the Dapp or wallet. Thus, they have no special relationship to the user.")]),t._v(" "),a("h3",{attrs:{id:"dapp-specific-path-suggestions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dapp-specific-path-suggestions"}},[t._v("#")]),t._v(" Dapp-specific path suggestions")]),t._v(" "),a("p",[t._v("Your Dapp should suggest names for any Installations, Instances, or Issuers wallet users\nwill interact with. When a wallet accepts them, it returns them to the Dapp as paths (arrays\nof strings) that start with the user's petname for the Dapp.")]),t._v(" "),a("p",[t._v("For example, here are "),a("a",{attrs:{href:"https://github.com/Agoric/dapp-fungible-faucet/blob/6092d6648a7a773d299c79fecd44bb650f6cfa06/ui/public/src/main.js#L145",target:"_blank",rel:"noopener noreferrer"}},[t._v("the messages that the Fungible Faucet Dapp\nsends"),a("OutboundLink")],1),t._v("\nover the wallet bridge:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Our issuer will default to something like `FungibleFaucet.Installation`.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("walletSend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'walletSuggestInstallation'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      petname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Installation'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      boardId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTALLATION_BOARD_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Our issuer will default to something like `FungibleFaucet.Instance`.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("walletSend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'walletSuggestInstance'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      petname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Instance'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      boardId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSTANCE_BOARD_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Our issuer will default to something like `FungibleFaucet.Token`.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("walletSend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'walletSuggestIssuer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      petname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Token'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      boardId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TOKEN_ISSUER_BOARD_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"the-agoric-board"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-agoric-board"}},[t._v("#")]),t._v(" The Agoric Board")]),t._v(" "),a("p",[t._v("Several Wallet API methods use "),a("em",[t._v("Agoric's Board")]),t._v(', a key-value "bulletin board" that\nlets users make data generally available. Users can obtain an Id by posting a value and\nothers can get the value just by knowing the Id. You can make Id(s) known by any\ncommunication method you like; private email, an email blast to a mailing list\nor many individuals, buying an ad on a website, tv program, or newspaper,\nlisting it on your website, etc.')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" depositFacet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("board"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aliceQuatloosDepositFacetId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("depositFacet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("receive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myQuatloosPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])]),a("p",[t._v("To get an object, such as a depositFacet, using the Board, first you have\nto be told what Board Id is associated with it. Using the "),a("code",[t._v("getValue()")]),t._v(" method,\nyou retrieve the reference to the depositFacet and can deposit payments into it.")])])}),[],!1,null,null,null);e.default=n.exports}}]);