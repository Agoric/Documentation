(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{369:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"issuer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer"}},[t._v("#")]),t._v(" Issuer")]),t._v(" "),a("p",[t._v("An "),a("code",[t._v("issuer")]),t._v(" is the authority on what holds digital assets of its kind.\nWhile it cannot create new value by creating digital assets like a "),a("code",[t._v("mint")]),t._v(",\nit recognizes and identifies "),a("code",[t._v("purses")]),t._v(" and "),a("code",[t._v("payments")]),t._v(" that carry actual value.\nIt can create empty "),a("code",[t._v("purses")]),t._v(" and transform "),a("code",[t._v("payments")]),t._v(" (by splitting,\ncombining, burning, or exclusively claiming).")]),t._v(" "),a("p",[t._v("An "),a("code",[t._v("issuer")]),t._v(" has an unchangeable one-to-one relationship with the "),a("code",[t._v("mint")]),t._v(" and\n"),a("code",[t._v("brand")]),t._v(" that were created with it. For any "),a("code",[t._v("brand")]),t._v(" for which you will accept\n"),a("code",[t._v("payments")]),t._v(" in, you should obtain its "),a("code",[t._v("issuer")]),t._v(" from a trusted source.\nYou can then rely on that "),a("code",[t._v("issuer")]),t._v(" as the authority to\nvalidate an untrusted "),a("code",[t._v("payment")]),t._v(" of that "),a("code",[t._v("brand")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"makeissuerkit-allegedname-amountmathkind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#makeissuerkit-allegedname-amountmathkind"}},[t._v("#")]),t._v(" makeIssuerKit(allegedName, amountMathKind)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("allegedName")]),t._v(" "),a("code",[t._v("{String}")])]),t._v(" "),a("li",[a("code",[t._v("amountMathKind")]),t._v(" "),a("code",[t._v("{MathKind}")]),t._v(" - optional")]),t._v(" "),a("li",[t._v("Returns "),a("code",[t._v("{IssuerKit}")])])]),t._v(" "),a("p",[t._v("Makes a new "),a("code",[t._v("issuer")]),t._v(" as well as its one-to-one associated ERTP objects; a "),a("code",[t._v("mint")]),t._v(" and a "),a("code",[t._v("brand")]),t._v(".\nAll are in unchangeable one-to-one relationships with each other. It also returns an "),a("code",[t._v("amountMath")]),t._v("\nthat can be used on "),a("code",[t._v("amounts")]),t._v(" of the created "),a("code",[t._v("brand")]),t._v(".")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("allegedName")]),t._v(" is available from the "),a("code",[t._v("brand")]),t._v(" or the "),a("code",[t._v("issuer")]),t._v(". The "),a("code",[t._v("allegedName")]),t._v(" is\nuseful for debugging and double-checking assumptions, but should not be trusted.")]),t._v(" "),a("p",[t._v("The optional "),a("code",[t._v("amountMathKind")]),t._v(" specifies the kind of math to use with the digital assets.\nEach implements all of the same set of API methods (i.e. "),a("code",[t._v("amountMath")]),t._v(" methods are\npolymorphic). We recommend you import and use the "),a("code",[t._v("MathKind")]),t._v(" values from "),a("code",[t._v("@agoric/ERTP")]),t._v("\ninstead of using strings.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("MathKind.NAT")]),t._v(" ("),a("code",[t._v("nat")]),t._v("): Used with fungible assets. "),a("code",[t._v("amount")]),t._v(" values are natural numbers (non-negative integers). Default value.")]),t._v(" "),a("li",[a("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),a("code",[t._v("strSet")]),t._v("): Used with non-fungible assets. "),a("code",[t._v("amount")]),t._v(" values are strings.")]),t._v(" "),a("li",[a("code",[t._v("MathKind.SET")]),t._v(" ("),a("code",[t._v("set")]),t._v("): Used with non-fungible assets. "),a("code",[t._v("amount")]),t._v(" values are objects or records with multiple properties.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MathKind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" makeIssuerKit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@agoric/ertp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defaults to MathKind.NAT")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobars'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kitties'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" brand"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosBrand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountMath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosAmountMath "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is merely an amount, describing assets.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloos2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" titleMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" titleIssuer amountMath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" titleAmountMath "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alamedaCountyPropertyTitle'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// These are merely amounts describing digital assets, not minting assets.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cornerProperty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" titleLocalAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1292826'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" adjacentProperty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" titleLocalAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1028393'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedProperty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" titleLocalAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("harden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1292826'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1028393'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-getallegedname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-getallegedname"}},[t._v("#")]),t._v(" issuer.getAllegedName()")]),t._v(" "),a("ul",[a("li",[t._v("Returns: "),a("code",[t._v("{allegedName}")])])]),t._v(" "),a("p",[t._v("Returns the "),a("code",[t._v("allegedName")]),t._v(" for this "),a("code",[t._v("issuer")]),t._v(".")]),t._v(" "),a("p",[t._v("An alleged name is a human-readable string name\nof a kind of digital asset. An alleged name\nshould not be trusted as accurate since there is\nno public registry or expectation of uniqueness. This\nmeans there can be multiple issuers/mints/brands with the\nsame alleged name, and thus the name by itself does not\nuniquely identify an issuer. Rather, the "),a("code",[t._v("brand")]),t._v(" object does that.")]),t._v(" "),a("p",[t._v("To put it another way, nothing stops different people from creating\nmultiple "),a("code",[t._v("issuers")]),t._v(" with the alleged name "),a("code",[t._v("Quatloos")]),t._v("...but that doesn't\nmake any of them "),a("strong",[t._v("the")]),t._v(" Quatloos "),a("code",[t._v("issuer")]),t._v(". The alleged name is just a\nhuman readable version which is helpful for debugging.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosIssuerAllegedName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAllegedName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// quatloosIssuerAllegedName === 'quatloos'")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-getamountmathkind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-getamountmathkind"}},[t._v("#")]),t._v(" issuer.getAmountMathKind()")]),t._v(" "),a("ul",[a("li",[t._v("Returns: "),a("code",[t._v("{MathKind}")])])]),t._v(" "),a("p",[t._v("Get the kind of this "),a("code",[t._v("issuer")]),t._v("'s "),a("code",[t._v("amountMath")]),t._v(". It returns one of\n"),a("code",[t._v("MathKind.NAT")]),t._v(" ("),a("code",[t._v("nat")]),t._v("), "),a("code",[t._v("MathKind.STR")]),t._v(" ("),a("code",[t._v("str")]),t._v("), or "),a("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),a("code",[t._v("strSet")]),t._v(").")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("amountMathKind")]),t._v(" value specifies which of three kinds an "),a("code",[t._v("amountMath")]),t._v(" is,\nand what kind of values it is used on. Each kind implements all of the same set\nof API methods (i.e. "),a("code",[t._v("amountMath")]),t._v(" methods are polymorphic).")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("MathKind.NAT")]),t._v(" ("),a("code",[t._v("nat")]),t._v("): Used with fungible assets. "),a("code",[t._v("amount")]),t._v(" values are natural numbers (non-negative integers). Default value.")]),t._v(" "),a("li",[a("code",[t._v("MathKind.STRING_SET")]),t._v(" ("),a("code",[t._v("strSet")]),t._v("): Used with non-fungible assets. "),a("code",[t._v("amount")]),t._v(" values are strings.")]),t._v(" "),a("li",[a("code",[t._v("MathKind.SET")]),t._v(" ("),a("code",[t._v("set")]),t._v("): Used with non-fungible assets. "),a("code",[t._v("amount")]),t._v(" values are objects or records with multiple properties.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nquatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMathKind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns 'nat', also known as MathKind.NAT, the default value.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" moolaIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moola'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MathKind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRING_SET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmoolaIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountMathKind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns 'str', also known as'MathKind.STRING_SET`")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-getamountof-payment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-getamountof-payment"}},[t._v("#")]),t._v(" issuer.getAmountOf(payment)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("{Payment}")])]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Amount}")])])]),t._v(" "),a("p",[t._v("Get the "),a("code",[t._v("payment")]),t._v("'s balance. Because the "),a("code",[t._v("payment")]),t._v(" is not trusted, we cannot\ntrust it to provide its true value, and must rely on the "),a("code",[t._v("issuer")]),t._v(" to validate\nthe "),a("code",[t._v("payment")]),t._v("'s "),a("code",[t._v("brand")]),t._v("  and tell us how much it contains.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nquatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAmountOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns an amount of 100 Quatloos ")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-getbrand"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-getbrand"}},[t._v("#")]),t._v(" issuer.getBrand()")]),t._v(" "),a("ul",[a("li",[t._v("Returns: "),a("code",[t._v("{Brand}")])])]),t._v(" "),a("p",[t._v("Returns the "),a("code",[t._v("brand")]),t._v(" for this "),a("code",[t._v("issuer")]),t._v(". The "),a("code",[t._v("brand")]),t._v(" indicates the kind of digital asset\nand is the same for the "),a("code",[t._v("issuer")]),t._v("'s associated "),a("code",[t._v("mint")]),t._v(", and any "),a("code",[t._v("purses")]),t._v(" and "),a("code",[t._v("payments")]),t._v(" of this particular\nkind. The "),a("code",[t._v("brand")]),t._v(" is not closely held, so this function should not be trusted to identify\nan "),a("code",[t._v("issuer")]),t._v(" alone. Fake digital assets and amounts can use another "),a("code",[t._v("issuer's")]),t._v(" "),a("code",[t._v("brand")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" brand"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosBrand "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosBrand "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBrand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// brand === quatloosBrand")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-makeemptypurse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-makeemptypurse"}},[t._v("#")]),t._v(" issuer.makeEmptyPurse()")]),t._v(" "),a("ul",[a("li",[t._v("Returns: "),a("code",[t._v("{Purse}")])])]),t._v(" "),a("p",[t._v("Make and return an empty "),a("code",[t._v("purse")]),t._v(" that holds assets of the "),a("code",[t._v("brand")]),t._v(" associated with the "),a("code",[t._v("issuer")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosPurse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeEmptyPurse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-burn-payment-optamount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-burn-payment-optamount"}},[t._v("#")]),t._v(" issuer.burn(payment, optAmount)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("{Payment}")])]),t._v(" "),a("li",[a("code",[t._v("optAmount")]),t._v(" "),a("code",[t._v("{Amount}")]),t._v(" - Optional")]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Amount}")])])]),t._v(" "),a("p",[t._v("Burn (destroy) all of the digital assets in the "),a("code",[t._v("payment")]),t._v("\nand return an "),a("code",[t._v("amount")]),t._v(" of what was burned.")]),t._v(" "),a("p",[a("code",[t._v("optAmount")]),t._v(" is optional. If "),a("code",[t._v("optAmount")]),t._v(" is present,\nthe code insists the "),a("code",[t._v("payment")]),t._v(" balance is equal to "),a("code",[t._v("optAmount")]),t._v(", to prevent sending the wrong "),a("code",[t._v("payment")]),t._v("\nand other confusion.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("payment")]),t._v(" is a "),a("code",[t._v("promise")]),t._v(" for a "),a("code",[t._v("payment")]),t._v(", the operation proceeds after the\n"),a("code",[t._v("promise")]),t._v(" resolves.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amountToBurn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" paymentToBurn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amountToBurn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// burntAmount should equal 10 Quatloos")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" burntAmount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("burn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paymentToBurn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountToBurn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-claim-payment-optamount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-claim-payment-optamount"}},[t._v("#")]),t._v(" issuer.claim(payment, optAmount)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("{Payment}")])]),t._v(" "),a("li",[a("code",[t._v("optAmount")]),t._v(" "),a("code",[t._v("{Amount}")])]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Payment}")])])]),t._v(" "),a("p",[t._v("Transfer all digital assets from "),a("code",[t._v("payment")]),t._v(" to a new "),a("code",[t._v("payment")]),t._v(" and burn the\noriginal. This allows the owner to be sure no other references to this\npayment survive, so they are the exclusive owner.")]),t._v(" "),a("p",[a("code",[t._v("optAmount")]),t._v(" is optional.\nIf "),a("code",[t._v("optAmount")]),t._v(" is present, "),a("code",[t._v("payment")]),t._v("'s balance must be\nequal to "),a("code",[t._v("optAmount")]),t._v(", to prevent sending the wrong "),a("code",[t._v("payment")]),t._v(" and other confusion.\nIf "),a("code",[t._v("optAmount")]),t._v(" does not equal the balance in the original "),a("code",[t._v("payment")]),t._v("\nthen it throws an error.")]),t._v(" "),a("p",[t._v("If a "),a("code",[t._v("payment")]),t._v(" is a "),a("code",[t._v("promise")]),t._v(" for a "),a("code",[t._v("payment")]),t._v(", the operation will\nproceed after the "),a("code",[t._v("promise")]),t._v(" resolves. Since you might also have a "),a("code",[t._v("promise")]),t._v(" returned,\nit might take a bit of time for the whole operation to resolve.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amountExpectedToTransfer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" originalPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amountExpectedToTransfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("claim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("originalPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amountToTransfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-combine-paymentsarray-opttotalamount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-combine-paymentsarray-opttotalamount"}},[t._v("#")]),t._v(" issuer.combine(paymentsArray, optTotalAmount)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("paymentsArray")]),t._v(" "),a("code",[t._v("{Array <Payment>}")])]),t._v(" "),a("li",[a("code",[t._v("optTotalAmount")]),t._v(" "),a("code",[t._v("{Amount}")]),t._v(" - Optional.")]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Payment}")])])]),t._v(" "),a("p",[t._v("Combines multiple "),a("code",[t._v("payments")]),t._v(" into one "),a("code",[t._v("payment")]),t._v(".  If any "),a("code",[t._v("payment")]),t._v(" in "),a("code",[t._v("paymentsArray")]),t._v(" is\na "),a("code",[t._v("promise")]),t._v(", the operation proceeds after all the "),a("code",[t._v("payments")]),t._v("\nresolve. The "),a("code",[t._v("payments")]),t._v(" in "),a("code",[t._v("paymentsArray")]),t._v(" are burned.")]),t._v(" "),a("p",[t._v("If the optional "),a("code",[t._v("optTotalAmount")]),t._v(" is present, the total of all the "),a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("amounts")]),t._v(" in the\narray must equal "),a("code",[t._v("optTotalAmount")]),t._v(" or it throws an error.")]),t._v(" "),a("p",[t._v("If a "),a("code",[t._v("payment")]),t._v(" is a "),a("code",[t._v("promise")]),t._v(" for a "),a("code",[t._v("payment")]),t._v(", the operation will\nproceed after the "),a("code",[t._v("promise")]),t._v(" resolves. Since you might also have a "),a("code",[t._v("promise")]),t._v(" returned,\nit might take a bit of time for the whole operation to resolve.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" quatloosLocalAmountMath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeLocalAmountMath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create an array of 100 payments of 1 quatloo each")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  payments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// combinedPayment equals 100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" combinedPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("combine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Note")]),t._v(": You "),a("strong",[t._v("cannot")]),t._v(" combine "),a("code",[t._v("payments")]),t._v(" from different "),a("code",[t._v("mints")]),t._v(" (as they are of different "),a("code",[t._v("brands")]),t._v("):")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" otherMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" otherIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'other'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" otherPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" otherMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npayments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("otherPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using the payments array from the above code")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throws error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("combine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-split-payment-paymentamounta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-split-payment-paymentamounta"}},[t._v("#")]),t._v(" issuer.split(payment, paymentAmountA)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("{Payment}")])]),t._v(" "),a("li",[a("code",[t._v("paymentAmountA")]),t._v(" "),a("code",[t._v("{Amount}")])]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Array <Payment>}")])])]),t._v(" "),a("p",[t._v("Split a single "),a("code",[t._v("payment")]),t._v(" into two new "),a("code",[t._v("payments")]),t._v(", A and B, according to "),a("code",[t._v("paymentAmountA")]),t._v(".\nFor example, if the "),a("code",[t._v("payment")]),t._v(" is for 10 Quatloos, and "),a("code",[t._v("paymentAmountA")]),t._v(" is 3 Quatloos,\nit returns an array of two "),a("code",[t._v("payments")]),t._v(" with balances of 3 Quatloos and 7 Quatloos.")]),t._v(" "),a("p",[t._v("The original "),a("code",[t._v("payment")]),t._v(" is burned.")]),t._v(" "),a("p",[t._v("If the original "),a("code",[t._v("payment")]),t._v(" is a "),a("code",[t._v("promise")]),t._v(" for a "),a("code",[t._v("payment")]),t._v(", the operation will\nproceed after the "),a("code",[t._v("promise")]),t._v(" resolves. Since you might also have a "),a("code",[t._v("promise")]),t._v(" returned,\nit might take a bit of time for the whole operation to resolve.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// After the split, paymentA has 5 quatloos and paymentB has 15.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("paymentA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" paymentB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-splitmany-payment-amountarray"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-splitmany-payment-amountarray"}},[t._v("#")]),t._v(" issuer.splitMany(payment, amountArray)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("{Payment}")])]),t._v(" "),a("li",[a("code",[t._v("amountArray")]),t._v(" "),a("code",[t._v("{Array <Amount>}")])]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Array <Payment>}")])])]),t._v(" "),a("p",[t._v("Split a single "),a("code",[t._v("payment")]),t._v(" into multiple "),a("code",[t._v("payments")]),t._v(". The resulting array of "),a("code",[t._v("payments")]),t._v(" is\nas long as "),a("code",[t._v("amountArray")]),t._v(", and the "),a("code",[t._v("payments")]),t._v(" will have "),a("code",[t._v("amounts")]),t._v(" corresponding to\nthe "),a("code",[t._v("amountArray")]),t._v(" contents. The original "),a("code",[t._v("payment")]),t._v(" is burned. If the original "),a("code",[t._v("payment")]),t._v("\nis a "),a("code",[t._v("promise")]),t._v(", the operation proceeds after the "),a("code",[t._v("promise")]),t._v(" resolves.  If the "),a("code",[t._v("amounts")]),t._v("\nin "),a("code",[t._v("amountArray")]),t._v(" don't add up to the value of "),a("code",[t._v("payment")]),t._v(", the operation fails. The "),a("code",[t._v("brands")]),t._v("\nof the "),a("code",[t._v("amountArray")]),t._v(" "),a("code",[t._v("amounts")]),t._v(" must all be the same as the "),a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("brand")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" issuer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" quatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIssuerKit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quatloos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldPayment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" goodAmounts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayOfNewPayments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Issuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splitMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldPayment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" goodAmounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The total amount in the amountArray must equal the original payment amount")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set original amout to 1000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" quatloosMint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mintPayment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Total amounts in badAmounts equal 20, when it should equal 1000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badAmounts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quatloosAmountMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20 does not equal 1000, so throws error")]),t._v("\nquatloosIssuer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splitMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" badAmounts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"issuer-islive-payment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issuer-islive-payment"}},[t._v("#")]),t._v(" issuer.isLive(payment)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("payment")]),t._v(" "),a("code",[t._v("{Payment}")])]),t._v(" "),a("li",[t._v("Returns: "),a("code",[t._v("{Boolean}")])])]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("true")]),t._v(" if the "),a("code",[t._v("payment")]),t._v(" was created by the issuer and has not yet been destroyed.\nIf "),a("code",[t._v("payment")]),t._v(" is a promise, the operation proceeds upon resolution.")])])}),[],!1,null,null,null);s.default=e.exports}}]);