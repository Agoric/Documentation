(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{268:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"timer-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timer-service"}},[t._v("#")]),t._v(" Timer Service")]),t._v(" "),a("h2",{attrs:{id:"description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),a("p",[t._v("There will be one or two "),a("code",[t._v("timerServices")]),t._v(" in home. One is from the chain (if\npresent), the other from the local vat. It would probably be sensible to use a\nchain-based timer for contracts, but more efficient to use the local timer\nfor operations that don't need consensus or consistency. Each "),a("code",[t._v("timerService")]),t._v("\ngives the ability to get the current time, schedule a single "),a("code",[t._v("wake()")]),t._v(" call,\ncreate a repeater that will allow scheduling of events at regular intervals,\nor remove scheduled calls.")]),t._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[t._v("The timerService's API is:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimerService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retrieve the time of the start of the current block.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentTimestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return value is the time at which the call is scheduled to take place.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setWakeup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baseTime "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remove the handler from all its scheduled wakeups, whether")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// produced by timer.setWakeup(h) or repeater.schedule(h).")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeWakeup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create and return a repeater that will schedule wake() calls repeatedly at")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// times that are a multiple of interval following baseTime. Interval is the")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delay between successive times at which wake will be called. When")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// schedule(h) is called, h.wake() will be scheduled to be called after the")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// next multiple of interval from the base. Since block times are coarse-")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// grained, the actual call may occur later, but this won't change when the")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// next event will be called.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRepeater")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delaySecs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interval "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Repeater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Repeater")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return value is the time scheduled for the first call on handler.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The handler will continue to be scheduled for a wake() call every")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// interval until the repeater is disabled.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Disable this repeater, so schedule() can't be called, and handlers")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// already scheduled with this repeater won't be rescheduled again after")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wake() is next called on them.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("disable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The time passed to wake() is the time that the call was scheduled to")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// occur.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wake")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"transcript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transcript"}},[t._v("#")]),t._v(" Transcript")]),t._v(" "),a("p",[t._v("Here's a transcript of a session showing the use of the repeater.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('command[0]  home\nhistory[0]  {"LOADING":[Promise],"gallery":[Presence o-50],"sharingService":[Presence o-51],\n"purse":[Presence o-52],"canvasStatePublisher":[Presence o-53],"contractHost":[Presence o-54],\n"chainTimerService":[Presence o-55],"sharing":[Presence o-56],"registry":[Presence o-57],"zoe":\n[Presence o-58],"localTimerService":[Presence o-59],"uploads":[Presence o-60]}\ncommand[1]  home.localTimerService~.getCurrentTimestamp()\nhistory[1]  1571782780000\ncommand[2]  home.chainTimerService~.getCurrentTimestamp()\nhistory[2]  1571782793\ncommand[3]  makeHandler = () => { let calls = 0; const args = []; return { getCalls() {\nreturn calls; }, getArgs() { return args; }, wake(arg) { args.push(arg); calls += 1; }, }; }\nhistory[3]  [Function makeHandler]\ncommand[4]  h1 = makeHandler()\nhistory[4]  {"getCalls":[Function getCalls],"getArgs":[Function getArgs],"wake":[Function wake]}\ncommand[5]  h2 = makeHandler()\nhistory[5]  {"getCalls":[Function getCalls],"getArgs":[Function getArgs],"wake":[Function wake]}\ncommand[6]  tl = home.localTimerService\nhistory[6]  [Presence o-59]\ncommand[7]  tc = home.chainTimerService\nhistory[7]  [Presence o-55]\ncommand[8]  rl = tl~.createRepeater(7, 1500)\nhistory[8]  [Presence o-64]\ncommand[9]  rc = tc~.createRepeater(7, 1)\nhistory[9]  [Presence o-65]\ncommand[10]  rl~.schedule(h1)\nhistory[10]  1571783040007\ncommand[11]  rc~.schedule(h2)\nhistory[11]  1571783051\ncommand[12]  h1.getCalls()\nhistory[12]  3\ncommand[13]  h2.getCalls()\nhistory[13]  1\n...\ncommand[22]  h1.getCalls()\nhistory[22]  50\ncommand[23]  h1.getCalls()\nhistory[23]  53\ncommand[24]  h1.getCalls()\nhistory[24]  54\ncommand[25]  tl~.getCurrentTimestamp()\nhistory[25]  1571783375000\ncommand[26]  tc~.getCurrentTimestamp()\nhistory[26]  1571783384\n')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);